From don at codesourcery.com  Mon Dec  1 19:25:23 2008
From: don at codesourcery.com (Don McCoy)
Date: Mon, 01 Dec 2008 12:25:23 -0700
Subject: [vsipl++] [patch] Use new dispatch for reduction functions
In-Reply-To: <492B6CB1.1020400@codesourcery.com>
References: <492B5DF4.3010103@codesourcery.com> <492B6CB1.1020400@codesourcery.com>
Message-ID: <49343A23.6060307@codesourcery.com>

Stefan Seefeld wrote:
> ...
>
> Otherwise this looks fine. May I suggest that we now convert the 
> signatures from "void(T &, A, ...)" to "T(A, ...)" ? This is one of 
> the syntactic features of the new dispatcher, and it makes the code 
> easier to understand.
>

Committed with those minor changes.  I'll submit a separate patch for 
the above suggestion though.


-- 
Don McCoy
don (at) CodeSourcery
(888) 776-0262 / (650) 331-3385, x712



From gawron at iitis.gliwice.pl  Mon Dec  8 19:58:09 2008
From: gawron at iitis.gliwice.pl (Piotr Gawron)
Date: Mon, 8 Dec 2008 20:58:09 +0100
Subject: vsipl++ GPL version
Message-ID: <3588b19a0812081158p4a19e393xfacbf7ef41795b91@mail.gmail.com>

Dear Sir or Madam


I'm interesting in development of quantum computation simulation
library in vsipl++. Due to academic nature of this project I'm
interested in GPL version of your library.

I would like to know if GPL version of your library fully supports
Cell Broadband Engine architecture.

I would really appreciate any information in this subject.

Sincerely
-- 
Piotr Gawron


From brooks at codesourcery.com  Mon Dec  8 21:46:31 2008
From: brooks at codesourcery.com (Brooks Moses)
Date: Mon, 08 Dec 2008 13:46:31 -0800
Subject: [vsipl++] vsipl++ GPL version
In-Reply-To: <3588b19a0812081158p4a19e393xfacbf7ef41795b91@mail.gmail.com>
References: <3588b19a0812081158p4a19e393xfacbf7ef41795b91@mail.gmail.com>
Message-ID: <493D95B7.7060502@codesourcery.com>

Piotr,

Piotr Gawron wrote, at 12/8/2008 11:58 AM:
> I'm interesting in development of quantum computation simulation
> library in vsipl++. Due to academic nature of this project I'm
> interested in GPL version of your library.
> 
> I would like to know if GPL version of your library fully supports
> Cell Broadband Engine architecture.

Thank you for your interest in Sourcery VSIPL++!

At this point in time, Sourcery VSIPL++ for Cell/B.E. requires the Cell
Math Library to provide the required backend for full support of the
Cell/B.E. architecture.  The Cell Math Library is only available in a
commercial license; contact sales at codesourcery.com for details on that.
However, since the VSIPL++ API (and the Sourcery VSIPL++ implementation
of it) are portable across platforms, you could of course use Sourcery
VSIPL++ and CML on the Cell/B.E., and still distribute your application
source code for use on other platforms where we do have a pure-GPL
solution.

Also, I believe our sales department has been considering offering
low-cost academic licensing for the full Sourcery VSIPL++ and Cell Math
Library package.  If you're interested in that, please send information
about your project and your needs to sales at codesourcery.com.

Alternately, you can compile the GPL version of Sourcery VSIPL++ to use
the FFTW library as a backend for FFT computations.  This will provide
access to the Cell/B.E. support included in version 3.2 of FFTW, and
will run other computations on the PPUs.  Although this isn't full
support, it may be useful for you depending on the particular needs of
your computations.  (I should also note the caveat that our most recent
GPL release of Sourcery VSIPL++ was only tested against FFTW 3.1;
although we don't expect any problems with compiling it against FFTW
3.2, we obviously can't guarantee that it works perfectly.)

Thanks,
- Brooks


From jules at codesourcery.com  Thu Dec 11 14:50:57 2008
From: jules at codesourcery.com (Jules Bergmann)
Date: Thu, 11 Dec 2008 09:50:57 -0500
Subject: [patch] Misc changes
Message-ID: <494128D1.2010302@codesourcery.com>

A couple of minor changes/fixes.

Patch applied.

			-- Jules

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: misc.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20081211/26796f77/attachment.ksh>

From jules at codesourcery.com  Thu Dec 11 14:56:19 2008
From: jules at codesourcery.com (Jules Bergmann)
Date: Thu, 11 Dec 2008 09:56:19 -0500
Subject: [patch] Split cholesky tests
Message-ID: <49412A13.3010204@codesourcery.com>

This patch has been smoldering in my local checkout for some time.

It splits the cholesky test up into smaller pieces (which makes 
compilers happy when real memory is in short supply or virtual memory 
nonexistant).

Patch applied.

				-- Jules

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: chol.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20081211/c7291f48/attachment.ksh>

From gmendola at mbigroup.it  Fri Dec 12 15:53:17 2008
From: gmendola at mbigroup.it (Gaetano Mendola)
Date: Fri, 12 Dec 2008 16:53:17 +0100
Subject: hypot function throw specification mismatch
Message-ID: <494288ED.1070702@mbigroup.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi all,
I'm evaluating the use of vsip and until today I have used the version 1.4.

Today I did an upgrade to version 2.0 but I'm obtaining the following error at compile time:


g++ -DHAVE_CONFIG_H -I. -I/home/kalman/svn_store/FastConvolution/project/linux/kdevelop/Libraries -I.. -I/home/kalman/svn_store/FastConvolution/project/linux/kdevelop/Support -Weffc++ -Wall -pedantic -O2 -g0 -MT fftfactory.lo -MD -MP -MF .deps/fftfactory.Tpo -c /home/kalman/svn_store/FastConvolution/project/linux/kdevelop/Libraries/fftfactory.cpp -fPIC -DPIC -o .libs/fftfactory.o
In file included from /usr/local/include/vsip/core/fns_elementwise.hpp:20,
from /usr/local/include/vsip/opt/expr/lf_initfini.hpp:28,
from /usr/local/include/vsip/core/block_copy.hpp:20,
from /usr/local/include/vsip/core/extdata.hpp:23,
from /usr/local/include/vsip/core/fast_block.hpp:25,
from /usr/local/include/vsip/core/fft/util.hpp:19,
from /usr/local/include/vsip/core/fft/factory.hpp:23,
from /usr/local/include/vsip/core/fft.hpp:21,
from /usr/local/include/vsip/signal.hpp:18,
from /home/kalman/svn_store/FastConvolution/project/linux/kdevelop/Libraries/fouriertransformer.h:13,
from /home/kalman/svn_store/FastConvolution/project/linux/kdevelop/Libraries/fftfactory.h:11,
from /home/kalman/svn_store/FastConvolution/project/linux/kdevelop/Libraries/fftfactory.cpp:6:
/usr/local/include/vsip/core/fns_scalar.hpp:32: error: declaration of 'double hypot(double, double)' throws different exceptions
/usr/include/bits/mathcalls.h:163: error: from previous declaration 'double hypot(double, double) throw ()'

is this a known issue?

kalman at gmendola-nb:~$ g++ --version
g++ (GCC) 4.2.4 (Ubuntu 4.2.4-1ubuntu3)
Copyright (C) 2007 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

kalman at gmendola-nb:~$ cat /etc/issue
Ubuntu 8.04.1 \n \l



Regards
Gaetano Mendola
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJQojt7UpzwH2SGd4RAp1LAKC2XpC8U2zYczMI24R/IXWg4Var5ACguOFW
yKpkelU8XopOmU52xROGTJg=
=tJRK
-----END PGP SIGNATURE-----


From stefan at codesourcery.com  Fri Dec 12 18:05:39 2008
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Fri, 12 Dec 2008 13:05:39 -0500
Subject: [vsipl++] hypot function throw specification mismatch
In-Reply-To: <494288ED.1070702@mbigroup.it>
References: <494288ED.1070702@mbigroup.it>
Message-ID: <4942A7F3.7000601@codesourcery.com>

Gaetano,

thank you for your interest into Sourcery VSIPL++ !

No, this isn't a known issue, but it was simple enough to identify the 
cause (a bug in the autoconf script).

Please find attached a patch to configure.ac, which should solve the 
issue you are seeing. Please let me know whether that works.

Thanks,
		Stefan



-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: configure.ac.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20081212/0ee426ed/attachment.ksh>

From gmendola at mbigroup.it  Mon Dec 15 11:51:15 2008
From: gmendola at mbigroup.it (Gaetano Mendola)
Date: Mon, 15 Dec 2008 12:51:15 +0100
Subject: vsip::Matrix Segmentation Fault (was Re: [vsipl++] hypot function
 throw specification mismatch )
In-Reply-To: <4942A7F3.7000601@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com>
Message-ID: <494644B3.9080708@mbigroup.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi Stefan,
the patch you provided resolves the compiling problem.

This morning running our regression tests using vsip 2.0 (last used was
1.4) I experienced a Segmentation fault.
Digging in the problem I was able to isolate the faulty code and I was
able to create a distilled application that show the problem.

$ cat main.cpp

#include <vsip/math.hpp>

int main() {
   typedef vsip::complex<float> Complex;
   vsip::Matrix<Complex> myMatrix(3, 65537);

   return 0;
}

$ g++ -g -O0 main.cpp -lsvpp -o test

$ ./test
Segmentation fault (core dumped)

$ gdb ./test core
GNU gdb 6.8-debian
Copyright (C) 2008 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu"...

warning: Can't read pathname for load map: Input/output error.
Reading symbols from /usr/lib/libstdc++.so.6...done.
Loaded symbols for /usr/lib/libstdc++.so.6
Reading symbols from /lib/tls/i686/cmov/libm.so.6...done.
Loaded symbols for /lib/tls/i686/cmov/libm.so.6
Reading symbols from /lib/libgcc_s.so.1...done.
Loaded symbols for /lib/libgcc_s.so.1
Reading symbols from /lib/tls/i686/cmov/libc.so.6...done.
Loaded symbols for /lib/tls/i686/cmov/libc.so.6
Reading symbols from /lib/ld-linux.so.2...done.
Loaded symbols for /lib/ld-linux.so.2
Core was generated by `./test'.
Program terminated with signal 11, Segmentation fault.
[New process 18042]
#0  0x080496d5 in vsip::impl::Memory_pool::allocate<std::complex<float> > (this=0x0, size=196611) at /usr/local/include/vsip/core/memory_pool.hpp:50
50        { return (T*)(impl_allocate(size * sizeof(T))); }
(gdb) bt
#0  0x080496d5 in vsip::impl::Memory_pool::allocate<std::complex<float> > (this=0x0, size=196611) at /usr/local/include/vsip/core/memory_pool.hpp:50
#1  0x080498be in Dense_storage (this=0x804d008, pool=0x0, size=196611, buffer=0x0) at /usr/local/include/vsip/dense.hpp:312
#2  0x08049940 in Dense_impl (this=0x804d008, dom=@0xbff45be4, map=@0xbff45c7c) at /usr/local/include/vsip/dense.hpp:1360
#3  0x080499dd in Dense (this=0x804d008, dom=@0xbff45be4, map=@0xbff45c7c) at /usr/local/include/vsip/dense.hpp:747
#4  0x08049a7d in const_Matrix (this=0xbff45c80, num_rows=3, num_cols=65537, map=@0xbff45c7c) at /usr/local/include/vsip/matrix.hpp:93
#5  0x08049afa in impl_View (this=0xbff45c80, len1=3, len2=65537, map=@0xbff45c7c) at /usr/local/include/vsip/core/view_traits.hpp:316
#6  0x08049b22 in Matrix (this=0xbff45c80, num_rows=3, num_cols=65537, map=@0xbff45c7c) at /usr/local/include/vsip/matrix.hpp:214
#7  0x0804943e in main () at main.cpp:5


if you need I can provide you further informations.


Regards
Gaetano Mendola



Stefan Seefeld wrote:
> Gaetano,
> 
> thank you for your interest into Sourcery VSIPL++ !
> 
> No, this isn't a known issue, but it was simple enough to identify the
> cause (a bug in the autoconf script).
> 
> Please find attached a patch to configure.ac, which should solve the
> issue you are seeing. Please let me know whether that works.
> 
> Thanks,
>         Stefan
> 
> 
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJRkSy7UpzwH2SGd4RApPtAKCqaYUTeTuLO6iGVIuuW1s7JjRMtACdEIii
vmnipJr++OVGrJTpGjktXKE=
=ezyS
-----END PGP SIGNATURE-----


From stefan at codesourcery.com  Mon Dec 15 12:57:07 2008
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Mon, 15 Dec 2008 07:57:07 -0500
Subject: [vsipl++] vsip::Matrix Segmentation Fault (was Re: [vsipl++]
 hypot function throw specification mismatch )
In-Reply-To: <494644B3.9080708@mbigroup.it>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <494644B3.9080708@mbigroup.it>
Message-ID: <49465423.7040102@codesourcery.com>

Gaetano,

Gaetano Mendola wrote:

> Hi Stefan,
> the patch you provided resolves the compiling problem.

That's good to hear.

> This morning running our regression tests using vsip 2.0 (last used was
> 1.4) I experienced a Segmentation fault.
> Digging in the problem I was able to isolate the faulty code and I was
> able to create a distilled application that show the problem.
> 
> $ cat main.cpp
> 
> #include <vsip/math.hpp>
> 
> int main() {

int main(int argc, char **argv) {


>    typedef vsip::complex<float> Complex;

You should initialize the library here, using e.g.

vsip::vsipl init(argc, argv);

>    vsip::Matrix<Complex> myMatrix(3, 65537);

Without the library initialization above this may fail because the 
library's memory allocator isn't set up.

>    return 0;
> }

Regards,
		Stefan


-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From gmendola at mbigroup.it  Mon Dec 15 15:02:34 2008
From: gmendola at mbigroup.it (Gaetano Mendola)
Date: Mon, 15 Dec 2008 16:02:34 +0100
Subject: [vsipl++] vsip::Matrix Segmentation Fault (was Re: [vsipl++]
 hypot function throw specification mismatch )
In-Reply-To: <49465423.7040102@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <494644B3.9080708@mbigroup.it> <49465423.7040102@codesourcery.com>
Message-ID: <4946718A.3000907@mbigroup.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Thank you,
unfortunately our old code didn't initialize the library,
the  problem is now gone.

Regards
Gaetano Mendola


Stefan Seefeld wrote:
> Gaetano,
> 
> Gaetano Mendola wrote:
> 
>> Hi Stefan,
>> the patch you provided resolves the compiling problem.
> 
> That's good to hear.
> 
>> This morning running our regression tests using vsip 2.0 (last used was
>> 1.4) I experienced a Segmentation fault.
>> Digging in the problem I was able to isolate the faulty code and I was
>> able to create a distilled application that show the problem.
>>
>> $ cat main.cpp
>>
>> #include <vsip/math.hpp>
>>
>> int main() {
> 
> int main(int argc, char **argv) {
> 
> 
>>    typedef vsip::complex<float> Complex;
> 
> You should initialize the library here, using e.g.
> 
> vsip::vsipl init(argc, argv);
> 
>>    vsip::Matrix<Complex> myMatrix(3, 65537);
> 
> Without the library initialization above this may fail because the
> library's memory allocator isn't set up.
> 
>>    return 0;
>> }
> 
> Regards,
>         Stefan
> 
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJRnGJ7UpzwH2SGd4RAroGAJ9x2IJzRKnWwCbUbIc2qFujElicVQCfbYl0
LJdIPdncyUyzBtMQUh3RtUM=
=PWy2
-----END PGP SIGNATURE-----


From don at codesourcery.com  Mon Dec 15 21:52:43 2008
From: don at codesourcery.com (Don McCoy)
Date: Mon, 15 Dec 2008 14:52:43 -0700
Subject: [patch, committed] Fix cases calling backend directly.
Message-ID: <4946D1AB.8000504@codesourcery.com>

This patch corrects two benchmarks where they call an evaluator directly 
rather than going through the dispatcher.

Committed as obvious.

-- 
Don McCoy
don (at) CodeSourcery
(888) 776-0262 / (650) 331-3385, x712

-------------- next part --------------
A non-text attachment was scrubbed...
Name: eval.diff
Type: text/x-diff
Size: 2671 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20081215/a8a2cf00/attachment.diff>

From gmendola at mbigroup.it  Tue Dec 16 11:06:48 2008
From: gmendola at mbigroup.it (Gaetano Mendola)
Date: Tue, 16 Dec 2008 12:06:48 +0100
Subject: Configure syntax error ( was Re: [vsipl++] hypot function throw specification
 mismatch )
In-Reply-To: <4942A7F3.7000601@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com>
Message-ID: <49478BC8.9060000@mbigroup.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

As I already told you the patch works, however applying that patch and building
vsipl on another linux distribution/architecture I'm getting error around the
end of compile phase (it goes all fine without patch).

$ ./configure
[...]

Configure goes well.

$ make
[...]
configure: fftw3 config options: --disable-dependency-tracking --silent --disable-fortran --host=i686-pc-linux-gnu --build=i686-pc-linux-gnu .
===============================================================
configure: Configuring fftw3f (float).
configure: extra config options: '--enable-sse'.
appending configuration tag "CXX" to libtool
appending configuration tag "F77" to libtool
configure: Configuring fftw3 (double).
configure: extra config options: '--enable-sse2'.
appending configuration tag "CXX" to libtool
appending configuration tag "F77" to libtool
configure: Configuring fftw3l (long double).
configure: extra config options: ''.
appending configuration tag "CXX" to libtool
appending configuration tag "F77" to libtool
===============================================================
Built-in FFTW3 configures successful.
configure: Will link with  -lfftw3f -lfftw3 -lfftw3l.
./configure: line 11190: syntax error near unexpected token `PAS,'
./configure: line 11190: `            PKG_CHECK_MODULES(PAS, pas)'
make: *** [config.status] Error 2



Regards
Gaetano Mendola



Stefan Seefeld wrote:
> Gaetano,
> 
> thank you for your interest into Sourcery VSIPL++ !
> 
> No, this isn't a known issue, but it was simple enough to identify the
> cause (a bug in the autoconf script).
> 
> Please find attached a patch to configure.ac, which should solve the
> issue you are seeing. Please let me know whether that works.
> 
> Thanks,
>         Stefan
> 
> 
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJR4vI7UpzwH2SGd4RAvjxAKDDkqRAWZtphAreQ2kV1eGaLJjQ+QCcDSXQ
A3miNaESgdicobWP8qkSF2k=
=UfU7
-----END PGP SIGNATURE-----


From stefan at codesourcery.com  Tue Dec 16 13:01:31 2008
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 16 Dec 2008 08:01:31 -0500
Subject: [vsipl++] Configure syntax error ( was Re: [vsipl++] hypot function
 throw specification mismatch )
In-Reply-To: <49478BC8.9060000@mbigroup.it>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <49478BC8.9060000@mbigroup.it>
Message-ID: <4947A6AB.5040405@codesourcery.com>

Gaetano Mendola wrote:

> As I already told you the patch works, however applying that patch and building
> vsipl on another linux distribution/architecture I'm getting error around the
> end of compile phase (it goes all fine without patch).

[...]


> ./configure: line 11190: syntax error near unexpected token `PAS,'
> ./configure: line 11190: `            PKG_CHECK_MODULES(PAS, pas)'
> make: *** [config.status] Error 2

The error is not related to the patch itself, but to the fact that this 
triggered the regeneration of configure from configure.ac, which 
requires tools that you may not have installed. In particular, the 
PKG_CHECK_MODULES macro definition comes from the pkg-config tool.

Regards,
		Stefan


-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From jules at codesourcery.com  Tue Dec 16 15:57:53 2008
From: jules at codesourcery.com (Jules Bergmann)
Date: Tue, 16 Dec 2008 10:57:53 -0500
Subject: [vsipl++] Configure syntax error ( was Re: [vsipl++] hypot function
 throw specification mismatch )
In-Reply-To: <4947A6AB.5040405@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <49478BC8.9060000@mbigroup.it> <4947A6AB.5040405@codesourcery.com>
Message-ID: <4947D001.1030802@codesourcery.com>

Stefan,

Can you send Gaetano a generated configure file?

			-- Jules

Stefan Seefeld wrote:
> Gaetano Mendola wrote:
> 
>> As I already told you the patch works, however applying that patch and 
>> building
>> vsipl on another linux distribution/architecture I'm getting error 
>> around the
>> end of compile phase (it goes all fine without patch).
> 
> [...]
> 
> 
>> ./configure: line 11190: syntax error near unexpected token `PAS,'
>> ./configure: line 11190: `            PKG_CHECK_MODULES(PAS, pas)'
>> make: *** [config.status] Error 2
> 
> The error is not related to the patch itself, but to the fact that this 
> triggered the regeneration of configure from configure.ac, which 
> requires tools that you may not have installed. In particular, the 
> PKG_CHECK_MODULES macro definition comes from the pkg-config tool.
> 
> Regards,
>         Stefan
> 
> 


-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


From stefan at codesourcery.com  Tue Dec 16 16:01:20 2008
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 16 Dec 2008 11:01:20 -0500
Subject: [vsipl++] Configure syntax error ( was Re: [vsipl++] hypot function
 throw specification mismatch )
In-Reply-To: <4947D001.1030802@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <49478BC8.9060000@mbigroup.it> <4947A6AB.5040405@codesourcery.com> <4947D001.1030802@codesourcery.com>
Message-ID: <4947D0D0.6010801@codesourcery.com>

Jules Bergmann wrote:
> Stefan,
> 
> Can you send Gaetano a generated configure file?

Sure, here it is.

Regards,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: configure
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20081216/d9f1aeb4/attachment.ksh>

From gmendola at mbigroup.it  Tue Dec 16 17:46:09 2008
From: gmendola at mbigroup.it (Gaetano Mendola)
Date: Tue, 16 Dec 2008 18:46:09 +0100
Subject: [vsipl++] Configure syntax error ( was Re: [vsipl++] hypot function
 throw specification mismatch )
In-Reply-To: <4947A6AB.5040405@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <49478BC8.9060000@mbigroup.it> <4947A6AB.5040405@codesourcery.com>
Message-ID: <4947E961.1040806@mbigroup.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Stefan Seefeld wrote:
> Gaetano Mendola wrote:
> 
>> As I already told you the patch works, however applying that patch and
>> building
>> vsipl on another linux distribution/architecture I'm getting error
>> around the
>> end of compile phase (it goes all fine without patch).
> 
> [...]
> 
> 
>> ./configure: line 11190: syntax error near unexpected token `PAS,'
>> ./configure: line 11190: `            PKG_CHECK_MODULES(PAS, pas)'
>> make: *** [config.status] Error 2
> 
> The error is not related to the patch itself, but to the fact that this
> triggered the regeneration of configure from configure.ac, which
> requires tools that you may not have installed. In particular, the
> PKG_CHECK_MODULES macro definition comes from the pkg-config tool.

Sorry to my late reply, you are correct, I installed that package and
the issue is gone.

Gaetano


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJR+lh7UpzwH2SGd4RAtIBAJ4wuFFMKsP1yXhn0ob3T4K3b3LSPQCg06DR
miLLXx/Snn9X1JtyjkRExqA=
=7uds
-----END PGP SIGNATURE-----


From gmendola at mbigroup.it  Tue Dec 16 17:54:33 2008
From: gmendola at mbigroup.it (Gaetano Mendola)
Date: Tue, 16 Dec 2008 18:54:33 +0100
Subject: [vsipl++] Configure syntax error ( was Re: [vsipl++] hypot function
 throw specification mismatch )
In-Reply-To: <4947D0D0.6010801@codesourcery.com>
References: <494288ED.1070702@mbigroup.it> <4942A7F3.7000601@codesourcery.com> <49478BC8.9060000@mbigroup.it> <4947A6AB.5040405@codesourcery.com> <4947D001.1030802@codesourcery.com> <4947D0D0.6010801@codesourcery.com>
Message-ID: <4947EB59.8010002@mbigroup.it>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Thank you Stefan,
I had to reply sooner to your suggestion to install that package,
in order to avoid you that work.
Unfortunately I had a Xeon based computer installed with a 32bit
OS and I had a degradation of performance (half than it was used
to be) and I was all the day long one step away from having an
heart attack and I spent almost all the day to first found the
problem and then reinstall the OS.

Regards
Gaetano Mendola


Stefan Seefeld wrote:
> Jules Bergmann wrote:
>> Stefan,
>>
>> Can you send Gaetano a generated configure file?
> 
> Sure, here it is.
> 
> Regards,
>         Stefan
> 

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFJR+tZ7UpzwH2SGd4RAuoEAJ9IX88bnO7/NL92N5pY6JqfTAD2nwCfUtPt
P1fWXNBoyyOqGMPmYugewl0=
=q8VI
-----END PGP SIGNATURE-----


From jules at codesourcery.com  Wed Dec 24 13:39:13 2008
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 24 Dec 2008 08:39:13 -0500
Subject: [patch] Fix stride for CBE float vmul
Message-ID: <49523B81.4000204@codesourcery.com>

Stride is passed down in elements, not bytes!

Patch applied.

				-- jules
-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: vmul.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20081224/76f08a95/attachment.ksh>

From don at codesourcery.com  Wed Dec 24 19:24:06 2008
From: don at codesourcery.com (Don McCoy)
Date: Wed, 24 Dec 2008 12:24:06 -0700
Subject: [vsipl++] [patch] Fix stride for CBE float vmul
In-Reply-To: <49523B81.4000204@codesourcery.com>
References: <49523B81.4000204@codesourcery.com>
Message-ID: <49528C56.3060609@codesourcery.com>

Jules Bergmann wrote:
> Stride is passed down in elements, not bytes!
>
>
This looks good, but I had a couple of minor questions/comments.


> Index: tests/regressions/large_vmul.cpp
> ===================================================================
> --- tests/regressions/large_vmul.cpp	(revision 230289)
> +++ tests/regressions/large_vmul.cpp	(working copy)
> @@ -46,8 +46,8 @@
>    Vector<T, block_type> Z(size);
>  
>    Rand<T> gen(0, 0);
> -  A = gen.randu(size);
> -  B = gen.randu(size);
> +//  A = gen.randu(size);
> +//  B = gen.randu(size);
>   
Did you mean to leave this commented out?

>  
> @@ -61,7 +61,7 @@
>        std::cout << "A(i) * B(i) = " << A(i) * B(i) << std::endl;
>      }
>  #endif
> -    test_assert(almost_equal(Z(i), A(i) * B(i)));
> +    test_assert(almost_equal(Z.get(i), A(i) * B(i)));
>   
For consistency, should we use .get for all accesses (or drop it)?  I 
guess for tests we ought to always use it, in my opinion.

-- 
Don McCoy
don (at) CodeSourcery
(888) 776-0262 / (650) 331-3385, x712



From jules at codesourcery.com  Wed Dec 24 19:28:16 2008
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 24 Dec 2008 14:28:16 -0500
Subject: [vsipl++] [patch] Fix stride for CBE float vmul
In-Reply-To: <49528C56.3060609@codesourcery.com>
References: <49523B81.4000204@codesourcery.com> <49528C56.3060609@codesourcery.com>
Message-ID: <49528D50.2040004@codesourcery.com>

Don McCoy wrote:
> Jules Bergmann wrote:
>> Stride is passed down in elements, not bytes!
>>
>>
> This looks good, but I had a couple of minor questions/comments.

Don,

Thanks for looking over this!


>>    Rand<T> gen(0, 0);
>> -  A = gen.randu(size);
>> -  B = gen.randu(size);
>> +//  A = gen.randu(size);
>> +//  B = gen.randu(size);
>>   
> Did you mean to leave this commented out?

Good catch!  No, I didn't mean to leave this in, but I made a second 
silent checkin afterwards that fixed it.

> 
>>  
>> @@ -61,7 +61,7 @@
>>        std::cout << "A(i) * B(i) = " << A(i) * B(i) << std::endl;
>>      }
>>  #endif
>> -    test_assert(almost_equal(Z(i), A(i) * B(i)));
>> +    test_assert(almost_equal(Z.get(i), A(i) * B(i)));
>>   
> For consistency, should we use .get for all accesses (or drop it)?  I 
> guess for tests we ought to always use it, in my opinion.

Using get() is probably best.

Here it is a correctness issue.  If A is split complex, A(i) returns an 
Lvalue_proxy, and no operator*() can be found to handle it.  Using 
A.get(i) returns a complex, and all is fine.

				-- Jules


-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


From jules at codesourcery.com  Wed Dec 24 20:10:03 2008
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 24 Dec 2008 15:10:03 -0500
Subject: [vsipl++] [patch] Fix stride for CBE float vmul
In-Reply-To: <49528D50.2040004@codesourcery.com>
References: <49523B81.4000204@codesourcery.com> <49528C56.3060609@codesourcery.com> <49528D50.2040004@codesourcery.com>
Message-ID: <4952971B.6060608@codesourcery.com>


> Here it is a correctness issue.  If A is split complex, A(i) returns an 
> Lvalue_proxy, and no operator*() can be found to handle it.  Using 
> A.get(i) returns a complex, and all is fine.

Oops!  Scratch that answer, Stefan reports that Fast_blocks (which I'm 
using) don't have operator() enabled.

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


