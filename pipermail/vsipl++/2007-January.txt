From don at codesourcery.com  Wed Jan  3 00:48:41 2007
From: don at codesourcery.com (Don McCoy)
Date: Tue, 02 Jan 2007 17:48:41 -0700
Subject: [patch] functional code for SPE-based vector multiply
Message-ID: <459AFD69.6080805@codesourcery.com>

This patch builds on the dispatch added by Stefan.  Specifically, it:

    * Encapsulates the initialization and shutdown code for setting up
      the SPE
    * Separates the sending of the data from the command to actually do
      the multiplication
    * Actually multiplies the vectors (not using intrinsics, but this is
      a simple change)


The second bullet describes a feature that may be important for our 
convolution example.  This potentially avoids sending the data across 
the bus multiple times in order to do all three operations (FFT, 
vector-multiply and IFFT).

Regards,

-- 
Don McCoy
don (at) CodeSourcery
(888) 776-0262 / (650) 331-3385, x712

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: vmul.changes
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070102/436a7781/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: vmul.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070102/436a7781/attachment-0001.ksh>

From stefan at codesourcery.com  Wed Jan  3 02:33:22 2007
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 02 Jan 2007 21:33:22 -0500
Subject: [vsipl++] [patch] functional code for SPE-based vector multiply
In-Reply-To: <459AFD69.6080805@codesourcery.com>
References: <459AFD69.6080805@codesourcery.com>
Message-ID: <459B15F2.6070601@codesourcery.com>

Don McCoy wrote:
> This patch builds on the dispatch added by Stefan.  Specifically, it:
> 
>    * Encapsulates the initialization and shutdown code for setting up
>      the SPE
>    * Separates the sending of the data from the command to actually do
>      the multiplication
>    * Actually multiplies the vectors (not using intrinsics, but this is
>      a simple change)

Very nice !

Here is one high-level comment, as well as (as usual ;-) ) some nit-picking:

> +Elementwise_vmul::Elementwise_vmul()
> +{
> +  gid_ = spe_create_group(SCHED_OTHER, 0, 1);
> +  if (gid_ == NULL) 
> +  {
> +    std::cerr << "Failed spe_create_group(errno=" << errno << ")" << std::endl;
> +    return;
> +  }

We shouldn't write to std::cerr here. Instead, we should define some exception
type that would be thrown in case of error.

[...]


> +
> +static Elementwise_vmul elementwise_vmul;

The Elementwise_vmul object should be allocated from inside the global vsipl object.
This also gives us the opportunity to handle Cell-specific command-line options, such
as define the concurrency level, or different dispatch strategies.

However, doing that requires the type to become truely generic, such that...

> +template <typename T>
> +void Elementwise_vmul::apply(T const *A, T const *B, T *R, length_type len)

...this becomes a generic call, taking some 'op-code' parameter that indicates
what operation to perform.

> +  volatile command_block cb __attribute__ ((aligned (128)));
> +  volatile data_block db[3] __attribute__ ((aligned (128)));
> +
> +  speid_t speid = elementwise_vmul.speid_;
> +
> +  // pass data blocks to SPE
> +  {
> +    db[0].element_size = sizeof(float);

Does this mean you assume the template parameter T is now float ?

Finally, this...

> +class Elementwise_vmul
> +{
> +public:
> +  Elementwise_vmul();
> +  ~Elementwise_vmul();
> +
> +  template <typename T>
> +  static void apply(T const *A, T const *B, T *R, length_type len);
> +
> +private:
> +  spe_gid_t gid_;
> +  speid_t speid_;
> +  int status_;
> +};

...can become as generic as:

class SPE
{
public:
  enum Op_code {..., vmul, vadd, fft_fwd, rfft_fwd, ...};

  SPE();
  ~SPE();
  template <typename R, typename A, typename B, ...>
  void call(Op_code, R, A, B, ...);
};


And this...

> +  Elementwise_vmul::apply(A, B, R, len);

...then becomes

SPE *spe = get_target_spe(SPE::vmul);
spe->call(SPE::vmul, r, a, b);


With that all the work is encapsulated into the 'get_target_spe()'
function (where we can determine which SPE is most fit for the call,
based on what is currently loaded there), as well as
SPE::call() (where we can determine what needs to be done to prepare
the SPE in order to execute this operation).

Thanks,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From mark at codesourcery.com  Wed Jan  3 02:49:58 2007
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 02 Jan 2007 18:49:58 -0800
Subject: [vsipl++] [patch] functional code for SPE-based vector multiply
In-Reply-To: <459B15F2.6070601@codesourcery.com>
References: <459AFD69.6080805@codesourcery.com> <459B15F2.6070601@codesourcery.com>
Message-ID: <459B19D6.4080906@codesourcery.com>

Stefan Seefeld wrote:

> SPE *spe = get_target_spe(SPE::vmul);
> spe->call(SPE::vmul, r, a, b);

Shouldn't that return a set of SPEs?  You may want to distribute the
vmul over multiple SPEs, since each row/column is independent.

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From don at codesourcery.com  Mon Jan  8 18:57:23 2007
From: don at codesourcery.com (Don McCoy)
Date: Mon, 08 Jan 2007 11:57:23 -0700
Subject: [Fwd: Re: [vsipl++] I'm having trouble using Sourcery VSIPL++]
Message-ID: <45A29413.50708@codesourcery.com>

Dear sir,

Did you get a chance to rebuild the examples after taking Stefan's 
suggestions into account?

We are hoping you resolved your issues and were able to try VSIPL++ for 
whatever problem you are trying to solve.  Also, if you are able to 
share your reasons for being interested in VSIPL++, this feedback would 
be appreciated and help us improve the library in the future.

Looking forward to hearing from you.

Regards,

-- 
Don McCoy
don (at) CodeSourcery
(888) 776-0262 / (650) 331-3385, x712

-------------- next part --------------
An embedded message was scrubbed...
From: Stefan Seefeld <stefan at codesourcery.com>
Subject: Re: [vsipl++] I'm having trouble using Sourcery VSIPL++
Date: Thu, 28 Dec 2006 17:42:37 -0500
Size: 3089
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070108/08c12ee5/attachment.mht>

From don at codesourcery.com  Thu Jan 11 03:08:14 2007
From: don at codesourcery.com (Don McCoy)
Date: Wed, 10 Jan 2007 20:08:14 -0700
Subject: [patch] BSD License
Message-ID: <45A5AA1E.9090002@codesourcery.com>

Committed.

-- 
Don McCoy
don (at) CodeSourcery
(888) 776-0262 / (650) 331-3385, x712

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: bsd.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070110/5a6d4c69/attachment.ksh>

From stefan at codesourcery.com  Wed Jan 24 18:01:13 2007
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Wed, 24 Jan 2007 13:01:13 -0500
Subject: patch: Enhance ref-manual generation
Message-ID: <45B79EE9.7060206@codesourcery.com>

The attached patch adds a new convenience header to 'include all'
standard headers. This makes it much easier to extract documentation.
The patch is checked in.

Thanks,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718
-------------- next part --------------
A non-text attachment was scrubbed...
Name: doc.patch
Type: text/x-patch
Size: 2003 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070124/f891908a/attachment.bin>

From jules at codesourcery.com  Wed Jan 24 20:50:21 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 24 Jan 2007 15:50:21 -0500
Subject: [patch] Fix subset of subsets; fix IPP FIR backend bug
Message-ID: <45B7C68D.9050809@codesourcery.com>

This patch fixes two bugs:

First, it fixes handling of subset views of distributed subset views. 
Previously this worked, but my recent patch to support more arbitrary 
distributed subset views broke this.

The fix is to add a specialization of Map_subdomain for Subset_map. 
However, this created a header dependency loop between subset_map.hpp, 
vector.hpp, and subblock.hpp, because maps' processor_set function 
returns a vector.  I broke this loop by moving forward declarations of 
views into view_fwd.hpp, and by splitting subset_map.hpp into 
subset_map_decl.hpp and subset_map.hpp.  subset_map_decl.hpp contains 
the core declarations of subset_map.hpp, but does not actually require a 
definition of Vector.  subblock.hpp now includes subset_map_decl.hpp.

A new regression test (regressions/subset.cpp) covers this case.

Second, it fixes a bug in the IPP FIR backend, which was not mirroring 
symmetric kernels properly.

Patch applied.

				-- Jules




-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: subset.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070124/6208e12a/attachment.ksh>

From jules at codesourcery.com  Thu Jan 25 16:19:37 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Thu, 25 Jan 2007 11:19:37 -0500
Subject: [patch] Ref-impl changes
Message-ID: <45B8D899.4090004@codesourcery.com>

Some final changes for the reference impl

  - don't put non-BSD cpp files into cxx_sources when
    building ref-impl.

  - guard an include of opt/parallel/foreach

  - avoid putting '-lvsip_csl' in vsipl++.pc and context.in
    when building ref-impl.

Patch applied.

				-- Jules

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ri.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070125/bb70f88c/attachment.ksh>

From jules at codesourcery.com  Tue Jan 30 05:15:47 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Tue, 30 Jan 2007 00:15:47 -0500
Subject: [patch] Ref-impl and C-VSIP bits
Message-ID: <45BED483.3000502@codesourcery.com>

This patch

- Adds configure support for building ref-impl and C-VSIP BE binary 
packages.  These are intended for testing, and not to be distributed, 
since they contain links to installed libraries that may not be present 
on all machines (such as a C-VSIP library).

- Improves Ext_data_dist's ability to handle distributed expression 
blocks.  In particular, the sync type was changed from a run-time 
parameter to a compile parameter.  Also a bug where the same buffer was 
used for both a Us_block and an underlying Ext_data object was fixed.

- Adds a new block trait 'Is_modifiable_block', and uses it to determine 
if a block copy from a data pointer to a block is possible.  Previously 
the constness of the block was used for this, but this is not general 
(for example, it fails for subviews of expressions).  New unit test 
included.

- Fixes the C-VSIP Convolution implementation to adjust the values 
returned by the underlying C-VSIP implementation in several cases.

With this patch:
  - All ref-impl tests pass for ref-impl
  - All tests pass using the C-VSIP BE, with the exception of solver-lu
  - All tests pass using the IPP/MKL BE (... so far!)

I'm going to kick off a test build tonight, than update the quickstart 
docs and build a full release tomorrow.

				-- Jules


-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: cvsipbe.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070130/01fc819e/attachment.ksh>

From jules at codesourcery.com  Tue Jan 30 15:12:15 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Tue, 30 Jan 2007 10:12:15 -0500
Subject: [patch] Quickstart updates for ref-impl
Message-ID: <45BF604F.1050808@codesourcery.com>

Also, what list should I CC csl-docbook patches to?
-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qs.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070130/7e7633ce/attachment.ksh>

From stefan at codesourcery.com  Tue Jan 30 15:24:15 2007
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 30 Jan 2007 10:24:15 -0500
Subject: [vsipl++] [patch] Quickstart updates for ref-impl
In-Reply-To: <45BF604F.1050808@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com>
Message-ID: <45BF631F.1000601@codesourcery.com>

Jules Bergmann wrote:
> Also, what list should I CC csl-docbook patches to?

gnu-internal seems to be the closest match. (I will CC it as I raise
a docbook-related question.)

> Index: doc/quickstart/quickstart.xml
> ===================================================================
> --- doc/quickstart/quickstart.xml	(revision 161463)
> +++ doc/quickstart/quickstart.xml	(working copy)
> @@ -9,6 +9,7 @@
>  [
>   <!ENTITY opl.xml SYSTEM "../csl-docbook/fragments/opl.xml">
>   <!ENTITY gpl.xml SYSTEM "../csl-docbook/fragments/gpl.xml">
> + <!ENTITY bsd.xml SYSTEM "../csl-docbook/fragments/bsd.xml">

Question to everyone: It looks like those 'fragments' are actually
valid xml documents. Is there any particular reason for using external
entities here ? Could we xi:include them instead ?

> +     <section>
> +      <title>C-VSIPL</title>
> +      <para>
> +       A C-VSIPL implementation can be used by Sourcery VSIPL++ to
> +       to implement many functions, including linear algebra, solvers,
> +       and signal processing objects (such as FFT).
> +      </para>

This paragraph appears to contain an extra 'to'.

>      <section>
> @@ -1031,6 +1061,50 @@
>       </varlistentry>
>  
>       <varlistentry>
> +      <term><option>--enable-cvsip</option></term>
> +      <listitem>
> +       <para>
> +        Enable Sourcery VSIPL++ to search for an appropriate
> +	C-VSIP implementation on the platform.  If found, it
> +	will be used to perform linear algebra (matrix-vector
> +	products and solvers) and signal processing (FFT, convolution,
> +	correlation, and FIR).
> +       </para>

I believe this is not entirely correct. In order for it to be used for FFT,
an additional mention in the FFT backend list ('--enable-fft=cvsip') is needed.

> +    <para>
> +     When configuring Sourcery VSIPL++ to be used as the reference
> +     implementation under the BSD license, the following configuration
> +     flags should be used:
> +     <itemizedlist>
> +
> +      <listitem>
> +       <para><option>--enable-ref-impl</option></para>
> +       <para>
> +        Configures Sourcery VSIPL++ to be used as the reference
> +	implementation.  This is necessary, otherwise Sourcery VSIPL++
> +	requires non-BSD files to operate.
> +       </para>
> +      </listitem>
> +
> +      <listitem>
> +       <para><option>--enable-cvsip</option></para>
> +       <para>
> +        Configures Sourcery VSIPL++ to use a C-VSIP library for linear
> +        algebra and signal processing.  This is necessary, otherwise
> +        linear algebra and signal processing functionality will not be
> +        available.
> +       </para>
> +      </listitem>
> +
> +     </itemizedlist>
> +    </para>

As noted above, --enable-fft=cvsip needs to be provided, too.
(Technically, nothing would prevent us from letting --enable-ref-impl
imply the two options --enable-cvsip and --enable-fft=cvsip.)


Thanks,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From jules at codesourcery.com  Tue Jan 30 16:36:21 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Tue, 30 Jan 2007 11:36:21 -0500
Subject: [vsipl++] [patch] Quickstart updates for ref-impl
In-Reply-To: <45BF631F.1000601@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com>
Message-ID: <45BF7405.6060506@codesourcery.com>

Stefan, Thanks for the feedback. -- Jules


> This paragraph appears to contain an extra 'to'.

Fixed.

> 
>>      <section>
>> @@ -1031,6 +1061,50 @@
>>       </varlistentry>
>>  
>>       <varlistentry>
>> +      <term><option>--enable-cvsip</option></term>
>> +      <listitem>
>> +       <para>
>> +        Enable Sourcery VSIPL++ to search for an appropriate
>> +	C-VSIP implementation on the platform.  If found, it
>> +	will be used to perform linear algebra (matrix-vector
>> +	products and solvers) and signal processing (FFT, convolution,
>> +	correlation, and FIR).
>> +       </para>
> 
> I believe this is not entirely correct. In order for it to be used for FFT,
> an additional mention in the FFT backend list ('--enable-fft=cvsip') is needed.

Thanks.  How about

"Enable Sourcery VSIPL++ to search for an appropriate C-VSIP 
implementation on the platform.  It found, it will be used to perform 
linear algebra (matrix-vector products and solvers) and some signal 
processing (convolution, correlation, and FIR).  If the 
<option>--enable-fft=cvsip</option> option is also given, C-VSIP will be 
used to perform FFTs."

I'll also update the '--enable-fft=xxx' documentation.

> 
> As noted above, --enable-fft=cvsip needs to be provided, too.
> (Technically, nothing would prevent us from letting --enable-ref-impl
> imply the two options --enable-cvsip and --enable-fft=cvsip.)

Is --enable-fft=cvsip necessary with --enable-ref-impl?  I thought that 
--enable-ref-impl skipped dispatch and went directly to the C-VSIP FFT.

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


From carlos at codesourcery.com  Tue Jan 30 16:40:32 2007
From: carlos at codesourcery.com (Carlos O'Donell)
Date: Tue, 30 Jan 2007 11:40:32 -0500
Subject: [gnu-internal] Re: [vsipl++] [patch] Quickstart updates for ref-impl
In-Reply-To: <45BF631F.1000601@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com>
Message-ID: <20070130164031.GX22964@lios>

On Tue, Jan 30, 2007 at 10:24:15AM -0500, Stefan Seefeld wrote:
> Jules Bergmann wrote:
> > Also, what list should I CC csl-docbook patches to?
> 
> gnu-internal seems to be the closest match. (I will CC it as I raise
> a docbook-related question.)
> 
> > Index: doc/quickstart/quickstart.xml
> > ===================================================================
> > --- doc/quickstart/quickstart.xml	(revision 161463)
> > +++ doc/quickstart/quickstart.xml	(working copy)
> > @@ -9,6 +9,7 @@
> >  [
> >   <!ENTITY opl.xml SYSTEM "../csl-docbook/fragments/opl.xml">
> >   <!ENTITY gpl.xml SYSTEM "../csl-docbook/fragments/gpl.xml">
> > + <!ENTITY bsd.xml SYSTEM "../csl-docbook/fragments/bsd.xml">
> 
> Question to everyone: It looks like those 'fragments' are actually
> valid xml documents. Is there any particular reason for using external
> entities here ? Could we xi:include them instead ?

I *love* entities.

1. It's easier to write '&opl.xml;' than it is to type "<xi:include...>"
2. If opl.xml is moved, none of the XML has to change.
3. If your project is not always in the same relative location to 
   csl-docbook, you can put these entities into a DTD and use configure
   to do AC_SUBST on the path reference.
   e.g. <!ENTITY opl.xml SYSTEM "@PATH_TO_CSL_DOCBOOK@/fragments/opl.xml">

My rule-of-thumb is:

If the XML file exists out side your current project, then use an entity
defined in a DTD to include the file.

There *are* alternatives, but I find them more cumbersome and error
prone e.g. xi:include + catalog.

Cheers,
Carlos.
-- 
Carlos O'Donell
CodeSourcery
carlos at codesourcery.com
(650) 331-3385 x716


From jules at codesourcery.com  Tue Jan 30 16:43:37 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Tue, 30 Jan 2007 11:43:37 -0500
Subject: [vsipl++] [patch] Quickstart updates for ref-impl
In-Reply-To: <45BF7405.6060506@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF7405.6060506@codesourcery.com>
Message-ID: <45BF75B9.3030506@codesourcery.com>


>>
>> As noted above, --enable-fft=cvsip needs to be provided, too.
>> (Technically, nothing would prevent us from letting --enable-ref-impl
>> imply the two options --enable-cvsip and --enable-fft=cvsip.)
> 
> Is --enable-fft=cvsip necessary with --enable-ref-impl?  I thought that 
> --enable-ref-impl skipped dispatch and went directly to the C-VSIP FFT.
> 

Ok, experimentally, --enable-fft=cvsip is necessary.  If it is left off, 
the library configures and tries to build the builtin FFTW3 fft.

				thanks,
				-- Jules


-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


From mark at codesourcery.com  Tue Jan 30 17:35:38 2007
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 30 Jan 2007 09:35:38 -0800
Subject: [gnu-internal] Re: [vsipl++] [patch] Quickstart updates for ref-impl
In-Reply-To: <45BF631F.1000601@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com>
Message-ID: <45BF81EA.5060105@codesourcery.com>

Stefan Seefeld wrote:

>> +     <section>
>> +      <title>C-VSIPL</title>
>> +      <para>
>> +       A C-VSIPL implementation can be used by Sourcery VSIPL++ to
>> +       to implement many functions, including linear algebra, solvers,
>> +       and signal processing objects (such as FFT).
>> +      </para>

Is "C-VSIPL" the accepted term?  I think the initial term is just
"VSIPL".  Maybe we should say "VSIPL Back End" in the <title>, which
will make clear that this is about a back end, but leave out the "C-",
here and elsewhere?

>> +    <para>
>> +     When configuring Sourcery VSIPL++ to be used as the reference
>> +     implementation under the BSD license, the following configuration
>> +     flags should be used:

"If you wish to use the BSD-licensed reference-implementation subset of
Sourcery VSIPL++, you must configure with the following options:"

>> +      <listitem>
>> +       <para><option>--enable-ref-impl</option></para>
>> +       <para>
>> +        Configures Sourcery VSIPL++ to be used as the reference
>> +	implementation.  This is necessary, otherwise Sourcery VSIPL++
>> +	requires non-BSD files to operate.

Saying "Configures" again here is redundant; these are configuration
options.  So, maybe:

"Build only the reference-implementation subset of Sourcery VSIPL++.  If
you do not use this option, the complete, optimized implementation of
Sourcery VSIPL++ will be built."

>> +        Configures Sourcery VSIPL++ to use a C-VSIP library for linear
>> +        algebra and signal processing.  This is necessary, otherwise
>> +        linear algebra and signal processing functionality will not be
>> +        available.

"Use a VSIPL library as the back end for VSIPL++.  You must provide this
option when configuring with <option>--enable-ref-impl</option> because
the reference-implementation subset of Sourcery VISPL++ does not support
alternative back ends."

> (Technically, nothing would prevent us from letting --enable-ref-impl
> imply the two options --enable-cvsip and --enable-fft=cvsip.)

That would probably be even better, if we could do it, but I don't want
to introduce feature-creep.

Thanks,

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From stefan at codesourcery.com  Tue Jan 30 17:41:01 2007
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 30 Jan 2007 12:41:01 -0500
Subject: [vsipl++] [patch] Quickstart updates for ref-impl
In-Reply-To: <45BF75B9.3030506@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF7405.6060506@codesourcery.com> <45BF75B9.3030506@codesourcery.com>
Message-ID: <45BF832D.8040207@codesourcery.com>

Jules Bergmann wrote:
> 
>>>
>>> As noted above, --enable-fft=cvsip needs to be provided, too.
>>> (Technically, nothing would prevent us from letting --enable-ref-impl
>>> imply the two options --enable-cvsip and --enable-fft=cvsip.)
>>
>> Is --enable-fft=cvsip necessary with --enable-ref-impl?  I thought
>> that --enable-ref-impl skipped dispatch and went directly to the
>> C-VSIP FFT.
>>
> 
> Ok, experimentally, --enable-fft=cvsip is necessary.  If it is left off,
> the library configures and tries to build the builtin FFTW3 fft.

Indeed. With --enable-ref-impl we do skip the dispatch mechanism. However,
the build system still needs to know what bindings to compile.

Thanks,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From stefan at codesourcery.com  Tue Jan 30 22:13:19 2007
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 30 Jan 2007 17:13:19 -0500
Subject: [vsipl++] Re: [gnu-internal] Re: [vsipl++] [patch] Quickstart
 updates for ref-impl
In-Reply-To: <45BF81EA.5060105@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF81EA.5060105@codesourcery.com>
Message-ID: <45BFC2FF.9030608@codesourcery.com>

Mark Mitchell wrote:
> Stefan Seefeld wrote:

>> (Technically, nothing would prevent us from letting --enable-ref-impl
>> imply the two options --enable-cvsip and --enable-fft=cvsip.)
> 
> That would probably be even better, if we could do it, but I don't want
> to introduce feature-creep.

Here is a patch doing the above. Are there other things we may check / fix
from within configure.ac ?

Thanks,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070130/eea08266/attachment.ksh>

From jules at codesourcery.com  Wed Jan 31 05:02:33 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 31 Jan 2007 00:02:33 -0500
Subject: [vsipl++] Re: [gnu-internal] Re: [vsipl++] [patch] Quickstart
 updates for ref-impl
In-Reply-To: <45BFC2FF.9030608@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF81EA.5060105@codesourcery.com> <45BFC2FF.9030608@codesourcery.com>
Message-ID: <45C022E9.50308@codesourcery.com>

Stefan Seefeld wrote:
> Mark Mitchell wrote:
>> Stefan Seefeld wrote:
> 
>>> (Technically, nothing would prevent us from letting --enable-ref-impl
>>> imply the two options --enable-cvsip and --enable-fft=cvsip.)
>> That would probably be even better, if we could do it, but I don't want
>> to introduce feature-creep.
> 
> Here is a patch doing the above. Are there other things we may check / fix
> from within configure.ac ?

Stefan, thanks, please check this in.  I'll update the quickstart 
accordingly. -- Jules

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


From jules at codesourcery.com  Wed Jan 31 05:22:19 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 31 Jan 2007 00:22:19 -0500
Subject: [vsipl++] Re: [gnu-internal] Re: [vsipl++] [patch] Quickstart
 updates for ref-impl
In-Reply-To: <45BFC2FF.9030608@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF81EA.5060105@codesourcery.com> <45BFC2FF.9030608@codesourcery.com>
Message-ID: <45C0278B.2000808@codesourcery.com>

Patch as applied.

-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qs.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070131/0608de63/attachment.ksh>

From jules at codesourcery.com  Wed Jan 31 05:52:49 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 31 Jan 2007 00:52:49 -0500
Subject: [patch] Misc bits for ref-impl and release
Message-ID: <45C02EB1.2060507@codesourcery.com>

This patch includes Stefan's configure patch and an update to 
scripts/config to avoid the unnecessary flags.  It also removes some 
non-BSD files from cxx_sources when building the ref-impl

Patch applied.

				-- Jules
-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: misc.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070131/c3dc63ca/attachment.ksh>

From jules at codesourcery.com  Wed Jan 31 16:55:20 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 31 Jan 2007 11:55:20 -0500
Subject: [vsipl++] Re: [gnu-internal] Re: [vsipl++] [patch] Quickstart
 updates for ref-impl
In-Reply-To: <45BF81EA.5060105@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF81EA.5060105@codesourcery.com>
Message-ID: <45C0C9F8.7030400@codesourcery.com>

Sorry, I missed this feedback earlier.  I will incorporate these into 
the quickstart.

Mark Mitchell wrote:
> Stefan Seefeld wrote:
> 
>>> +     <section>
>>> +      <title>C-VSIPL</title>
>>> +      <para>
>>> +       A C-VSIPL implementation can be used by Sourcery VSIPL++ to
>>> +       to implement many functions, including linear algebra, solvers,
>>> +       and signal processing objects (such as FFT).
>>> +      </para>
> 
> Is "C-VSIPL" the accepted term?  I think the initial term is just
> "VSIPL".  Maybe we should say "VSIPL Back End" in the <title>, which
> will make clear that this is about a back end, but leave out the "C-",
> here and elsewhere?

It's the term that gets used at the HPEC-SI meetings to additionally 
distinguish between C VSIPL and C++ VSIPL++ APIs.  Sometimes "VSIPL" 
gets used as an umbrella term for both APIs.  Adding a "C" further 
disambiguates the two.  I suppose hyphenating the two could create 
confusion.

Perhaps choice use of "C VSIPL"?

<title>VSIPL Back End</title>

<para>
  An implementation of the C VSIPL API can be used by Sourcery VSIPL++ ...
</para>




-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705


From mark at codesourcery.com  Wed Jan 31 17:04:28 2007
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 31 Jan 2007 09:04:28 -0800
Subject: [vsipl++] Re: [gnu-internal] Re: [vsipl++] [patch] Quickstart
 updates for ref-impl
In-Reply-To: <45C0C9F8.7030400@codesourcery.com>
References: <45BF604F.1050808@codesourcery.com> <45BF631F.1000601@codesourcery.com> <45BF81EA.5060105@codesourcery.com> <45C0C9F8.7030400@codesourcery.com>
Message-ID: <45C0CC1C.2030201@codesourcery.com>

Jules Bergmann wrote:

> Perhaps choice use of "C VSIPL"?

I think this is better than "C-VSIPL".  So, if we think it's important
to explicitly emphasize "C", this is a good choice.

Thanks,

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From jules at codesourcery.com  Wed Jan 31 18:55:54 2007
From: jules at codesourcery.com (Jules Bergmann)
Date: Wed, 31 Jan 2007 13:55:54 -0500
Subject: [patch] Final quickstart changes
Message-ID: <45C0E63A.5040304@codesourcery.com>

This incorporates the latest feedback:


-- 
Jules Bergmann
CodeSourcery
jules at codesourcery.com
(650) 331-3385 x705
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: qs2.diff
URL: <http://sourcerytools.com/pipermail/vsipl++/attachments/20070131/81f221b3/attachment.ksh>

