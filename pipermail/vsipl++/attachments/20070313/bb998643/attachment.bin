Index: src/vsip/opt/cbe/ppu/fft.hpp
===================================================================
--- src/vsip/opt/cbe/ppu/fft.hpp	(revision 165654)
+++ src/vsip/opt/cbe/ppu/fft.hpp	(working copy)
@@ -84,30 +84,29 @@
 
 namespace fft
 {
-template <dimension_type D,
-	  typename I,
+template <typename I,
 	  typename O,
 	  int S,
 	  vsip::return_mechanism_type R,
 	  unsigned N>
-struct evaluator<D, I, O, S, R, N, Cbe_sdk_tag>
+struct evaluator<1, I, O, S, R, N, Cbe_sdk_tag>
 {
   static bool const ct_valid = 
     Type_equal<I, complex<float> >::value &&
     Type_equal<I, O>::value;
-  static bool rt_valid(Domain<D> const &dom) 
+  static bool rt_valid(Domain<1> const &dom) 
   { 
     return
       (dom.size() >= MIN_FFT_1D_SIZE) &&
       (dom.size() <= MAX_FFT_1D_SIZE) &&
       (fft::is_power_of_two(dom));
   }
-  static std::auto_ptr<backend<D, I, O,
+  static std::auto_ptr<backend<1, I, O,
  			       axis<I, O, S>::value,
  			       exponent<I, O, S>::value> >
-  create(Domain<D> const &dom, typename Scalar_of<I>::type scale)
+  create(Domain<1> const &dom, typename Scalar_of<I>::type scale)
   {
-    return cbe::create<backend<D, I, O, 
+    return cbe::create<backend<1, I, O, 
       axis<I, O, S>::value,
       exponent<I, O, S>::value> >
       (dom, scale);
