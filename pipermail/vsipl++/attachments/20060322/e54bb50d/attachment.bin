Index: GNUmakefile.inc.in
===================================================================
RCS file: /home/cvs/Repository/vpp/vendor/GNUmakefile.inc.in,v
retrieving revision 1.11
retrieving revision 1.12
diff -u -r1.11 -r1.12
--- GNUmakefile.inc.in	21 Mar 2006 19:30:15 -0000	1.11
+++ GNUmakefile.inc.in	21 Mar 2006 21:40:16 -0000	1.12
@@ -51,7 +51,7 @@
 
 $(vendor_REF_CLAPACK):
 	@echo "Building CLAPACK (see clapack.build.log)"
-	@$(MAKE) -C vendor/clapack lapacklib > clapack.build.log 2>&1
+	@$(MAKE) -C vendor/clapack/SRC all > clapack.build.log 2>&1
 
 
 $(vendor_REF_LAPACK):
Index: make.inc.in
===================================================================
RCS file: /home/cvs/Repository/clapack/SRC/make.inc.in,v
retrieving revision 1.1
diff -u -r1.1 make.inc.in
--- make.inc.in	21 Mar 2006 21:38:49 -0000	1.1
+++ make.inc.in	22 Mar 2006 18:13:55 -0000
@@ -19,9 +19,13 @@
 #  selected.  Define LOADER and LOADOPTS to refer to the loader and
 #  desired load options for your machine.
 #
-# configure will now substitute correct values for these variables
+# configure will now substitute correct values for these variables.
+# we added a variable called CLAPACK_CFLAGS that will allow someone to 
+# specify special flags that could make CLAPACK run faster. If the 
+# --with-clapack-cflags option is not used CLAPACK_CFLAGS is the normal CFLAGS
+# 
 CC        = @CC@
-CFLAGS    = @CFLAGS@
+CFLAGS    = @CLAPACK_CFLAGS@
 LOADER    = $(CC)
 LOADOPTS  = $(CFLAGS)
 NOOPT     = 
Index: configure.ac
===================================================================
RCS file: /home/cvs/Repository/vpp/configure.ac,v
retrieving revision 1.88
diff -u -r1.88 configure.ac
--- configure.ac	21 Mar 2006 15:52:23 -0000	1.88
+++ configure.ac	22 Mar 2006 18:16:58 -0000
@@ -170,6 +170,18 @@
 
 
 # LAPACK and related libraries (Intel MKL)
+
+# This option allows the user to OVERRIDE the default CFLAGS for CLAPACK.
+# It is up to the user to try specifying his own set of CFLAGS. If this option
+# is not used, CLAPACK_CLFAGS defaults to CFLAGS. .in files will find this
+# value in CLAPACK_CFLAGS
+AC_ARG_WITH(clapack-cflags,
+  AS_HELP_STRING([--with-clapack-cflags=CLAPACK_CFLAGS],
+                 [Specify CFLAGS to use when building builtin clapack.
+		  Only used if --with-lapack=builtin.]),
+            CLAPACK_CFLAGS=$withval,
+            CLAPACK_CFLAGS=no)
+
 AC_ARG_WITH([lapack],
   AS_HELP_STRING([--with-lapack\[=PKG\]],
                  [enable use of LAPACK if found
@@ -317,6 +329,14 @@
 AC_SUBST(CXXDEP)
 AC_LANG(C++)
 
+# assign cflags to CLAPACK_CFLAGS if the user didn't use --with-clapack-cflags
+if test "$CLAPACK_CFLAGS" == "no"; then
+  CLAPACK_CFLAGS=$CFLAGS
+fi
+# let's not forget AC_SUBST!
+AC_SUBST(CLAPACK_CFLAGS)
+
+
 AC_MSG_CHECKING([for FORTRAN float return type])
 if test "$host_cpu" == "x86_64"; then
   AC_DEFINE_UNQUOTED(VSIP_IMPL_FORTRAN_FLOAT_RETURN, double,
