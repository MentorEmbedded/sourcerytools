Index: src/vsip/impl/sal/fft.hpp
===================================================================
RCS file: /home/cvs/Repository/vpp/src/vsip/impl/sal/fft.hpp,v
retrieving revision 1.6
diff -u -r1.6 fft.hpp
--- src/vsip/impl/sal/fft.hpp	1 May 2006 19:12:04 -0000	1.6
+++ src/vsip/impl/sal/fft.hpp	3 May 2006 15:25:55 -0000
@@ -35,19 +35,6 @@
 std::auto_ptr<I>
 create(Domain<D> const &dom, S scale);
 
-template <typename T> struct supported_type {};
-
-template <> struct supported_type<float> { typedef float type;};
-template <> struct supported_type<double> { typedef double type;};
-template <> struct supported_type<std::complex<float> > 
-{
-  typedef std::complex<float> type;
-};
-template <> struct supported_type<std::complex<double> > 
-{
-  typedef std::complex<double> type;
-};
-
 } // namespace vsip::impl::sal
 
 
@@ -61,8 +48,7 @@
 	  int S,
 	  vsip::return_mechanism_type R,
 	  unsigned N>
-struct evaluator<D, typename sal::supported_type<I>::type,
-		 O, S, R, N, Mercury_sal_tag>
+struct evaluator<D, I, O, S, R, N, Mercury_sal_tag>
 {
   static bool const ct_valid = true;
   static bool rt_valid(Domain<D> const &dom)
@@ -85,6 +71,39 @@
   }
 };
 
+template <dimension_type D,
+	  int S,
+	  vsip::return_mechanism_type R,
+	  unsigned N>
+struct evaluator<D, std::complex<long double>, std::complex<long double>,
+		 S, R, N, Mercury_sal_tag>
+{
+  // No long double support.
+  static bool const ct_valid = false;
+};
+
+template <dimension_type D,
+	  int S,
+	  vsip::return_mechanism_type R,
+	  unsigned N>
+struct evaluator<D, long double, std::complex<long double>,
+		 S, R, N, Mercury_sal_tag>
+{
+  // No long double support.
+  static bool const ct_valid = false;
+};
+
+template <dimension_type D,
+	  int S,
+	  vsip::return_mechanism_type R,
+	  unsigned N>
+struct evaluator<D, std::complex<long double>, long double,
+		 S, R, N, Mercury_sal_tag>
+{
+  // No long double support.
+  static bool const ct_valid = false;
+};
+
 template <typename I,
 	  typename O,
 	  int S,
@@ -106,8 +125,7 @@
 	  int E,
 	  vsip::return_mechanism_type R,
 	  unsigned N>
-struct evaluator<typename sal::supported_type<I>::type,
-		 O, A, E, R, N, fft::Mercury_sal_tag>
+struct evaluator<I, O, A, E, R, N, fft::Mercury_sal_tag>
 {
   static bool const ct_valid = true;
   static bool rt_valid(Domain<2> const &dom)
@@ -128,4 +146,3 @@
 } // namespace vsip
 
 #endif
-
