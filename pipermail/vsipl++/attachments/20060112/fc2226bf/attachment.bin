
Index: doc/quickstart/quickstart.xml
===================================================================
RCS file: /home/cvs/Repository/vpp/doc/quickstart/quickstart.xml,v
retrieving revision 1.19
diff -c -p -r1.19 quickstart.xml
*** doc/quickstart/quickstart.xml	6 Dec 2005 16:50:55 -0000	1.19
--- doc/quickstart/quickstart.xml	12 Jan 2006 16:04:55 -0000
***************
*** 257,262 ****
--- 257,268 ----
        </listitem> 
       </orderedlist>
      </para>
+     <para>
+       Alternatively, if the appropriate pre-built binary package is available, 
+       it may be installed directly without the configuration and build steps.
+       Instructions for this option may be found in the last section of this \
+       chapter.
+     </para>
     </abstract>
    </chapterinfo>
  
***************
*** 274,280 ****
      <para>
       Sourcery VSIPL++ can be built and installed on any UNIX-like system
       that has a satisfactory C++ compiler.  CodeSourcery's reference
!      platform is Red Hat Enterprise Linux 3.0.
      </para>
  
      <para>
--- 280,286 ----
      <para>
       Sourcery VSIPL++ can be built and installed on any UNIX-like system
       that has a satisfactory C++ compiler.  CodeSourcery's reference
!      platform is Red Hat Enterprise Linux 4.0.
      </para>
  
      <para>
***************
*** 439,444 ****
--- 445,451 ----
         The following releases of LAM/MPI have been tested by
         CodeSourcery to work with Sourcery VSIPL++:
         <itemizedlist>
+         <listitem> <para>LAM/MPI 7.0.6</para> </listitem>
          <listitem> <para>LAM/MPI 7.1.1</para> </listitem>
         </itemizedlist>
        </para>
*************** config.status: creating src/vsip/impl/ac
*** 897,902 ****
--- 904,973 ----
  <screen>> make install</screen>
     </para>
    </section>
+ 
+   <section>
+    <title>Installing a Binary Package</title>
+    <para>
+      This section explains how to install and run Sourcery VSIPL++ from 
+      a pre-built package.  Pre-built Sourcery VSIPL++ packages are available 
+      from CodeSourcery's web site in the same location as the source release.
+      Visit <ulink url="http://www.codesourcery.com/vsiplplusplus/download.html">http://www.codesourcery.com/vsiplplusplus/download.html</ulink> 
+      for instructions on downloading VSIPL++.
+    </para> 
+     <section>
+     <title>Unpacking the Distribution</title>
+      <para>
+        Sourcery VSIPL++ binary packages are distributed as compressed 
+        Tape Archive (TAR) files that are intended to be installed in the 
+        root directory.  The following commands will use GNU TAR to unpack 
+        the binary distribution into the location /usr/local:
+ <screen>> cd /
+ > tar xjf sourceryvsipl++-&version;-ser-builtin-x86_64-unknown-linux-gnu.tar.bz2
+ </screen>
+      </para>
+      <para>
+        The directory layout of the installed package is as follows:
+ <screen>`-- usr
+     `-- local
+         |-- include// Header files
+         |   |-- atlas
+         |   `-- vsip
+         |       `-- impl
+         |-- lib// Sourcery VSIPL++ library and third-party libraries
+         |   |-- atlas
+         |   `-- pkgconfig
+         `-- share// Documentation and user files
+             |-- doc
+             |   `-- sourceryvsipl++
+             |       |-- quickstart
+             |       `-- tutorial
+             |           `-- images
+             |               `-- callouts
+             `-- sourceryvsipl++
+ </screen>
+ 
+      </para>
+     </section>
+     <section>
+     <title>Other Install Locations</title>
+     <para>
+        Alternatively, it is possible to install the tarball outside of the root directory.
+        This requires passing the prefix to pkg-config in order to extract the correct
+        compilation options needed in order to build Sourcery VSIPL++ programs.
+ 
+        An example Makefile:
+ <screen>pkgcommand=pkg-config vsipl++ --variable=prefix=/path/to/install/usr/local
+ CXX      = $(shell pkgcommand --variable=cxx)
+ CXXFLAGS = $(shell pkgcommand --cflags)
+ LIBS     = $(shell pkgcommand --libs)
+ 
+ example: example.o
+     $(CXX) $(CXXFLAGS) -o $@ $^ $(LIBS)
+ </screen>
+     </para>
+ 
+    </section>
+   </section>
   </chapter>
  
   <chapter id="chap-building-applications">
*************** config.status: creating src/vsip/impl/ac
*** 1004,1012 ****
     contains a line prefixed with "Libs:" which indicates the libraries
     necessary to link a Sourcery VSIPL++ program.
    </para>
- 
   </chapter>
  
   &gpl.xml;
  
  </book>
--- 1075,1087 ----
     contains a line prefixed with "Libs:" which indicates the libraries
     necessary to link a Sourcery VSIPL++ program.
    </para>
   </chapter>
  
   &gpl.xml;
  
  </book>
+ 
+ 
+ 
+ 
+ 
