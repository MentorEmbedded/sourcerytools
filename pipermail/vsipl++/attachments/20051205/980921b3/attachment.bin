
Index: src/vsip/signal-window.cpp
===================================================================
RCS file: /home/cvs/Repository/vpp/src/vsip/signal-window.cpp,v
retrieving revision 1.3
diff -c -p -r1.3 signal-window.cpp
*** src/vsip/signal-window.cpp	23 Sep 2005 16:11:43 -0000	1.3
--- src/vsip/signal-window.cpp	6 Dec 2005 06:26:09 -0000
***************
*** 10,16 ****
--- 10,18 ----
    Included Files
  ***********************************************************************/
  
+ #include <vsip/selgen.hpp>
  #include "impl/signal-fft.hpp"
+ #include "impl/signal-freqswap.hpp"
  #include "impl/signal-window.hpp"
  
  /***********************************************************************
*************** cheby(length_type len, scalar_f ripple) 
*** 58,67 ****
      cosh( acosh( (1.0 + dp) / dp) / (len - 1.0) ) ) / M_PI;
    scalar_f x0 = (3.0 - cos( 2 * M_PI * df )) / (1.0 + cos( 2 * M_PI * df ));
  
!   // eq. to f.ramp( 0.0, 1.0 / len );
!   Vector<scalar_f> f(len);
!   for ( index_type i = 0; i < len; ++i )
!     f.put( i, i * 1.0 / len );
  
    scalar_f alpha = (x0 + 1.0) / 2.0;
    scalar_f beta  = (x0 - 1.0) / 2.0;
--- 60,66 ----
      cosh( acosh( (1.0 + dp) / dp) / (len - 1.0) ) ) / M_PI;
    scalar_f x0 = (3.0 - cos( 2 * M_PI * df )) / (1.0 + cos( 2 * M_PI * df ));
  
!   Vector<scalar_f> f = ramp(0.f, 1.f / len, len);
  
    scalar_f alpha = (x0 + 1.0) / 2.0;
    scalar_f beta  = (x0 - 1.0) / 2.0;
*************** cheby(length_type len, scalar_f ripple) 
*** 81,96 ****
    /* wf = dp*(tmp.*(cosh(((len-1.0)/2).*acosh(x)))+
       (1-tmp).*cos(((len-1.0)/2).*acos(x)));*/
    { 
!     // eq. to wfR = x.clip( -1.0, 1.0, -1.0, 1.0 );
!     for ( index_type i = 0; i < len; ++i )
!     {
!       if ( x.get(i) < -1.0 )
!         wfR.put( i, -1.0 );
!       else if ( x.get(i) > 1.0 )
!         wfR.put( i, 1.0 );
!       else
!         wfR.put( i, x.get(i) );
!     }
  
      wfR = (1.0 - tmp) * cos( ((len - 1.0) / 2.0) * acos( wfR ) );
  
--- 80,86 ----
    /* wf = dp*(tmp.*(cosh(((len-1.0)/2).*acosh(x)))+
       (1-tmp).*cos(((len-1.0)/2).*acos(x)));*/
    { 
!     wfR = clip( x, -1.0, 1.0, -1.0, 1.0 );
  
      wfR = (1.0 - tmp) * cos( ((len - 1.0) / 2.0) * acos( wfR ) );
  
*************** cheby(length_type len, scalar_f ripple) 
*** 129,135 ****
    }
    
    Vector<scalar_f> ret(wfR);
!   impl::frequency_swap( ret );
  
    return ret;
  }
--- 119,125 ----
    }
    
    Vector<scalar_f> ret(wfR);
!   ret = freqswap(ret);
  
    return ret;
  }
Index: src/vsip/impl/signal-window.hpp
===================================================================
RCS file: /home/cvs/Repository/vpp/src/vsip/impl/signal-window.hpp,v
retrieving revision 1.1
diff -c -p -r1.1 signal-window.hpp
*** src/vsip/impl/signal-window.hpp	20 Sep 2005 12:38:57 -0000	1.1
--- src/vsip/impl/signal-window.hpp	6 Dec 2005 06:26:09 -0000
*************** acosh( Vector<T>& x, Vector<std::complex
*** 54,98 ****
  
  
  template <typename T>
- void 
- frequency_swap( Vector<T>& a )
- {
-   length_type n = a.size();
-   length_type n2 = n / 2;
-   if ( a.size() % 2 ) 
-   {
-     T tmp = a.get(n2);      // save middle value
-     a.put( n2, a.get(0) );
- 
-     index_type i = 0;
-     index_type j = n2 + 1;
-     n = n2 - 1;
-     while ( n-- > 0 )       // swap other values
-     {
-       a.put( i++, a.get(j) );
-       a.put( j++, a.get(i) );
-     }
-     a.put( i, a.get(j) );  
-     a.put( j, tmp );        // place middle value at end
-   }
-   else 
-   {
-     index_type i = 0;
-     index_type j = n2;
-     n = n2;
-     while ( n-- > 0 )       // swap pairs of values
-     {
-       T tmp = a.get(j);
-       a.put( j, a.get(i) );
-       a.put( i, tmp );
-       i++;
-       j++;
-     }
-   }
- }
- 
- 
- template <typename T>
  T
  bessel_I_0( T x )
  {
--- 54,59 ----
