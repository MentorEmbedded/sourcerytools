Index: ChangeLog
===================================================================
--- ChangeLog	(revision 148525)
+++ ChangeLog	(working copy)
@@ -1,5 +1,9 @@
 2006-09-07  Stefan Seefeld  <stefan@codesourcery.com>
 
+	* src/vsip/support.hpp: Define VSIP_HAS_EXCEPTIONS appropriately when
+	there is no compiler support.
+	* src/vsip/support.cpp: Print location in fatal_exception().
+
 	* configure.ac: Add portable build instructions.
 	* GNUmakefile.in: Likewise.
 	* src/vsip/GNUmakefile.inc.in: Likewise.
Index: src/vsip/support.hpp
===================================================================
--- src/vsip/support.hpp	(revision 148524)
+++ src/vsip/support.hpp	(working copy)
@@ -73,7 +73,7 @@
 
 /// Controls whether this VSIPL++ implementation throws exceptions.
 
-/// This implementation supports exceptions, but their use can
+/// This implementation supports exceptions, but their use can be
 /// disabled by setting this flag to zero.  The library must then
 /// be recompiled.
 
@@ -85,7 +85,12 @@
 /// FUTURE: Mode in which exceptional conditions are not detected at all.
 
 #ifndef VSIP_HAS_EXCEPTIONS
-#  define VSIP_HAS_EXCEPTIONS 1
+// If the Intel compiler on windows is used without exception handling (-GX)
+#  if defined(__ICL) && __EXCEPTIONS != 1
+#    define VSIP_HAS_EXCEPTIONS 0
+#  else
+#    define VSIP_HAS_EXCEPTIONS 1
+#  endif
 #endif
 
 #if VSIP_HAS_EXCEPTIONS
@@ -95,7 +100,7 @@
 #else
 #  define VSIP_NOTHROW
 #  define VSIP_THROW(x)
-#  define VSIP_IMPL_THROW(x) vsip::impl::fatal_exception(x)
+#  define VSIP_IMPL_THROW(x) vsip::impl::fatal_exception(__FILE__, __LINE__, x)
 #endif
 
 /***********************************************************************
@@ -295,7 +300,8 @@
 {
 /// This function is called instead of throwing an exception
 /// when VSIP_HAS_EXCEPTIONS is 0.
-extern void fatal_exception(std::exception const& E) VSIP_IMPL_NORETURN;
+extern void fatal_exception(char const * file, unsigned int line,
+                            std::exception const& E) VSIP_IMPL_NORETURN;
 
 
 /// Exception to mark unimplemented VSIPL++ features and functionality.
Index: src/vsip/support.cpp
===================================================================
--- src/vsip/support.cpp	(revision 148524)
+++ src/vsip/support.cpp	(working copy)
@@ -19,8 +19,10 @@
 
 #if !VSIP_HAS_EXCEPTIONS
 void
-vsip::impl::fatal_exception(std::exception const& E)
+vsip::impl::fatal_exception(char const * file, unsigned int line,
+                            std::exception const& E)
 {
+  std::cerr << "VSIPL++: at " << file << ':' << line << '\n';
   std::cerr << "VSIPL++: fatal: " << E.what() << std::endl;
   std::abort ();
 }
