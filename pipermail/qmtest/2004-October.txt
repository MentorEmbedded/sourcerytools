From abisain at qualcomm.com  Mon Oct  4 17:58:30 2004
From: abisain at qualcomm.com (Abhijeet Bisain)
Date: Mon, 04 Oct 2004 10:58:30 -0700
Subject: Target initialization
Message-ID: <1096912710.2719.39.camel@abisain-linux.qualcomm.com>

Hi,

	What I am seeing while trying to run tests with qmtest is that it tries
to initialize all the targets listed in the targets file. Even if they
are not needed by any of the tests. I have a test that runs locally and
uses the ProcessTarget class and is in the target_group "local". I
specify "local" as the target group for the test. But when I execute
this test alone, qmtest starts initializing targets in other target
groups. 

	I think that QMTest should initialize targets only in the required
target group. Otherwise if any of the other targets is not up, rsh
basically hangs for a while adding unnecessary delay to the execution of
a test that doesn't even need that target. What do you think?

Thanks,
Abhijeet



From mark at codesourcery.com  Wed Oct  6 05:02:19 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 05 Oct 2004 22:02:19 -0700
Subject: [qmtest] Target initialization
In-Reply-To: <1096912710.2719.39.camel@abisain-linux.qualcomm.com>
References: <1096912710.2719.39.camel@abisain-linux.qualcomm.com>
Message-ID: <41637C5B.5060907@codesourcery.com>

Abhijeet Bisain wrote:

> 	I think that QMTest should initialize targets only in the required
> target group. Otherwise if any of the other targets is not up, rsh
> basically hangs for a while adding unnecessary delay to the execution of
> a test that doesn't even need that target. What do you think?

I agree.  I'm not sure when we'll get to that, though.  Any chance you'd 
like to work on a patch?

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com


From benn423 at yahoo.com  Mon Oct 18 14:37:29 2004
From: benn423 at yahoo.com (Bennett Weber)
Date: Mon, 18 Oct 2004 07:37:29 -0700 (PDT)
Subject: QMTest: Passing Command Line Arguments
Message-ID: <20041018143729.75684.qmail@web21524.mail.yahoo.com>

I've just started using QMTest, and am having problems
passing command =
line
arguments to shell scripts...QMTest just doesn't seem
to be doing it.  =
Even
with simple shell scripts (e.g., echo $@), I'm coming
up blank =
(literally)
for the command line args.  Otherwise QMTest seems to
be running fine.  =
The
test is defined as a ShellScriptTest, and I'm running
on Solaris 8 =
(didn't
compile QMTest from source, though that's probably the
next thing I'll =
try).

Am I missing something here?

Thanks,

Ben Weber



		
_______________________________
Do you Yahoo!?
Declare Yourself - Register online to vote today!
http://vote.yahoo.com


From pcisar at ibphoenix.cz  Fri Oct 22 13:47:09 2004
From: pcisar at ibphoenix.cz (Pavel Cisar)
Date: Fri, 22 Oct 2004 15:47:09 +0200
Subject: Unicode support
Message-ID: <41792B7D.3017.18720E@localhost>

Hi,

First of all, I would like thank you for the wonderful product. We use 
QMTest as our primary test harness for Firebird database engine QA 
(firebird.sourceforge.net) for some time, and we're more than happy with 
it. The sole issue we have with QMTest so far is lack of unicode support 
in tests, and unicode-awareness in QMTest. 

Thanks to modularity and extensibility of QMTest, we were able to develop 
support to run tests written in Python (2.3) with use of unicode and 
include unicode support for various types of fields we need for that, 
without direct changes to QMTest source code. Although it works, one 
important issue remains. Because QMTest itself is not unicode-aware, it 
can't show in GUI.(CLI is another story) any annotation that contains 
unicode characters. Because GUI part is based on ZOPE, I think that this 
could be amended if QMtest would be upgraded to use new ZOPE code (ZOPE 
should support unicode starting from v2.6, and current stable release is 
v2.7).

We need the unicode support really badly, and I guess that other QMtest 
users would also benefit from it. Because QMTest is an open source 
project, we understand that we have to take some responsibility to make 
it happen. Unfortunately, this task is too complex for us to handle it 
with our limited resources, at least without help. So, I would like ask 
you for help and guidance to make QMtest unicode-aware, or if it's 
already in your to-do list or development, we would like offer you a 
helping hand to implement it as soon as possible.

Best regards
Pavel Cisar (ICQ: 89017288)
http://www.ibphoenix.com
For all your upto date Firebird and
InterBase information



From eichin at metacarta.com  Fri Oct 22 17:17:29 2004
From: eichin at metacarta.com (eichin at metacarta.com)
Date: 22 Oct 2004 13:17:29 -0400
Subject: [qmtest] Unicode support
In-Reply-To: <41792B7D.3017.18720E@localhost>
References: <41792B7D.3017.18720E@localhost>
Message-ID: <7g7jpi4qqe.fsf@pikespeak.metacarta.com>

Um, I've never had trouble with UTF-8 in qmtest, but I build most of
my tests from scripts that emit raw XML and use the command line tools
- are you just seeing a browser-display failure problem?  You probably
want to be a lot more specific about why you think it doesn't work...


From mark at codesourcery.com  Mon Oct 25 21:55:36 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 25 Oct 2004 14:55:36 -0700
Subject: [qmtest] Unicode support
In-Reply-To: <41792B7D.3017.18720E@localhost>
References: <41792B7D.3017.18720E@localhost>
Message-ID: <417D7658.40808@codesourcery.com>

Pavel Cisar wrote:

>We need the unicode support really badly, and I guess that other QMtest 
>users would also benefit from it. Because QMTest is an open source 
>project, we understand that we have to take some responsibility to make 
>it happen. Unfortunately, this task is too complex for us to handle it 
>with our limited resources, at least without help. So, I would like ask 
>you for help and guidance to make QMtest unicode-aware, or if it's 
>already in your to-do list or development, we would like offer you a 
>helping hand to implement it as soon as possible.
>  
>
We're definitely interested in supporting Unicode.  If you have concrete 
examples of places where we fail to do that, that would help.  For 
example, if we can recreate the problem with a simple test using a 
built-in QMTest test class, that will help us to solve it.

(Also, in the usual open-source way, we'll be likely to do things 
quickest for our paying customers; if you'd like to hire us to work on 
this project, we'd be happy to talk to you about that.)

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From mark at codesourcery.com  Wed Oct 27 01:31:54 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 26 Oct 2004 18:31:54 -0700
Subject: CodeSourcery seeking a QMTest developer
Message-ID: <417EFA8A.8060109@codesourcery.com>

If you like working with QMTest, why not do it for a living? :-)

We're actively looking to hire a QTMest developer.  This person will 
have a substantial influence on the future of QMTest, and will be 
working directly with our customers to improve the tool.  Like our other 
Sourcerers, you'll have the luxury of working from your own home, 
anywhere on earth.

See:

   http://www.codesourcery.com/jobs/listings/qmtest_developer

for details about this position and:

   http://www.codesourcery.com/jobs/

for other available positions.

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com


From doko at cs.tu-berlin.de  Wed Oct 27 21:22:03 2004
From: doko at cs.tu-berlin.de (Matthias Klose)
Date: Wed, 27 Oct 2004 23:22:03 +0200
Subject: build docs with openjade as well
Message-ID: <16768.4475.927454.304501@gargle.gargle.HOWL>

newer(?), at least compatible versions of jade are available under the
name openjade (1.4), which work ok for building the documentation.


--- qmdist/command/build_doc.py~	2004-07-25 23:48:41.000000000 +0200
+++ qmdist/command/build_doc.py	2004-10-27 09:29:44.000000000 +0200
@@ -99,7 +99,7 @@
                             'qm/test/doc/tour.xml',
                             'qm/test/doc/reference.xml'])
         
-        jade = find_executable('jade')
+        jade = find_executable('jade') or find_executable('openjade')
         dcl = find_file(map(normpath,
                             ['/usr/share/doc/jade*/pubtext/xml.dcl',
                              '/usr/share/doc/openjade*/pubtext/xml.dcl',


From mark at codesourcery.com  Thu Oct 28 22:34:22 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 28 Oct 2004 15:34:22 -0700
Subject: [qmtest] build docs with openjade as well
In-Reply-To: <16768.4475.927454.304501@gargle.gargle.HOWL>
References: <16768.4475.927454.304501@gargle.gargle.HOWL>
Message-ID: <418173EE.1050804@codesourcery.com>

Matthias Klose wrote:

>newer(?), at least compatible versions of jade are available under the
>name openjade (1.4), which work ok for building the documentation.
>  
>
Thanks!  I've checked in this change, with a comment.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diffs
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20041028/2ac7963a/attachment.ksh>

From pcisar at ibphoenix.cz  Fri Oct 29 09:01:58 2004
From: pcisar at ibphoenix.cz (Pavel Cisar)
Date: Fri, 29 Oct 2004 11:01:58 +0200
Subject: [qmtest] Unicode support
In-Reply-To: <417D7658.40808@codesourcery.com>
References: <41792B7D.3017.18720E@localhost>
Message-ID: <41822326.21647.428A5C@localhost>

Hi,

The issue with unicode annotations was my fault, sorry. After the fix, I 
can create and run tests with unicode without any change to QMTest code, 
although special support in extension classes is needed.

On 25 Oct 2004 at 14:55, Mark Mitchell wrote:

> We're definitely interested in supporting Unicode.  If you have concrete 
> examples of places where we fail to do that, that would help.  For 
> example, if we can recreate the problem with a simple test using a 
> built-in QMTest test class, that will help us to solve it.

Next notes apply to latest QMTest stable build.

1. QMtest can flawlessly store and load tests that have unicode in 
attributes (thanks to unicode support in XML handling).

2. There are two main points of failure:

a) Inadequate charset specification in qm.web.DtmlPage.GenerateHtmlHeader
It's iso-8859-1 instead utf-8. Next code in our extension module amend 
it:

_ORIGINAL_IMPL = qm.web.DtmlPage.GenerateHtmlHeader

def GenerateHtmlHeader(self, description, headers=''):
    header = _ORIGINAL_IMPL(self, description, headers=headers)
    header = header.replace('charset=iso-8859-1', 'charset=utf-8')
    return header

qm.web.DtmlPage.GenerateHtmlHeader = GenerateHtmlHeader

b) qm.fields.TextField doesn't support unicode at all (it fails on use of 
str() function). Next customized UnicodeField fixes that.

class UnicodeField(qm.fields.TextField):
    """
      A subclass of 'TextField' that supports Unicode.
    """

    def FormatValueAsHtml(self, server, value, style, name=None):
        # $value is typically unicode rather than str.  In any case, we 
always
        # encode the returned HTML code in UTF-8.
        #
        # qm.fields.TextField.FormatValueAsHtml can't handle Unicode, so
        # we replace $value with a flag, call the super-method, convert
        # the resulting HTML str into a unicode object, replace the flag
        # with the real $value, then encode $value in UTF-8 for
        # transmission to the client.
        flag = '_______REPLACE_THIS_FLAG_______'
        html = qm.fields.TextField.FormatValueAsHtml(self, server, flag, 
style,
            name=name
          )
        # Next try-except is necessary for QMTest. When test is loaded 
for edit,
        # the value content is ok, but if test editing form contains 
button
        # (for example to add/remove substitution definition) and this 
button is
        # used, the form reload logic goes in different route, and value 
has encoding
        # that replace cannot handle. This case is handled by except 
part.
        try:
          html = unicode(html,'UTF8').replace(flag, value)
        except UnicodeError:
          html = unicode(html,'UTF8').replace(flag, 
unicode(value,'UTF8'))
            
        return html.encode('UTF8')

This is only basic text field. Our test class for complex tests that are 
written in Python is far more complex. Anyone interested can find it 
(soon) in our CVS at sourceforge.

3. It's necessary to keep all unicode values that are displayed (like 
annotations) encoded as UTF8.

> (Also, in the usual open-source way, we'll be likely to do things 
> quickest for our paying customers; if you'd like to hire us to work on 
> this project, we'd be happy to talk to you about that.)

Huh, because we are an open source project, it's somehow complicated for 
us to become a paying customer :-)

Best regards
Pavel Cisar (ICQ: 89017288)
http://www.ibphoenix.com
For all your upto date Firebird and
InterBase information



