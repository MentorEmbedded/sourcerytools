From Diana.Bosio at cern.ch  Tue Jun  1 09:09:25 2004
From: Diana.Bosio at cern.ch (Diana Bosio)
Date: Tue, 01 Jun 2004 11:09:25 +0200
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B79348.2050803@codesourcery.com>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch> <40B734FD.1050005@sympatico.ca> <40B739E5.3020909@cern.ch> <40B74036.1070109@sympatico.ca> <40B74C6A.10903@cern.ch> <40B79348.2050803@codesourcery.com>
Message-ID: <40BC47C5.8010905@cern.ch>

So, basically, you are telling me that I cannot install from rpm because 
my python 2.2 is in /usr/bin/python2.2 rather than /usr/bin/python and I 
have no way of setting the path at run time; am I correct?

Thanks,
Diana

Mark Mitchell wrote:
> 
>> 1. rpm installation tells me that I have the wrong version of python 
>> and tells me to set the QM_PYTHON variable. I set it and it still 
>> tells me to set that variable. I use tcsh, maybe it is this that 
>> causes it?
> 
> 
> That's a misleading message; QMTest no longer uses that environment 
> variable.  Thanks for pointing out this issue; this patch removes the 
> message.
> 
> Thanks for the feedback!
> 
> 
> ------------------------------------------------------------------------
> 
> 2004-05-28  Mark Mitchell  <mark at codesourcery.com>
> 
> 	* qm/test/qmtest (check_python_version): Clarify error message.
> 
> Index: qm/test/qmtest
> ===================================================================
> RCS file: /home/qm/Repository/qm/qm/test/qmtest,v
> retrieving revision 1.4.2.2
> diff -c -5 -p -r1.4.2.2 qmtest
> *** qm/test/qmtest	27 May 2004 19:02:06 -0000	1.4.2.2
> --- qm/test/qmtest	28 May 2004 19:23:56 -0000
> *************** def check_python_version():
> *** 48,61 ****
>       if old:
>           if len(required_python_version) == 2:
>               version = "%d.%d" % required_python_version
>           else:
>               version = "%d.%d.%d" % required_python_version
> !         sys.stderr.write(
> !             ("QMTest requires Python %s or later.\n"
> !              "Set the QM_PYTHON environment variable to an appropriate "
> !              "Python interpreter.\n") % version)
>           sys.exit(1)
>   
>   check_python_version()
>   
>   ########################################################################
> --- 48,59 ----
>       if old:
>           if len(required_python_version) == 2:
>               version = "%d.%d" % required_python_version
>           else:
>               version = "%d.%d.%d" % required_python_version
> !         sys.stderr.write("qmtest: error: QMTest requires Python %s or later.\n"
> !                          % version)
>           sys.exit(1)
>   
>   check_python_version()
>   
>   ########################################################################


-- 
CERN, European Organization for Nuclear Research
IT Department, Grid Middleware
Geneva 23, CH-1211, Switzerland
Tel: ++ 41 22 767 0638	Fax: ++ 41 22 767 7155




From njs at pobox.com  Tue Jun  1 22:47:21 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Tue, 1 Jun 2004 15:47:21 -0700
Subject: [qmtest] qmtest for linux
In-Reply-To: <40BC47C5.8010905@cern.ch>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch> <40B734FD.1050005@sympatico.ca> <40B739E5.3020909@cern.ch> <40B74036.1070109@sympatico.ca> <40B74C6A.10903@cern.ch> <40B79348.2050803@codesourcery.com> <40BC47C5.8010905@cern.ch>
Message-ID: <20040601224721.GA20387@njs.ddts.net>

On Tue, Jun 01, 2004 at 11:09:25AM +0200, Diana Bosio wrote:
> So, basically, you are telling me that I cannot install from rpm because 
> my python 2.2 is in /usr/bin/python2.2 rather than /usr/bin/python and I 
> have no way of setting the path at run time; am I correct?

Yes.  The RPM has to pick some particular #! line for the QMTest
script, and none will work for everyone, so... some people are just
going to be out of luck, whatever we do.  But it should be easy to
install from source; let us know if you have any troubles.

-- Nathaniel

-- 
Linguistics is arguably the most hotly contested property in the academic
realm. It is soaked with the blood of poets, theologians, philosophers,
philologists, psychologists, biologists and neurologists, along with
whatever blood can be got out of grammarians. - Russ Rymer


From mark at codesourcery.com  Fri Jun 18 22:10:17 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 18 Jun 2004 15:10:17 -0700
Subject: Adding tests on command line
In-Reply-To: <1087477653.3181.3.camel@patlx7.fnal.gov>
References: <1087477653.3181.3.camel@patlx7.fnal.gov>
Message-ID: <40D36849.7040305@codesourcery.com>

Atif Khan wrote:

>Hi:
>
>I am trying to add test(command.ShellCommandTest) on the command line.
>Can you please help me with that.
>
>Looking forward to hear from you.
>
These kinds of questions will get a faster reply if you send them to the 
qmtest mailing list: qmtest at codesourcery.com.

It is possible to add tests from the command-line, but the syntax is a 
little tricky.  You want to use "qmtest create". 

For example:

  qmtest create test "command.ShellCommandTest(command = 'echo hi')"

should work.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From atifkhan at fnal.gov  Mon Jun 21 13:51:04 2004
From: atifkhan at fnal.gov (Atif Khan)
Date: Mon, 21 Jun 2004 08:51:04 -0500
Subject: [Fwd: Re: Adding tests on command line]
Message-ID: <1087825863.19135.0.camel@patlx7.fnal.gov>

Hi:

How can we give the test name.

Looking forward to hear from you soon.

Atif.
-------------- next part --------------
An embedded message was scrubbed...
From: Mark Mitchell <mark at codesourcery.com>
Subject: Re: Adding tests on command line
Date: Fri, 18 Jun 2004 15:10:17 -0700
Size: 2962
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040621/abbfb420/attachment.mht>

From tellic3kc at yahoo.com  Tue Jun 22 22:34:15 2004
From: tellic3kc at yahoo.com (J C)
Date: Tue, 22 Jun 2004 15:34:15 -0700 (PDT)
Subject: RemoteShellTarget on Windows
Message-ID: <20040622223415.25588.qmail@web52808.mail.yahoo.com>

Hi,

>From what I understand the RemoteShellTarget class is
not supported on Windows because its base class is
ProcessTarget, which "is not available on Windows" as
stated in the documentation.

1. Is there a simple way to do the equivalent of
RemoteShellTarget on Windows? (e.g. creating a
RemoteWinShellTarget class that inherits from
ThreadTarget as opposed to ProcessTarget)

2. Why does ProcessTarget not work on Windows?

Thanks,
Nick


		
__________________________________
Do you Yahoo!?
Yahoo! Mail - Helps protect you from nasty viruses.
http://promotions.yahoo.com/new_mail


From mark at codesourcery.com  Wed Jun 23 06:58:38 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 22 Jun 2004 23:58:38 -0700
Subject: [qmtest] RemoteShellTarget on Windows
In-Reply-To: <20040622223415.25588.qmail@web52808.mail.yahoo.com>
References: <20040622223415.25588.qmail@web52808.mail.yahoo.com>
Message-ID: <40D92A1E.8040504@codesourcery.com>

J C wrote:

>Hi,
>
>From what I understand the RemoteShellTarget class is
>not supported on Windows because its base class is
>ProcessTarget, which "is not available on Windows" as
>stated in the documentation.
>
>  
>
Correct.

>1. Is there a simple way to do the equivalent of
>RemoteShellTarget on Windows? (e.g. creating a
>RemoteWinShellTarget class that inherits from
>ThreadTarget as opposed to ProcessTarget)
>  
>
Perhaps -- I'm not sure exactly what Windows provides for remote process 
execution, if anything.  In theory, the existing code would work on 
Windows if you have a working "rsh"; you might be able to use something 
from MinGW or Cygwin for that.  There might be a few changes required to 
process_target.py to remove UNIX assumptions, but they're don't look to 
be too many.  The bits where the pipes are set up look like the only 
obvious UNIXy bits to me.

Yours,

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From njs at pobox.com  Wed Jun 23 09:07:44 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Wed, 23 Jun 2004 02:07:44 -0700
Subject: [qmtest] RemoteShellTarget on Windows
In-Reply-To: <40D92A1E.8040504@codesourcery.com>
References: <20040622223415.25588.qmail@web52808.mail.yahoo.com> <40D92A1E.8040504@codesourcery.com>
Message-ID: <20040623090744.GA2742@njs.ddts.net>

On Tue, Jun 22, 2004 at 11:58:38PM -0700, Mark Mitchell wrote:
> There might be a few changes required to 
> process_target.py to remove UNIX assumptions, but they're don't look to 
> be too many.  The bits where the pipes are set up look like the only 
> obvious UNIXy bits to me.

Probably this should just be changed to use a subclass of
RedirectedExecutable, if someone wanted to make that change... though
looks like this might be easier if RedirectedExecutable were
refactored a bit, it could be more convenient to subclass.

-- Nathaniel

-- 
Details are all that matters; God dwells there, and you never get to
see Him if you don't struggle to get them right. -- Stephen Jay Gould


From tellic3kc at yahoo.com  Thu Jun 24 19:28:34 2004
From: tellic3kc at yahoo.com (J C)
Date: Thu, 24 Jun 2004 12:28:34 -0700 (PDT)
Subject: [qmtest] RemoteShellTarget on Windows
Message-ID: <20040624192834.75336.qmail@web52802.mail.yahoo.com>

>From what I understand of the, the classes
TimeoutExecutable and RedirectedExecutable in
executable.py are not used anywhere. Are they complete
and usable?
 
Assuming that they are usable, could you outline what
exactly would need to be done to use a subclass of
RedirectedExecutable to allow ProcessTarget to work on
Windows.
 
Would the solution involve something like the
following:
 
class QMTestExecutable(RedirectedExecutable):
  def _InitializeParent(self):
    super(QMTestExecutable, self).InitializeParent
    self.command_pipe = self._stdout_pipe 
    self.response_pipe = self._stdin_pipe 
  def _InitializeChild(self):
   super(...).InitializeChild()
        
What else would need to be changed for should this
work?
 
I am currently trying to get RSHTarget to work on
Windows using the remote shell program rshsvc.exe
provided by Microsoft.
        
Thanks,
Nick

Nathaniel Smith wrote:
>On Tue, Jun 22, 2004 at 11:58:38PM -0700, Mark
>Mitchell wrote:
>> There might be a few changes required to 
>> process_target.py to remove UNIX assumptions, but
>>they're don't look to 
>> be too many. The bits where the pipes are set up
>>look like the only 
>> obvious UNIXy bits to me.
>Probably this should just be changed to use a
>subclass of
>RedirectedExecutable, if someone wanted to make that
>change... though
>looks like this might be easier if
>RedirectedExecutable were
>refactored a bit, it could be more convenient to
>subclass.
>-- Nathaniel



		
__________________________________
Do you Yahoo!?
Yahoo! Mail is new and improved - Check it out!
http://promotions.yahoo.com/new_mail


From mark at codesourcery.com  Thu Jun 24 19:56:42 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 24 Jun 2004 12:56:42 -0700
Subject: [qmtest] RemoteShellTarget on Windows
In-Reply-To: <20040624192834.75336.qmail@web52802.mail.yahoo.com>
References: <20040624192834.75336.qmail@web52802.mail.yahoo.com>
Message-ID: <40DB31FA.40306@codesourcery.com>

J C wrote:

>From what I understand of the, the classes
>TimeoutExecutable and RedirectedExecutable in
>executable.py are not used anywhere. Are they complete
>and usable?
>  
>
Yes; they are used on both UNIX and Windows.

>Assuming that they are usable, could you outline what
>exactly would need to be done to use a subclass of
>RedirectedExecutable to allow ProcessTarget to work on
>Windows.
>  
>
> 
>Would the solution involve something like the
>following:
>  
>
No, I don't think so.  You can't use InitializeChild at all on Windows; 
that's the problem.  I think Nathaniel's idea is that 
RedirectedExecutable contains logic that does the stuff that would 
otherwise have to be done in InitializeChild before the Spawn on Windows 
(using the Windows process set-up parameters).  Look at how 
_InitializeParent returns a value on Windows.

You want to do something similar in ProcessTarget, or somehow generalize 
the stuff in RedirectedExecutable so that you can use it.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From slowrey at nextone.com  Mon Jun 28 21:06:39 2004
From: slowrey at nextone.com (Scott Lowrey)
Date: Mon, 28 Jun 2004 17:06:39 -0400
Subject: Prerequisite Logic
Message-ID: <40E0885F.3040503@nextone.com>

When I select a single test to run, and that test depends on a 
prerequisite test and a resource, why does QMTest run the resource but 
not the prerequisite test?  I can understand skipping the prereq  if 
QMTest already has a PASS status for it (web only), but this isn't the 
case.  QMTest effectively ignores the prerequisite dependency when 
"cherry picking" tests to run.

I guess I can understand the logic that says, "You told me to run test X 
and test X only."  But it seems a bit counterintuitive that QMTest can 
treat prerequisites differently depending on how the user specified what 
to run.

If the idea is to avoid running tests that the user didn't specifically 
ask for, then maybe it would be best if QMTest returned an error (or 
warning?) stating that the desired test cannot run until the 
prerequisite does.  This would get pretty hairy with a command-line 
invocation but would probably suffice for the web interface.

Thoughts?
-- 
*Scott Lowrey*
NexTone Communications
Germantown, Maryland

/(240)912-1369/
NexTone.com <http://nextone.com>



From njs at pobox.com  Mon Jun 28 21:53:00 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Mon, 28 Jun 2004 14:53:00 -0700
Subject: [qmtest] Prerequisite Logic
In-Reply-To: <40E0885F.3040503@nextone.com>
References: <40E0885F.3040503@nextone.com>
Message-ID: <20040628215300.GA24230@njs.ddts.net>

On Mon, Jun 28, 2004 at 05:06:39PM -0400, Scott Lowrey wrote:
> When I select a single test to run, and that test depends on a 
> prerequisite test and a resource, why does QMTest run the resource but 
> not the prerequisite test?  I can understand skipping the prereq  if 
> QMTest already has a PASS status for it (web only), but this isn't the 
> case.  QMTest effectively ignores the prerequisite dependency when 
> "cherry picking" tests to run.

Yes, this is the intended behavior.  This is documented in the manual,
though perhaps not highlighted as much as it should be:
  http://www.codesourcery.com/public/qmtest/qm-2.2/manual.html/sec-qmtest-concepts.html#sec-tests
  http://www.codesourcery.com/public/qmtest/qm-2.2/manual.html/sec-running-tests.html#sec-ordering-and-dependencies

> I guess I can understand the logic that says, "You told me to run test X 
> and test X only."  But it seems a bit counterintuitive that QMTest can 
> treat prerequisites differently depending on how the user specified what 
> to run.

The idea is that tests and resources have different semantics.  A
Resource provides, well, a resource; a Test determines the truth value
of some statement about the thing being tested (either "X works"
or "X doesn't work", usually).  If I "depend on a Resource", that
means that my code won't execute properly without that Resource.  If I
"depend on a Test", that means that there's no point in running me
when that test fails, because we already know that whatever I'm
testing is broken.  Test dependencies are just an optimization, if you
want to think about it that way.

This distinction has other consequences too.  E.g. if you're running
across multiple machines, a given Resource may be set up multiple
times, once on each machine that needs it, whereas a test will never
be run more than once, no matter what.

> If the idea is to avoid running tests that the user didn't specifically 
> ask for, then maybe it would be best if QMTest returned an error (or 
> warning?) stating that the desired test cannot run until the 
> prerequisite does.  This would get pretty hairy with a command-line 
> invocation but would probably suffice for the web interface.

Basically, one needs to understand that QMTest isn't make, and that if
"the desired test cannot run until the prerequisite does" this is
something of a bug in your test suite.

I say "something" because it turns out there are sometimes cases when
this behavior is obnoxious, and one has to use kluges to work around
it.  Unfortunately, we don't have a very good solution for these cases
yet...

-- Nathaniel


From slowrey at nextone.com  Mon Jun 28 22:06:40 2004
From: slowrey at nextone.com (Scott Lowrey)
Date: Mon, 28 Jun 2004 18:06:40 -0400
Subject: [qmtest] Prerequisite Logic
In-Reply-To: <20040628215300.GA24230@njs.ddts.net>
References: <40E0885F.3040503@nextone.com> <20040628215300.GA24230@njs.ddts.net>
Message-ID: <40E09670.6040609@nextone.com>

Nathaniel Smith wrote:

>If I "depend on a Resource", that
>means that my code won't execute properly without that Resource.  If I
>"depend on a Test", that means that there's no point in running me
>when that test fails, because we already know that whatever I'm
>testing is broken.  
>
This makes good sense.  I made a mistake: I defined "tests" that 
actually perform setup tasks.  They should be resources.  

*sigh*  I'll have to go back and rework these.

Thanks!

-- 
*Scott Lowrey*
NexTone Communications
Germantown, Maryland

/(240)912-1369/
NexTone.com <http://nextone.com>



