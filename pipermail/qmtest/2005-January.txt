From stefan at codesourcery.com  Wed Jan  5 22:23:55 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Wed, 05 Jan 2005 17:23:55 -0500
Subject: work around bug in distutils version <= 1.0.3
Message-ID: <41DC68FB.6020103@codesourcery.com>

Hi there,

the attached patches provide a custom 'build_scripts' command
that makes scripts executable. It is required on posix systems
when the python version is < 2.3.

A much simpler fix was already part of the GNUMakefile, but as
I would like to complete the transition from configure/make
to distutils, this step is required in order to make the old
build system fully obsolete.

Regards,
		Stefan
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20050105/4190f011/attachment.ksh>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build_scripts.py
Type: application/x-python
Size: 2039 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20050105/4190f011/attachment.bin>

From mark at codesourcery.com  Wed Jan  5 23:59:45 2005
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 05 Jan 2005 15:59:45 -0800
Subject: [qmtest] work around bug in distutils version <= 1.0.3
In-Reply-To: <41DC68FB.6020103@codesourcery.com>
References: <41DC68FB.6020103@codesourcery.com>
Message-ID: <41DC7F71.7030000@codesourcery.com>

Stefan Seefeld wrote:
> Hi there,
> 
> the attached patches provide a custom 'build_scripts' command
> that makes scripts executable. It is required on posix systems
> when the python version is < 2.3.
> 
> A much simpler fix was already part of the GNUMakefile, but as
> I would like to complete the transition from configure/make
> to distutils, this step is required in order to make the old
> build system fully obsolete.

Yay!

This patch looks fine to me.  We normally capitalize sentences in 
comments, though so for:

    # the original command is good enough.

and:

             # work around distutils bug (for python > 2.3)
             # change permissions to executable.

using complete sentences with a capital letter and a period would be nice.

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com
(916) 791-8304


From stefan at codesourcery.com  Fri Jan  7 21:15:26 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Fri, 07 Jan 2005 16:15:26 -0500
Subject: QMTest issue tracker
Message-ID: <41DEFBEE.9050209@codesourcery.com>

I've set up an issue tracker for QMTest at
https://support.codesourcery.com/QMTest/.

Please file any issues you have with QMTest,
including enhancement requests, to the tracker.

Enjoy !

	Stefan


From abisain at qualcomm.com  Fri Jan  7 21:48:38 2005
From: abisain at qualcomm.com (Abhijeet Bisain)
Date: Fri, 07 Jan 2005 13:48:38 -0800
Subject: Tool to generate unit tests
Message-ID: <6.0.0.22.2.20050107134403.039e7770@qcmail1.qualcomm.com>

Hi,

	This may not be the relevant list, but since there are so many test 
experts here that I feel I will get good information. I was looking for 
open-source tools to autogenerate unit test code from C++ classes. A google 
search did not return much.

Thanks,
Abhijeet



From mike at trisko.net  Wed Jan 12 05:03:52 2005
From: mike at trisko.net (Michael Trisko)
Date: Tue, 11 Jan 2005 23:03:52 -0600
Subject: 'module' object has no attribute 'Queue'
Message-ID: <200501120504.j0C54O2T031039@mx1.messagewash.net>

I encountered this error after first installing QMTest on a Windows XP
machine with Python 2.3.  This occurs while following the example in the
Getting Started section of the documentation, after selecting Run -> All
Tests.  Do you have any clues as to what is causing the problem?

Thanks,

Mike

Exception type: exceptions.AttributeError

Exception value: 'module' object has no attribute 'Queue'

Stack trace:

  File "C:\Python23\Lib\site-packages\qm\web.py", line 476, in
__HandleScriptRequest
    script_output = self.server.ProcessScript(request)
 
  File "C:\Python23\Lib\site-packages\qm\web.py", line 821, in ProcessScript
    return self.__scripts[request.GetUrl()](request)
 
  File "C:\Python23\Lib\site-packages\qm\test\web\web.py", line 1856, in
HandleRunTests
    self.__expected_outcomes)
 
  File "C:\Python23\Lib\site-packages\qm\test\execution_thread.py", line 80,
in __init__
    targets, result_streams, expectations)
 
  File "C:\Python23\Lib\site-packages\qm\test\execution_engine.py", line
225, in __init__
    self.__response_queue = qm.queue.Queue(0)



From mark at codesourcery.com  Mon Jan 17 22:37:02 2005
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 17 Jan 2005 14:37:02 -0800
Subject: [qmtest] 'module' object has no attribute 'Queue'
In-Reply-To: <200501120504.j0C54O2T031039@mx1.messagewash.net>
References: <200501120504.j0C54O2T031039@mx1.messagewash.net>
Message-ID: <41EC3E0E.6010102@codesourcery.com>

Michael Trisko wrote:
> I encountered this error after first installing QMTest on a Windows XP
> machine with Python 2.3.  This occurs while following the example in the
> Getting Started section of the documentation, after selecting Run -> All
> Tests.  Do you have any clues as to what is causing the problem?

Not off the top of my head, but we've entered your report in the QMTest 
bug tracking system so that we will make sure to track this down and get 
it fixed.

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com
(916) 791-8304


From jtc at acorntoolworks.com  Tue Jan 18 02:10:47 2005
From: jtc at acorntoolworks.com (J.T. Conklin)
Date: Mon, 17 Jan 2005 18:10:47 -0800
Subject: resource extension classes
Message-ID: <87r7kjh4go.fsf@orac.acorntoolworks.com>

I'm writing a unit test suite for our distributed system.  Until now,
each component has been tested individually, but now I'll be testing
components that interact together.  We're using CORBA as our middle-
ware layer, so things like initializing the CORBA Naming Service seem
like good fits for QMTest's resource extension class.

I've never used resource classes before, so to get my feet wet I wrote
one that inherited from "Resource" with null SetUp() and CleanUp()
methods.  I was able to register it without problems, but it doesn't
show up in the Resource drop down when I try to add/edit tests.  The
temporary.TempDirectoryResource that "qmtest extensions" says is
present isn't listed either.

Assuming I can get past listing the resource, does anyone have advise
they could share on how resources should spawn executables on SetUp()
and reap them on CleanUp()?  Is there any QMTest or Python classes to
assist?

Many thanks,

    --jtc

Details:
        QMtest 2.2
        Python 2.3.4
        NetBSD/amd64 2.0

-- 
J.T. Conklin


From eichin at metacarta.com  Tue Jan 18 05:11:36 2005
From: eichin at metacarta.com (eichin at metacarta.com)
Date: 18 Jan 2005 00:11:36 -0500
Subject: [qmtest] resource extension classes
In-Reply-To: <87r7kjh4go.fsf@orac.acorntoolworks.com>
References: <87r7kjh4go.fsf@orac.acorntoolworks.com>
Message-ID: <7gekgjqq2f.fsf@pikespeak.metacarta.com>

> methods.  I was able to register it without problems, but it doesn't
> show up in the Resource drop down when I try to add/edit tests.  The

Do you have an "arguments" list member of your derived class?  That's
used for the UI components, and I think you have to have it (possibly
empty, or with computed=true values for things you're replacing...) in
order to see it in the webui.

> they could share on how resources should spawn executables on SetUp()
> and reap them on CleanUp()?  Is there any QMTest or Python classes to

If they're local, you could just stash the pid in self, and then
kill it in CleanUp.  (I do a lot of stuff where setup ssh'es to
another machine and runs "scriptname args start" and CleanUp just runs
"scriptname args stop", and the script just stashes the pid on the
System Under Test.)
			_Mark_ <eichin at metacarta.com>

(ps. Hi! :-)


From stefan at codesourcery.com  Tue Jan 18 14:07:01 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 18 Jan 2005 09:07:01 -0500
Subject: [qmtest] resource extension classes
In-Reply-To: <87r7kjh4go.fsf@orac.acorntoolworks.com>
References: <87r7kjh4go.fsf@orac.acorntoolworks.com>
Message-ID: <41ED1805.1010903@codesourcery.com>

J.T. Conklin wrote:
 > I'm writing a unit test suite for our distributed system.  Until now,
 > each component has been tested individually, but now I'll be testing
 > components that interact together.  We're using CORBA as our middle-
 > ware layer, so things like initializing the CORBA Naming Service seem
 > like good fits for QMTest's resource extension class.

Right.

 > I've never used resource classes before, so to get my feet wet I wrote
 > one that inherited from "Resource" with null SetUp() and CleanUp()
 > methods.  I was able to register it without problems, but it doesn't
 > show up in the Resource drop down when I try to add/edit tests.  The

Indeed, I can reproduce that. I'll look into that, but meanwhile you
may just run the test on the command line ('qmtest run your.test').
You should see messages of the form 'Setup <ResourceId>: PASS' to indicate
that the resource has been set up before the actual test is run.

 > temporary.TempDirectoryResource that "qmtest extensions" says is
 > present isn't listed either.
 >
 > Assuming I can get past listing the resource, does anyone have advise
 > they could share on how resources should spawn executables on SetUp()
 > and reap them on CleanUp()?  Is there any QMTest or Python classes to
 > assist?

There are: I usually use classes from the qm.executable
module to do that, e.g. RedirectedExecutable.

Regards,
		Stefan


From stefan at codesourcery.com  Tue Jan 18 16:52:38 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 18 Jan 2005 11:52:38 -0500
Subject: [qmtest] resource extension classes
In-Reply-To: <41ED1805.1010903@codesourcery.com>
References: <87r7kjh4go.fsf@orac.acorntoolworks.com> <41ED1805.1010903@codesourcery.com>
Message-ID: <41ED3ED6.9060800@codesourcery.com>

Little correction:

Stefan Seefeld wrote:
> J.T. Conklin wrote:

>  > I've never used resource classes before, so to get my feet wet I wrote
>  > one that inherited from "Resource" with null SetUp() and CleanUp()
>  > methods.  I was able to register it without problems, but it doesn't
>  > show up in the Resource drop down when I try to add/edit tests.  The
> 
> Indeed, I can reproduce that.

The test database I used missed the 'GetResourceIds' method, and thus
no resources were available to choose from when run in graphic mode.
As I usually only run qmtest per command line, I never noticed the lacking
method. Adding it, all resources are displayed fine, both, on the main page
as well as in the 'resources' field for the appropriate tests in the edit page.

HTH,
		Stefan


From jtc at acorntoolworks.com  Wed Jan 19 19:24:47 2005
From: jtc at acorntoolworks.com (J.T. Conklin)
Date: Wed, 19 Jan 2005 11:24:47 -0800
Subject: [qmtest] resource extension classes
In-Reply-To: <7gekgjqq2f.fsf@pikespeak.metacarta.com> (eichin@metacarta.com's
 message of "18 Jan 2005 00:11:36 -0500")
References: <87r7kjh4go.fsf@orac.acorntoolworks.com>
	<7gekgjqq2f.fsf@pikespeak.metacarta.com>
Message-ID: <87ekgh9q80.fsf@orac.acorntoolworks.com>

Hi Mark, It's been a long time...

eichin at metacarta.com writes:
>> methods.  I was able to register it without problems, but it doesn't
>> show up in the Resource drop down when I try to add/edit tests.  The
>
> Do you have an "arguments" list member of your derived class?  That's
> used for the UI components, and I think you have to have it (possibly
> empty, or with computed=true values for things you're replacing...) in
> order to see it in the webui.


No, I didn't have any arguments.  I'll eventually need them, but I
thought I'd try the simplest possible extension class first before
getting more fancy.  Unfortunately, adding "arguments = []" to the
class didn't help it show up in the GUI.  In retrospect, I'm not 
surprised since the TempDirectoryResource() class that comes with
QMTest does have arguments and it doesn't show up either.

>> they could share on how resources should spawn executables on SetUp()
>> and reap them on CleanUp()?  Is there any QMTest or Python classes to
>
> If they're local, you could just stash the pid in self, and then
> kill it in CleanUp.  (I do a lot of stuff where setup ssh'es to
> another machine and runs "scriptname args start" and CleanUp just runs
> "scriptname args stop", and the script just stashes the pid on the
> System Under Test.)

Sounds good.  You wouldn't happen to have anything you can share :-)

    --jtc

-- 
J.T. Conklin


From jtc at acorntoolworks.com  Wed Jan 19 19:34:59 2005
From: jtc at acorntoolworks.com (J.T. Conklin)
Date: Wed, 19 Jan 2005 11:34:59 -0800
Subject: [qmtest] resource extension classes
In-Reply-To: <41ED1805.1010903@codesourcery.com> (Stefan Seefeld's message
 of "Tue, 18 Jan 2005 09:07:01 -0500")
References: <87r7kjh4go.fsf@orac.acorntoolworks.com>
	<41ED1805.1010903@codesourcery.com>
Message-ID: <87acr59pr0.fsf@orac.acorntoolworks.com>

Stefan Seefeld <stefan at codesourcery.com> writes:
>  > I've never used resource classes before, so to get my feet wet I wrote
>  > one that inherited from "Resource" with null SetUp() and CleanUp()
>  > methods.  I was able to register it without problems, but it doesn't
>  > show up in the Resource drop down when I try to add/edit tests.  The
>
> Indeed, I can reproduce that. I'll look into that, but meanwhile you
> may just run the test on the command line ('qmtest run your.test').
> You should see messages of the form 'Setup <ResourceId>: PASS' to indicate
> that the resource has been set up before the actual test is run.

I mostly use the command line, but we use the GUI to create tests.
I guess I could edit the XML directly, what needs to be listed in
the <argument name="resources"> ... </argument>?

Thanks,

    --jtc

-- 
J.T. Conklin


From jtc at acorntoolworks.com  Wed Jan 19 20:16:12 2005
From: jtc at acorntoolworks.com (J.T. Conklin)
Date: Wed, 19 Jan 2005 12:16:12 -0800
Subject: [qmtest] resource extension classes
In-Reply-To: <87r7kjh4go.fsf@orac.acorntoolworks.com> (J. T. Conklin's
 message of "Mon, 17 Jan 2005 18:10:47 -0800")
References: <87r7kjh4go.fsf@orac.acorntoolworks.com>
Message-ID: <87651t9nub.fsf@orac.acorntoolworks.com>

jtc at acorntoolworks.com (J.T. Conklin) writes:
> I've never used resource classes before, so to get my feet wet I wrote
> one that inherited from "Resource" with null SetUp() and CleanUp()
> methods.  I was able to register it without problems, but it doesn't
> show up in the Resource drop down when I try to add/edit tests.  The
> temporary.TempDirectoryResource that "qmtest extensions" says is
> present isn't listed either.

OK, I'm an idiot.

I assumed that I could use the resource class name directly from the
edit test pane, but you must create a resource *.qma file to wrap it
first.  Once I created the resource, it showed up in the edit test 
pane.

    --jtc

-- 
J.T. Conklin


From mark at codesourcery.com  Wed Jan 19 20:38:56 2005
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 19 Jan 2005 12:38:56 -0800
Subject: [qmtest] resource extension classes
In-Reply-To: <87651t9nub.fsf@orac.acorntoolworks.com>
References: <87r7kjh4go.fsf@orac.acorntoolworks.com> <87651t9nub.fsf@orac.acorntoolworks.com>
Message-ID: <41EEC560.7020204@codesourcery.com>

J.T. Conklin wrote:
> jtc at acorntoolworks.com (J.T. Conklin) writes:
> 
>>I've never used resource classes before, so to get my feet wet I wrote
>>one that inherited from "Resource" with null SetUp() and CleanUp()
>>methods.  I was able to register it without problems, but it doesn't
>>show up in the Resource drop down when I try to add/edit tests.  The
>>temporary.TempDirectoryResource that "qmtest extensions" says is
>>present isn't listed either.
> 
> 
> OK, I'm an idiot.
> 
> I assumed that I could use the resource class name directly from the
> edit test pane, but you must create a resource *.qma file to wrap it
> first.  Once I created the resource, it showed up in the edit test 
> pane.

OK, good; that makes sense.  Resources are objects.  I don't remember if 
the GUI has a "Create Resource" choice; if it does, you should have been 
able to create it from the GUI, just as you would create a test.  If it 
doesn't, it would be good if you'd file a bug in our online tracking system.

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com
(916) 791-8304


From jtc at acorntoolworks.com  Wed Jan 19 20:59:44 2005
From: jtc at acorntoolworks.com (J.T. Conklin)
Date: Wed, 19 Jan 2005 12:59:44 -0800
Subject: [qmtest] resource extension classes
In-Reply-To: <41EEC560.7020204@codesourcery.com> (Mark Mitchell's message of
 "Wed, 19 Jan 2005 12:38:56 -0800")
References: <87r7kjh4go.fsf@orac.acorntoolworks.com>
	<87651t9nub.fsf@orac.acorntoolworks.com>
	<41EEC560.7020204@codesourcery.com>
Message-ID: <87zmz5879b.fsf@orac.acorntoolworks.com>

Mark Mitchell <mark at codesourcery.com> writes:
> OK, good; that makes sense.  Resources are objects.  I don't remember
> if the GUI has a "Create Resource" choice; if it does, you should have
> been able to create it from the GUI, just as you would create a test.
> If it doesn't, it would be good if you'd file a bug in our online
> tracking system.

The GUI does have a "Create Resource", and it appears to work fine.

    --jtc

-- 
J.T. Conklin


From seefeld at sympatico.ca  Sat Jan 22 22:46:18 2005
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Sat, 22 Jan 2005 17:46:18 -0500
Subject: [qmtest] Tool to generate unit tests
In-Reply-To: <6.0.0.22.2.20050107134403.039e7770@qcmail1.qualcomm.com>
References: <6.0.0.22.2.20050107134403.039e7770@qcmail1.qualcomm.com>
Message-ID: <41F2D7BA.3040806@sympatico.ca>

Hi Abhijeet,

Abhijeet Bisain wrote:
> Hi,
> 
>     This may not be the relevant list, but since there are so many test 
> experts here that I feel I will get good information. I was looking for 
> open-source tools to autogenerate unit test code from C++ classes. A 
> google search did not return much.

You may be interested in source-code introspection tools <shameless>such as
synopsis (http://synopsis.fresco.org)</shameless> that let you specify rules
to generate testing code from API declarations.

Regards,
		Stefan


From dusica at gmail.com  Wed Jan 26 10:41:58 2005
From: dusica at gmail.com (Dusica Bogojevic)
Date: Wed, 26 Jan 2005 11:41:58 +0100
Subject: problems running qmtest
Message-ID: <9632d4f6050126024126cc935@mail.gmail.com>

Hi, 

I'm having this problem when trying to run qmtest:


  File "/usr/bin/qmtest", line 133, in ?
    import qm.test.cmdline
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 20, in ?
    import base
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 24, in ?
    import qm.attachment
  File "/usr/lib/python2.2/site-packages/qm/attachment.py", line 47, in ?
    import xmlutil
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 23, in ?
    import xml.dom

Anyone knows what to do?

Thanx

Dush


From stefan at codesourcery.com  Wed Jan 26 16:35:07 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Wed, 26 Jan 2005 11:35:07 -0500
Subject: [qmtest] problems running qmtest
In-Reply-To: <9632d4f6050126024126cc935@mail.gmail.com>
References: <9632d4f6050126024126cc935@mail.gmail.com>
Message-ID: <41F7C6BB.2010604@codesourcery.com>

Hi Dusica,

Dusica Bogojevic wrote:
> Hi, 
> 
> I'm having this problem when trying to run qmtest:
> 
> 
>   File "/usr/bin/qmtest", line 133, in ?
>     import qm.test.cmdline
>   File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 20, in ?
>     import base
>   File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 24, in ?
>     import qm.attachment
>   File "/usr/lib/python2.2/site-packages/qm/attachment.py", line 47, in ?
>     import xmlutil
>   File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 23, in ?
>     import xml.dom

The above snippet lacks the most important part of the message, which tells us
the specific error.

> Anyone knows what to do?

My guess is that your python installation lacks at least part of the
required xml packages. What python version are you using ? On what
platform ?

Regards,
		Stefan



