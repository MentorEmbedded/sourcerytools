From andreas at digitalplaywright.com  Wed Mar  2 16:43:43 2011
From: andreas at digitalplaywright.com (Andreas Saebjoernsen)
Date: Wed, 2 Mar 2011 08:43:43 -0800
Subject: Repository for QMTest support packages for g++
Message-ID: <AANLkTinQ-FAHRsoSSHtL5zDni7EUsF+sCwJB1R0MrwO9@mail.gmail.com>

The g++ testsuite is build using QMTest. According to the
README.QMTest in the testsuite I should check out

      cvs -d :pserver:anoncvs at cvs.codesourcery.com:/home/qm/Repository  co qmtc

to get the qmtc and qmtest_gcc support packages. This repository doesn't exist.

Is there an alternate repository that contains the qmtc and qmtest_gcc
support packages?

Best,
Andreas


From mats.liljegren at enea.com  Fri Mar  4 08:54:19 2011
From: mats.liljegren at enea.com (Mats Liljegren)
Date: Fri, 04 Mar 2011 09:54:19 +0100
Subject: Deprecated tags?
Message-ID: <1299228859.22796.4.camel@mlil>

Hi,

I'm reading the file xml_database.py found in qm/test/classes. In method
__ParseTestDocument() in class XMLDatabase I find the following two
comments:
        # For backwards compatibility, look for "prerequisite" elements.
and:
        # For backwards compatibility, look for "resource" elements.
Does this mean that in test qmt files, the following is deprecated:

<resource>my.resource.name</resource>

is deprecated? If so, what is the mechanism replaced with? Or am I
confused by the source code?

Regards
  Mats



From mark_mitchell at mentor.com  Sun Mar  6 21:35:21 2011
From: mark_mitchell at mentor.com (Mark Mitchell)
Date: Sun, 06 Mar 2011 13:35:21 -0800
Subject: [qmtest] Repository for QMTest support packages for g++
In-Reply-To: <AANLkTinQ-FAHRsoSSHtL5zDni7EUsF+sCwJB1R0MrwO9@mail.gmail.com>
References: <AANLkTinQ-FAHRsoSSHtL5zDni7EUsF+sCwJB1R0MrwO9@mail.gmail.com>
Message-ID: <4D73FE19.1070401@mentor.com>

On 3/2/2011 8:43 AM, Andreas Saebjoernsen wrote:

> The g++ testsuite is build using QMTest. According to the
> README.QMTest in the testsuite I should check out
> 
>       cvs -d :pserver:anoncvs at cvs.codesourcery.com:/home/qm/Repository  co qmtc
> 
> to get the qmtc and qmtest_gcc support packages. This repository doesn't exist.
> 
> Is there an alternate repository that contains the qmtc and qmtest_gcc
> support packages?

Andreas, I apologize for the slow reply.  The information about the G++
testsuite is out-of-date.  We did make a push to get QMTest accepted in
GCC, but because GCC has been using DejaGNU for so long, it wasn't
possible to displace DejaGNU.  And, over time, the QMTest support has
bit-rotted away.  So, that information is no longer accurate.  I will
remove that file from the FSF GCC repository so that we stop confusing
people.

Thank you,

-- 
Mark Mitchell
Mentor Graphics
mark_mitchell at mentor.com
+1 (510) 354-7337


From andreas at digitalplaywright.com  Sat Mar 12 21:08:25 2011
From: andreas at digitalplaywright.com (Andreas Saebjoernsen)
Date: Sat, 12 Mar 2011 13:08:25 -0800
Subject: using an expectation database
Message-ID: <AANLkTinOENoNQdPJytQYTcjhOvM+AuNqdWt8JC4RKRqB@mail.gmail.com>

We've explored QMTest, and we've a prototype usage in place. However,
there are a few things that are unclear to us so we hope that you
could help explain how QMTest works in these cases.

These are the questions we've not been able to explain:

 1) Is the feature for having expected test-statuses on a per-target
(e.g red hat linux, windows, etc) basis implemented?

 2) Can you have one test results qmr file for a large project?
        * we want to support directories running their tests run in parallel
        * multiple qmtest instances will then write to qmr at the same time
        * currently we have one qmr for each directory that contains tests

 3) Is the feature for having an expectation SQL database implemented?

 4) What is the recommended way of updating the expectations in an
expectation database after running a test?

We appreciate all your help!

Best,
Andreas


From mark_mitchell at mentor.com  Sun Mar 13 20:11:29 2011
From: mark_mitchell at mentor.com (Mark Mitchell)
Date: Sun, 13 Mar 2011 13:11:29 -0700
Subject: [qmtest] using an expectation database
In-Reply-To: <AANLkTinOENoNQdPJytQYTcjhOvM+AuNqdWt8JC4RKRqB@mail.gmail.com>
References: <AANLkTinOENoNQdPJytQYTcjhOvM+AuNqdWt8JC4RKRqB@mail.gmail.com>
Message-ID: <4D7D24F1.3040102@mentor.com>

On 3/12/2011 1:08 PM, Andreas Saebjoernsen wrote:

>  1) Is the feature for having expected test-statuses on a per-target
> (e.g red hat linux, windows, etc) basis implemented?

I'm not sure.  There certainly is the ability to have a separate
expected results file (or, more generally, database) for different
platforms so that you could have an expected results file for each
platform.  But, I don't recall that we ever implemented directly support
for multiple platforms within a single expected results file.

>  2) Can you have one test results qmr file for a large project?
>         * we want to support directories running their tests run in parallel
>         * multiple qmtest instances will then write to qmr at the same time
>         * currently we have one qmr for each directory that contains tests

Yes, you can do this.

>  3) Is the feature for having an expectation SQL database implemented?

No.

>  4) What is the recommended way of updating the expectations in an
> expectation database after running a test?

It really depends on your usage model.  You probably don't want to
automatically update the expectation database after each individual test
run; that might reflect local changes of some sort.  We've generated
updated the expectation database when making a check-in to the trunk
sourcebase, though.

You can keep expectation databases around for previous releases; that's
very helpful in being able to look for regressions/progressions relative
to previous versions of the software.

Thank you,

-- 
Mark Mitchell
Mentor Graphics
mark_mitchell at mentor.com
+1 (510) 354-7337


From stefan at codesourcery.com  Sun Mar 13 20:38:46 2011
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Sun, 13 Mar 2011 16:38:46 -0400
Subject: [qmtest] using an expectation database
In-Reply-To: <AANLkTinOENoNQdPJytQYTcjhOvM+AuNqdWt8JC4RKRqB@mail.gmail.com>
References: <AANLkTinOENoNQdPJytQYTcjhOvM+AuNqdWt8JC4RKRqB@mail.gmail.com>
Message-ID: <4D7D2B56.1000503@codesourcery.com>

Andreas,

On 2011-03-12 16:08, Andreas Saebjoernsen wrote:
> We've explored QMTest, and we've a prototype usage in place. However,
> there are a few things that are unclear to us so we hope that you
> could help explain how QMTest works in these cases.
>
> These are the questions we've not been able to explain:
>
>   1) Is the feature for having expected test-statuses on a per-target
> (e.g red hat linux, windows, etc) basis implemented?

I think that is implemented, yes. See 
http://www.codesourcery.com/public/qmtest/qmtest-snapshot/share/doc/qmtest/html/tutorial/customizing-expectation-databases.html 
for how to use that.

You would need to annotate individual test-runs with values that you can 
then reference in the expectation database. I believe the only 
implementation we provide is via an XML file, but a new extension class 
could be written that fetches expected outcomes from SQL, too.

Regards,

     Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718



