From ghost at cs.msu.su  Fri Jan  4 12:44:41 2002
From: ghost at cs.msu.su (Vladimir Prus)
Date: Fri, 4 Jan 2002 15:44:41 +0300
Subject: command.ExecTest & PATH
Message-ID: <E16MTiD-0007oI-00@zigzag.cs.msu.su>


I have a small question:

command.ExecTest expects the program to be given either as absolute path, or 
to be found in PATH. I naturally want to reference the binary in my working 
copy, but so far has no idea how this can be done.
1. Is there a way to reference context variables inside program name? Inside 
parameter list? I'd say this approach to be the best, since I'd like the 
ability to use working-copy relative names in parameters.
2. Is is possible to create a resource that will set PATH accordingly? Will 
that change affect the path where command.ExecTest looks for the binary?

Regards,
Vladimir


From mark at codesourcery.com  Fri Jan  4 16:06:48 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 04 Jan 2002 08:06:48 -0800
Subject: [qmtest] command.ExecTest & PATH
In-Reply-To: <E16MTiD-0007oI-00@zigzag.cs.msu.su>
Message-ID: <164610000.1010160408@gandalf.codesourcery.com>



--On Friday, January 04, 2002 03:44:41 PM +0300 Vladimir Prus 
<ghost at cs.msu.su> wrote:

>
> 1. Is there a way to reference context variables inside program name?
> Inside  parameter list? I'd say this approach to be the best, since I'd
> like the  ability to use working-copy relative names in parameters.
> 2. Is is possible to create a resource that will set PATH accordingly?
> Will  that change affect the path where command.ExecTest looks for the
> binary?

I think you could use command.ShellCommandTest, taking advantage of the
fact that all context variables are available in the environment for the
child process.

For example, suppose your working directory is in:

  /path/to/dir

Then, you could do:

  qmtest run -c root=/path/to/dir

and use a command.ShellCommandTest that looks like:

  ${QMV_root}/bin/my_program arg1 arg2 arg3

There will be a new version of QMTest ready in a week or so with a
number of minor bug fixes and improvements.

Thanks for trying QMTest!

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From ghost at cs.msu.su  Fri Jan  4 16:40:30 2002
From: ghost at cs.msu.su (Vladimir Prus)
Date: Fri, 4 Jan 2002 19:40:30 +0300
Subject: [qmtest] command.ExecTest & PATH
In-Reply-To: <164610000.1010160408@gandalf.codesourcery.com>
References: <164610000.1010160408@gandalf.codesourcery.com>
Message-ID: <E16MXOR-0008TG-00@zigzag.cs.msu.su>

Mark Mitchell wrote:

> > 1. Is there a way to reference context variables inside program name?
> > Inside  parameter list? I'd say this approach to be the best, since I'd
> > like the  ability to use working-copy relative names in parameters.

> I think you could use command.ShellCommandTest, taking advantage of the
> fact that all context variables are available in the environment for the
> child process.

Great! This works. However, there's a slight problem with the fact that gui 
can't load/store context -- I'll have to set it every time I want to use gui. 
 

Regards,
Vladimir


From ghost at cs.msu.su  Fri Jan  4 16:49:48 2002
From: ghost at cs.msu.su (Vladimir Prus)
Date: Fri, 4 Jan 2002 19:49:48 +0300
Subject: CVS access problems
Message-ID: <E16MXXR-00004q-00@zigzag.cs.msu.su>


I have difficulties accessing QMTest CVS. Here is the error message:

cvs server: failed to create lock directory for 
`/home/qm/Repository/qm/qm/test/doc' 
(/home/qm/Repository/qm/qm/test/doc/#cvs.lock): Permission denied
cvs server: failed to obtain dir lock in repository 
`/home/qm/Repository/qm/qm/test/doc'
cvs [server aborted]: read lock failed - giving up

Would be nice if this problem is resolved.

Regards,
Vladimir


From mark at codesourcery.com  Fri Jan  4 17:23:04 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 04 Jan 2002 09:23:04 -0800
Subject: [qmtest] CVS access problems
In-Reply-To: <E16MXXR-00004q-00@zigzag.cs.msu.su>
Message-ID: <314870000.1010164984@gandalf.codesourcery.com>



--On Friday, January 04, 2002 07:49:48 PM +0300 Vladimir Prus 
<ghost at cs.msu.su> wrote:

>
> I have difficulties accessing QMTest CVS. Here is the error message:
>
> cvs server: failed to create lock directory for
> `/home/qm/Repository/qm/qm/test/doc'
> (/home/qm/Repository/qm/qm/test/doc/#cvs.lock): Permission denied
> cvs server: failed to obtain dir lock in repository
> `/home/qm/Repository/qm/qm/test/doc'
> cvs [server aborted]: read lock failed - giving up
>
> Would be nice if this problem is resolved.

I believe that I have corrected this problem.  Would you mind trying
again?

Thank you,

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From mark at codesourcery.com  Fri Jan  4 17:24:05 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 04 Jan 2002 09:24:05 -0800
Subject: [qmtest] command.ExecTest & PATH
In-Reply-To: <E16MXOR-0008TG-00@zigzag.cs.msu.su>
Message-ID: <318890000.1010165045@gandalf.codesourcery.com>



--On Friday, January 04, 2002 07:40:30 PM +0300 Vladimir Prus 
<ghost at cs.msu.su> wrote:

> Mark Mitchell wrote:
>
>> > 1. Is there a way to reference context variables inside program name?
>> > Inside  parameter list? I'd say this approach to be the best, since I'd
>> > like the  ability to use working-copy relative names in parameters.
>
>> I think you could use command.ShellCommandTest, taking advantage of the
>> fact that all context variables are available in the environment for the
>> child process.
>
> Great! This works. However, there's a slight problem with the fact that
> gui  can't load/store context -- I'll have to set it every time I want to
> use gui.

That's one of the things that will be fixed in the next version of
QMTest, which should be ready very soon.

Thanks,

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From mark at codesourcery.com  Fri Jan  4 21:56:36 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 04 Jan 2002 13:56:36 -0800
Subject: [qmtest] Makefile problems
In-Reply-To: <Pine.BSF.4.30_heb2.09.0112250032510.52817-100000@cairo.zsat.net>
Message-ID: <625500000.1010181396@gandalf.codesourcery.com>



--On Tuesday, December 25, 2001 12:51:45 AM -0600 Scott Lamb 
<slamb at slamb.org> wrote:

> Merry Christmas. (Or happy holidays, if you prefer.)

Thank you.  And a Happy New Year to youl

> QMTest does not build on my FreeBSD system. The problem is that it does
> not like systems which have GNU make as "gmake" and a different make as
> "make". The AC_PROG_MAKE_SET is in configure.in but it isn't actually used
> when calling make recursively. The two-line diff below fixed that problem.

Thank you.  In the next version of QMTest, due out soon, we have
eliminated the use of recrusive make (which had been on the to do list
for some time).  We also adopted your GNUmakefile suggestion.

Yours,

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From stephen.huntley at stellent.com  Thu Jan 10 21:16:17 2002
From: stephen.huntley at stellent.com (Stephen Huntley)
Date: Thu, 10 Jan 2002 15:16:17 -0600
Subject: Bug report: exception removing then adding prerequisite
Message-ID: <40AD0DD8D0041349BAD9367EEB4847620FDAB0@badnews.stellent-ied.com>

It's always a bad sign when you encounter a bug when going through the
tutorial...

I created and ran a test called test1 to execute 'echo test' as
described in the tutorial.  Then I edited test1 to add exec0 as a
prerequisite and ran again.  Then I edited again, removing exec0 and
adding exec1 as a prerequisite.  Hit ok... crash.

I hope this isn't a harbinger of future experience with the product... I
look forward to using it heavily.

Steve Huntley
Senior QA Engineeer
Stellent


Exception type: exceptions.KeyError
Exception value: class
Stack trace:
  File "C:\progra~1\qm\lib\qm\qm\web.py", line 528, in
__HandleScriptRequest
    script_output = self.server.ProcessScript(request)

  File "C:\progra~1\qm\lib\qm\qm\web.py", line 961, in ProcessScript
    return self.__scripts[request.GetUrl()](request)

  File "C:\progra~1\qm\lib\qm\qm\test\web\web.py", line 1696, in
HandleSubmitItem
    item_class_name = request["class"]

  File "C:\progra~1\qm\lib\qm\qm\web.py", line 1253, in __getitem__
    return self.__fields[key]



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20020110/924784b5/attachment.html>

From stephen.huntley at stellent.com  Thu Jan 10 22:22:04 2002
From: stephen.huntley at stellent.com (Stephen Huntley)
Date: Thu, 10 Jan 2002 16:22:04 -0600
Subject: Bug report: exception creating new test suite
Message-ID: <40AD0DD8D0041349BAD9367EEB4847620F0456@badnews.stellent-ied.com>

Win2k with python 2.1.1 installed

Start qmtest gui

Choose 'New Suite' from file menu

type 'id1' as a test id

hit next

crash


Exception type: exceptions.AttributeError
Exception value: 'qm.test.base' module has no attribute 'Suite'
Stack trace:
  File "C:\progra~1\qm\lib\qm\qm\web.py", line 528, in
__HandleScriptRequest
    script_output = self.server.ProcessScript(request)

  File "C:\progra~1\qm\lib\qm\qm\web.py", line 961, in ProcessScript
    return self.__scripts[request.GetUrl()](request)

  File "C:\progra~1\qm\lib\qm\qm\test\web\web.py", line 1196, in
HandleCreateSuite
    suite = qm.test.base.Suite(self.__database, suite_id)



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20020110/8deaec91/attachment.html>

From mark at codesourcery.com  Fri Jan 11 23:19:25 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 11 Jan 2002 15:19:25 -0800
Subject: [qmtest] Bug report: exception removing then adding
 prerequisite
In-Reply-To: <40AD0DD8D0041349BAD9367EEB4847620FDAB0@badnews.stellent-ied.com>
Message-ID: <85300000.1010791165@gandalf.codesourcery.com>



--On Thursday, January 10, 2002 03:16:17 PM -0600 Stephen Huntley 
<stephen.huntley at stellent.com> wrote:

>
> It's always a bad sign when you encounter a bug when going through the
> tutorial...
>
> I created and ran a test called test1 to execute 'echo test' as described
> in the tutorial.  Then I edited test1 to add exec0 as a prerequisite and
> ran again.  Then I edited again, removing exec0 and adding exec1 as a
> prerequisite.  Hit ok... crash.

Thank you for the report.

This will be fixed in the next version of QMTest, due out soon (weeks,
not months).

Yours,

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From stephen.huntley at stellent.com  Mon Jan 14 20:55:47 2002
From: stephen.huntley at stellent.com (Stephen Huntley)
Date: Mon, 14 Jan 2002 14:55:47 -0600
Subject: bug report: crash on new suite creation
Message-ID: <40AD0DD8D0041349BAD9367EEB4847620FDAB2@badnews.stellent-ied.com>

Win2k using python 2.1.1, qmtest gui

start up qmtest gui with tutorial tdb

Choose File > New suite

for suite ID type suite1, click next - crash

Exception type: exceptions.AttributeError
Exception value: 'qm.test.base' module has no attribute 'Suite'
Stack trace:
  File "C:\progra~1\qm\lib\qm\qm\web.py", line 528, in
__HandleScriptRequest
    script_output = self.server.ProcessScript(request)

  File "C:\progra~1\qm\lib\qm\qm\web.py", line 961, in ProcessScript
    return self.__scripts[request.GetUrl()](request)

  File "C:\progra~1\qm\lib\qm\qm\test\web\web.py", line 1196, in
HandleCreateSuite
    suite = qm.test.base.Suite(self.__database, suite_id)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20020114/eee03f81/attachment.html>

From stephen.huntley at stellent.com  Mon Jan 14 22:16:36 2002
From: stephen.huntley at stellent.com (Stephen Huntley)
Date: Mon, 14 Jan 2002 16:16:36 -0600
Subject: bug report: command-line arguments not passed to executable file
Message-ID: <40AD0DD8D0041349BAD9367EEB4847620FDAB3@badnews.stellent-ied.com>

Win2k, python 2.1.1, qmtest gui

I created a test of class command.ExecTest, assigned a program name of
test.tcl, a single command line argument "a", and expected exit code of
0.

The body of the program test.tcl is:

	set f [open test.txt w]
	puts $f $argv0
	puts $f $argv
	close $f
	exit 1

This should simply write out the command line arguments to test.txt and
exit with exit status 1.  That is, the test should always fail as far as
qmtest is concerned.

When I run the test, qmtest reports that the test passes.  When I
examine test.txt I find only the path to the script (argv0) written out;
the command line argument "a" doesn't make it.

It appears that qmtest ignores the exit status output at program
termination, as well as not passing the command-line arguments
specified.

I believe this will conclude my evaluation of the current release of
qmtest.  It seems to be unusable in its present state.


Sincerely,
Steve Huntley

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20020114/d9f49739/attachment.html>

From mark at codesourcery.com  Wed Jan 16 03:29:01 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 15 Jan 2002 19:29:01 -0800
Subject: [qmtest] Bug report: exception creating new test suite
In-Reply-To: <40AD0DD8D0041349BAD9367EEB4847620F0456@badnews.stellent-ied.com>
Message-ID: <17320000.1011151741@warlock.codesourcery.com>



--On Thursday, January 10, 2002 04:22:04 PM -0600 Stephen Huntley 
<stephen.huntley at stellent.com> wrote:

>
> Win2k with python 2.1.1 installed
>
> Start qmtest gui
>
> Choose 'New Suite' from file menu
>
> type 'id1' as a test id
>
> hit next
>
> crash

This bug has been fixed.  The QMTest 1.1 release will not have this
problem.

Thank you,

-- 
Mark Mitchell                mark at codesourcery.com
CodeSourcery, LLC            http://www.codesourcery.com


From mark at codesourcery.com  Wed Jan 16 03:31:33 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 15 Jan 2002 19:31:33 -0800
Subject: [qmtest] bug report: command-line arguments not passed to
 executable file
In-Reply-To: <40AD0DD8D0041349BAD9367EEB4847620FDAB3@badnews.stellent-ied.com>
Message-ID: <23310000.1011151893@warlock.codesourcery.com>



--On Monday, January 14, 2002 04:16:36 PM -0600 Stephen Huntley 
<stephen.huntley at stellent.com> wrote:

>
> Win2k, python 2.1.1, qmtest gui
>
> I created a test of class command.ExecTest, assigned a program name of
> test.tcl, a single command line argument "a", and expected exit code of
> 0.
>
> The body of the program test.tcl is:
>
>         set f [open test.txt w]
>         puts $f $argv0
>         puts $f $argv
>         close $f
>         exit 1
>
> This should simply write out the command line arguments to test.txt and
> exit with exit status 1.  That is, the test should always fail as far as
> qmtest is concerned.

I have not been able to replicate this problem.  Would you mind sending
me the contents of your test database as a ZIP or tar file?

Thank you,

-- 
Mark Mitchell                mark at codesourcery.com
CodeSourcery, LLC            http://www.codesourcery.com


From isenmann at science-computing.de  Wed Jan 16 07:17:00 2002
From: isenmann at science-computing.de (Goetz Isenmann)
Date: Wed, 16 Jan 2002 08:17:00 +0100
Subject: problem with resources
Message-ID: <20020116071700.GA72511@science-computing.de>

Hi!

I have two separate test suites in separate directories. Every suite
contains one resource used by the tests of this suite. See attachment
for an example.

Both suites work as expected, if run separately:

$ qmtest run demo.suite1
--- TEST RESULTS -------------------------------------------------------------

  demo.suite1.resource                                           : PASS    
  demo.suite1.test                                               : PASS    
  demo.suite1.resource                                           : PASS    

--- STATISTICS ---------------------------------------------------------------

       1        tests total
       1 (100%) tests PASS

and

$ qmtest run demo.suite2
--- TEST RESULTS -------------------------------------------------------------

  demo.suite2.resource                                           : PASS    
  demo.suite2.test                                               : PASS    
  demo.suite2.resource                                           : PASS    

--- STATISTICS ---------------------------------------------------------------

       1        tests total
       1 (100%) tests PASS

But if I run both suites together, the qmtest run never finishes:

$ qmtest run demo
--- TEST RESULTS -------------------------------------------------------------

  demo.suite1.resource                                           : PASS    
  demo.suite1.test                                               : PASS    
  demo.suite2.resource                                           : PASS    
  demo.suite2.test                                               : PASS    

It seem to hang before or during the resource cleanup functions.

Regards,
-- 
Goetz Isenmann			Phone:  +49 7071 9457 290
science + computing ag		FAX:    +49 7071 9457 211
Hagellocher Weg 73		EMail:  G.Isenmann at science-computing.de
D-72070 Tuebingen		WWW:    http://www.science-computing.de/
-------------- next part --------------
A non-text attachment was scrubbed...
Name: demo.qms.tar.gz
Type: application/x-tar-gz
Size: 709 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20020116/04a46f20/attachment.bin>

From mark at codesourcery.com  Thu Jan 17 01:27:52 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 16 Jan 2002 17:27:52 -0800
Subject: [qmtest] problem with resources
In-Reply-To: <20020116071700.GA72511@science-computing.de>
Message-ID: <2150000.1011230872@localhost>



--On Wednesday, January 16, 2002 08:17:00 AM +0100 Goetz Isenmann 
<isenmann at science-computing.de> wrote:

> Hi!
>
> I have two separate test suites in separate directories. Every suite
> contains one resource used by the tests of this suite. See attachment
> for an example.

Would you mind sending me the entire test database directory as ZIP
or GZIP'd tar file?  That should enable to me to recreate the problem.

QMTest 1.1 (which is close to being ready) contains major changes to
the logic for scheduling tests and resources and may already contain
a fix for this problem.  I will look into that.

Thank you,

-- 
Mark Mitchell                mark at codesourcery.com
CodeSourcery, LLC            http://www.codesourcery.com


From mark at codesourcery.com  Thu Jan 17 22:09:34 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 17 Jan 2002 14:09:34 -0800
Subject: [qmtest] problem with resources
In-Reply-To: <20020116071700.GA72511@science-computing.de>
Message-ID: <57800000.1011305374@gandalf.codesourcery.com>



--On Wednesday, January 16, 2002 08:17:00 AM +0100 Goetz Isenmann 
<isenmann at science-computing.de> wrote:

> Hi!
>
> I have two separate test suites in separate directories. Every suite
> contains one resource used by the tests of this suite. See attachment
> for an example.

This test database works fine with the QMTest 1.1 development version.

QMTest 1.1 should be ready for release soon.

Thanks,

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From mark at codesourcery.com  Fri Jan 18 07:27:52 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 17 Jan 2002 23:27:52 -0800
Subject: QMTest 1.1 Released
Message-ID: <96530000.1011338872@gandalf.codesourcery.com>

QMTest 1.1 has been released.

This release contains no new features, but contains a number of fixes
and minor enhancements, including:

- Elimination of a number of crashes.

- Support for platforms that do not have thread support.

- Improved output display for built-in test classes.

- Minor improvements to the manual.

You can download QMTest 1.1 in a variety of formats from www.qmtest.com.

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



From ghost at cs.msu.su  Mon Jan 21 10:49:21 2002
From: ghost at cs.msu.su (Vladimir Prus)
Date: Mon, 21 Jan 2002 13:49:21 +0300
Subject: Problems with context, and with failed tests.
Message-ID: <E16Sc0v-0000rV-00@zigzag.lvk.cs.msu.su>


Hi,

1.  Suppose that I run somewhere the following commnad:

	qmtest -D tdb run -c root=/home/ghost/Work/nm_model asm.echo

"asm.echo" is test.ShellCommandTest with command set to

	echo "Foobar" ${QMV_root}

The test of course fails and result.qmr reads:

	<property name='ExecTest.stdout'>'''Foobar /home/ghost/Work/nm_model
	'''</property>

I then make a file QMcontext, containing the following:

	root=/home/ghost/Work/nm_model
	nm_dir=/home/ghost/Work/nmsdk_shadow

And then I run:

	qmtest -D tdb run -C QMcontext asm.echo

No errors about the context file are given, but results.qmr now reads:

	<property name='ExecTest.stdout'>'''Foobar
	'''</property>

What happened with the QMV_root variable?

2. I try to run a test suite called "asm". Only 2 tests of 7 are actually 
run, after which I get:

Traceback (most recent call last):
  File "/home/ghost/local/lib/qm/qm/test/qmtest.py", line 94, in ?
    command.Execute(sys.stdout)
  File "/lib/qm/qm/test/cmdline.py", line 410, in Execute
  File "/lib/qm/qm/test/cmdline.py", line 784, in __ExecuteRun
  File "/lib/qm/qm/test/execution_engine.py", line 126, in Run
  File "/lib/qm/qm/test/execution_engine.py", line 215, in _RunTests
  File "/lib/qm/qm/test/execution_engine.py", line 237, in _CheckForResponse
  File "/lib/qm/qm/test/execution_engine.py", line 317, in _AddResult
  File "/home/ghost/local/lib/qm/qm/test/xml_result_stream.py", line 68, in 
WriteResult
    element = result.MakeDomNode(self.__document)
  File "/lib/qm/qm/test/result.py", line 283, in MakeDomNode
TypeError: loop over non-sequence

This should not happen, I suppose?

Regards,
Vladimir




From mark at codesourcery.com  Thu Jan 24 03:01:17 2002
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 23 Jan 2002 19:01:17 -0800
Subject: [qmtest] Problems with context, and with failed tests.
In-Reply-To: <E16Sc0v-0000rV-00@zigzag.lvk.cs.msu.su>
References: <E16Sc0v-0000rV-00@zigzag.lvk.cs.msu.su>
Message-ID: <4940000.1011841277@gandalf.codesourcery.com>



--On Monday, January 21, 2002 01:49:21 PM +0300 Vladimir Prus 
<ghost at cs.msu.su> wrote:

>
> Hi,
>
> 1.  Suppose that I run somewhere the following commnad:
>
> 	qmtest -D tdb run -c root=/home/ghost/Work/nm_model asm.echo
>
> "asm.echo" is test.ShellCommandTest with command set to
>
> 	echo "Foobar" ${QMV_root}
>
> The test of course fails and result.qmr reads:
>
> 	<property name='ExecTest.stdout'>'''Foobar /home/ghost/Work/nm_model
> 	'''</property>
>
> I then make a file QMcontext, containing the following:
>
> 	root=/home/ghost/Work/nm_model
> 	nm_dir=/home/ghost/Work/nmsdk_shadow
>
> And then I run:
>
> 	qmtest -D tdb run -C QMcontext asm.echo
>
> No errors about the context file are given, but results.qmr now reads:
>
> 	<property name='ExecTest.stdout'>'''Foobar
> 	'''</property>

Thank you for this bug report.  We will fix this quickly.

> What happened with the QMV_root variable?
>
> 2. I try to run a test suite called "asm". Only 2 tests of 7 are actually
> run, after which I get:

Would you mind sending me a tar/ or zip file of your test database,
i.e., the QMTest directory?

Thank you,

--
Mark Mitchell                   mark at codesourcery.com
CodeSourcery, LLC               http://www.codesourcery.com



