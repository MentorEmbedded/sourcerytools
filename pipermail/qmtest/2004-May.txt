From njs at pobox.com  Sat May  1 08:49:03 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Sat, 1 May 2004 01:49:03 -0700
Subject: [qmtest] [PATCH] Use processes instead of threads
In-Reply-To: <87ad0v1eai.fsf@egil.codesourcery.com>
References: <20040429014726.GA11517@njs.ddts.net> <87isfj1ozh.fsf@egil.codesourcery.com> <40907EBA.8020406@codesourcery.com> <20040429062522.GA13064@njs.ddts.net> <87ad0v1eai.fsf@egil.codesourcery.com>
Message-ID: <20040501084903.GA4961@njs.ddts.net>

On Wed, Apr 28, 2004 at 11:36:21PM -0700, Zack Weinberg wrote:
> I am not particularly concerned about this either, but it does seem
> more abstractly correct to me to record the signal mask at startup
> (before creating any threads) and restore that after fork.
> 
> I might be inclined to patch the Python core to do this, using
> pthread_atfork, except that wouldn't help us.

Amusingly, the signal module defines a function called
"PyOS_AfterFork", which appears to be responsible for resetting
various thread stuffs after a fork.  It just doesn't touch signals at
all (which makes it location all the curiouser).  I don't really
understand the Python source; PyOS_AfterFork is also defined in
Parser/intrcheck.c, somehow, with a somewhat different API.

In any case, this function should probably be doing signal mask stuff.

This still wouldn't fix the problem entirely, because popen(),
system() etc. don't trigger a call to PyOS_AfterFork (quoth
Doc/api/utilities.tex, "If a new executable is loaded into the new
process, this function does not need to be called"), so pthread_atfork
would perhaps be a better course.

Except, as you say, none of this would help us, not being able to
require users to use a fixed version of Python :-).

-- Nathaniel

-- 
"But suppose I am not willing to claim that.  For in fact pianos
are heavy, and very few persons can carry a piano all by themselves."


From njs at pobox.com  Sat May  1 08:56:53 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Sat, 1 May 2004 01:56:53 -0700
Subject: Building platform-specific extension modules
Message-ID: <20040501085653.GA5252@njs.ddts.net>

Does anyone know the proper way to teach distutils/qmdist that a
particular extension module should only be built on certain (i.e.,
POSIX) platforms?

Is it as easy as modifying the ext_modules= argument to setup()
depending on the platform that setup.py is being run on?  I'm having
worries about things like building source distributions and such.

-- Nathaniel

-- 
So let us espouse a less contested notion of truth and falsehood, even
if it is philosophically debatable (if we listen to philosophers, we
must debate everything, and there would be no end to the discussion).
  -- Serendipities, Umberto Eco


From mark at codesourcery.com  Sun May  2 18:02:52 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Sun, 02 May 2004 11:02:52 -0700
Subject: [qmtest] Building platform-specific extension modules
In-Reply-To: <20040501085653.GA5252@njs.ddts.net>
References: <20040501085653.GA5252@njs.ddts.net>
Message-ID: <409537CC.5040901@codesourcery.com>

Nathaniel Smith wrote:

>Does anyone know the proper way to teach distutils/qmdist that a
>particular extension module should only be built on certain (i.e.,
>POSIX) platforms?
>
>Is it as easy as modifying the ext_modules= argument to setup()
>depending on the platform that setup.py is being run on?  I'm having
>worries about things like building source distributions and such.
>  
>
I don't know how to do this.

One ugly-hack approach would be to wrap the extension module in:

  #ifndef _WIN32
  ...
  #endif

and just let it be empty on Windows.

If you get something that you think will work, we can easily try it out 
on Windows.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From mark at codesourcery.com  Sun May  2 18:27:11 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Sun, 02 May 2004 11:27:11 -0700
Subject: [qmtest] List test ids at command line?
In-Reply-To: <4092D851.7020605@nextone.com>
References: <007601c3fa58$e28d1a30$7588229b@meriadoc> <403A8F57.1090307@codesourcery.com> <4092B522.10204@sympatico.ca> <4092D851.7020605@nextone.com>
Message-ID: <40953D7F.5090408@codesourcery.com>

Scott Lowrey wrote:

> Stefan Seefeld wrote:
>
>> For me, the former is a feature that I would expect as part of the 
>> functionality
>> offered by test databases. I.e. instead of 'qmtest run' iterating 
>> over all
>> tests and running them, 'qmtest list' would iterate over them displaying
>> tests with various attributes associated with them (id, test class, 
>> etc.).
>
> Exactly the thought I had the other day.  I would happily take a crack 
> at this if I could just find the time.  (Yeah, big talk. :)  
>
> Seems like this would be a straightforward task similar to 
> cmdline.__ExecuteRun() but without the run...

Yes, this would be a desirable feature, and yes, that would be roughly 
the way to implement it.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From mark at codesourcery.com  Tue May  4 14:49:02 2004
From: mark at codesourcery.com (mark at codesourcery.com)
Date: Tue, 04 May 2004 06:49:02 -0800
Subject: Thank you!
Message-ID: <vhttgylsmlchgtsitqg@codesourcery.com>

An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040504/530b4675/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: kpbtkbimjw.gif
Type: image/gif
Size: 1058 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040504/530b4675/attachment.gif>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: first_part.zip
Type: application/octet-stream
Size: 21901 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040504/530b4675/attachment.obj>

From njs at pobox.com  Wed May  5 04:40:00 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Tue, 4 May 2004 21:40:00 -0700
Subject: [PATCH] Save/restore signal masks.
Message-ID: <20040505044000.GA18833@njs.ddts.net>

Attached for review.

This patch also overhauls a bit of the build system, so that testing
and such run out of the build directory, not the source directory;
this is necessitated by the addition of an impure module, that will
_only_ work from the build directory...

The goals of this patch, then, are:
  -- Signals aren't screwed up by threads.
  -- QMTest still builds fine on all systems.
  -- 'make check' still works on all systems.
  -- running out of the build directory still works on all systems.
  -- Building packages still works on all systems, except
     -- Packages are now architecture specific, and can only be
        built on the relevant architecture.

-- Nathaniel

-- 
"But in Middle-earth, the distinct accusative case disappeared from
the speech of the Noldor (such things happen when you are busy
fighting Orcs, Balrogs, and Dragons)."
-------------- next part --------------
? results.qmr
? qm/sigmask.c
? qm/external/__init__.pyc
? qm/external/__init__.pyo
? qmdist/command/bdist_wininst.py
? tests/regress/QMTest/regression_database.pyc
? tests/regress/QMTest/selftest.pyc
? tests/regress/tuple1/QMTest/tuple_test.pyc
? tests/results_files/QMTest/results_file_database.pyc
? tests/results_files/QMTest/results_file_test.pyc
? tests/xmldb/signals_unblocked.qmt
? tests/xmldb/signals_unblocked_tmpdir.qma
Index: ChangeLog
===================================================================
RCS file: /home/qm/Repository/qm/ChangeLog,v
retrieving revision 1.616
diff -u -r1.616 ChangeLog
--- ChangeLog	31 Mar 2004 10:32:44 -0000	1.616
+++ ChangeLog	5 May 2004 04:33:08 -0000
@@ -1,3 +1,22 @@
+2004-05-04  Nathaniel Smith  <njs at codesourcery.com>
+
+	* setup.py: Import 'Extension'.
+	Use it to build qm.sigmask.
+	* qm/sigmask.c: New file.
+	* qm/test/qmtest (main): Import 'qm.sigmask'; call
+	'qm.sigmask.save_mask'.
+	* qm/executable.py: Import 'qm.sigmask'.
+	(Executable._InitializeChild): Call 'qm.sigmask.restore_mask'.
+	
+	* tests/xmldb/signals_unblocked.qmt: New test.
+	* tests/xmldb/signals_unblocked_tmpdir.qma: New resource.
+	
+	* qmdist/command/check.py (check): Overhaul to respect
+	QMTESTFLAGS and use the correct path to the QMTest executable.
+	* GNUmakefile.in: Use "setup.py check" to run tests.
+	* qm/test/qmtest (rel_libdir): When running out of source tree,
+	use built library.	
+	
 2004-03-30  Nathaniel Smith  <njs at codesourcery.com>
 
 	* qm/common.py (htmllib): Import it.
Index: GNUmakefile.in
===================================================================
RCS file: /home/qm/Repository/qm/GNUmakefile.in,v
retrieving revision 1.34
diff -u -r1.34 GNUmakefile.in
--- GNUmakefile.in	24 Nov 2003 21:09:48 -0000	1.34
+++ GNUmakefile.in	5 May 2004 04:33:08 -0000
@@ -109,38 +109,13 @@
 check: check-serial check-threads check-processes
 
 check-serial: build
-	qm/test/qmtest -D tests run $(QMTESTFLAGS) \
-		-c qmtest_path=qm/test/qmtest
+	$(PYTHON) setup.py check --serial
 
 check-threads: build
-	rm -f tests/QMTest/thread_target
-	qm/test/qmtest -D tests create-target -a threads=4 \
-		-T tests/QMTest/thread_target \
-		thread thread_target.ThreadTarget
-	qm/test/qmtest -D tests run -T tests/QMTest/thread_target \
-		$(QMTESTFLAGS) \
-		-c qmtest_path=qm/test/qmtest \
-		-c qmtest_target=tests/QMTest/thread_target
+	$(PYTHON) setup.py check --threads
 
 check-processes: build
-	rm -f tests/QMTest/process_target
-	qm/test/qmtest -D tests create-target -a processes=4 \
-		-T tests/QMTest/process_target \
-		process process_target.ProcessTarget
-	qm/test/qmtest -D tests run -T tests/QMTest/process_target \
-		$(QMTESTFLAGS) \
-		-c qmtest_path=qm/test/qmtest \
-		-c qmtest_target=tests/QMTest/process_target
+	$(PYTHON) setup.py check --processes
 
 check-rsh: build
-	rm -f tests/QMTest/rsh_target
-	qm/test/qmtest -D tests create-target \
-                -a host=localhost -a remote_shell=ssh \
-		-T tests/QMTest/rsh_target \
-		rsh rsh_target.RSHTarget
-	qm/test/qmtest -D tests run -T tests/QMTest/rsh_target \
-		$(QMTESTFLAGS) \
-		-c qmtest_path=`pwd`/qm/test/qmtest \
-		-c qmtest_target=`pwd`/tests/QMTest/rsh_target
-
-
+	$(PYTHON) setup.py check --rsh
Index: setup.py
===================================================================
RCS file: /home/qm/Repository/qm/setup.py,v
retrieving revision 1.10
diff -u -r1.10 setup.py
--- setup.py	27 Feb 2004 22:04:33 -0000	1.10
+++ setup.py	5 May 2004 04:33:08 -0000
@@ -17,7 +17,7 @@
 # Imports
 ########################################################################
 
-from   distutils.core import setup
+from   distutils.core import setup, Extension
 import sys
 import os
 import os.path
@@ -94,6 +94,13 @@
 qmtest_py_script = qmtest_script + ".py"
 shutil.copyfile(qmtest_script, qmtest_py_script)
      
+# We need the sigmask extension on POSIX systems, but don't want it on
+# Win32.
+if sys.platform != "win32":
+    ext_modules = [Extension("qm.sigmask", ["qm/sigmask.c"])]
+else:
+    ext_modules = []
+
 setup(name="qm", 
       version=version,
       author="CodeSourcery, LLC",
@@ -116,6 +123,7 @@
                 'qm/test',
                 'qm/test/classes',
                 'qm/test/web'),
+      ext_modules=ext_modules,
       scripts=[qmtest_script, qmtest_py_script],
       data_files=[('qm/messages/test',
                    prefix(messages, 'qm/test/share/messages')),
Index: qm/executable.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/executable.py,v
retrieving revision 1.24
diff -u -r1.24 executable.py
--- qm/executable.py	2 Mar 2004 03:24:41 -0000	1.24
+++ qm/executable.py	5 May 2004 04:33:08 -0000
@@ -38,6 +38,7 @@
     import cPickle
     import fcntl
     import select
+    import qm.sigmask
     
 ########################################################################
 # Classes
@@ -328,6 +329,8 @@
         This method is not used under Windows."""
 
         assert sys.platform != "win32"
+
+        qm.sigmask.restore_mask()
 
         if self.__dir:
             os.chdir(self.__dir)
Index: qm/test/qmtest
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/qmtest,v
retrieving revision 1.3
diff -u -r1.3 qmtest
--- qm/test/qmtest	24 Nov 2003 06:35:01 -0000	1.3
+++ qm/test/qmtest	5 May 2004 04:33:08 -0000
@@ -54,7 +54,11 @@
 
 # Update sys.path so that we can find the rest of QMTest.
 if sys.platform != "win32":
-    rel_libdir = ""
+    # Following logic stolen from distutils.command.build:
+    import distutils.util
+    plat_spec = "lib.%s-%s" % (distutils.util.get_platform(),
+                               sys.version[0:3])
+    rel_libdir = os.path.join("build", plat_spec)
     """The relative path from the prefix to the library directory.
 
     This path gives the relative path from the prefix to the library
@@ -124,6 +128,11 @@
     
     # Make sure our Python is recent enough.
     check_python_version()
+
+    # Save the initial signal mask, as early as possible.
+    if sys.platform != "win32":
+        import qm.sigmask
+        qm.sigmask.save_mask()
 
     # Parse the command line.
     command = qm.test.cmdline.QMTest(sys.argv[1:], qm_path)
Index: qmdist/command/check.py
===================================================================
RCS file: /home/qm/Repository/qm/qmdist/command/check.py,v
retrieving revision 1.2
diff -u -r1.2 check.py
--- qmdist/command/check.py	14 Oct 2003 21:56:07 -0000	1.2
+++ qmdist/command/check.py	5 May 2004 04:33:08 -0000
@@ -52,6 +52,8 @@
         self.rsh = 0
         self.all = None
 
+        self.build_scripts = None
+
 
     def finalize_options (self):
         """Compute what tests to execute.
@@ -64,76 +66,88 @@
             self.threads = 1
             self.processes = 1
             self.rsh = 1
+        # Pick up the build scripts directory from the 'build' command.
+        self.set_undefined_options("build",
+                                   ("build_scripts", "build_scripts"))
 
 
-    qmtest = 'qm/test/qmtest'
-
-    def check_serial(self):
+    def check_serial(self, qmtest, options):
         """Perform serial tests."""
 
-        cmd = [check.qmtest,
-               '-D', 'tests', 'run', '-c',
-               norm('qmtest_path=qm/test/qmtest')]
+        cmd = [qmtest] + options + \
+              ['-D', 'tests', 'run', '-c',
+               norm('qmtest_path=' + qmtest)]
         spawn(cmd)
 
-    def check_threads(self):
+    def check_threads(self, qmtest, options):
         """Perform threaded tests."""
 
         remove_if_exists(norm('tests/QMTest/thread_target'))
-        cmd = [check.qmtest,
+        cmd = [qmtest,
                '-D', 'tests', 'create-target', '-a', 'threads=4',
                '-T', norm('tests/QMTest/thread_target'),
                'thread', 'thread_target.ThreadTarget']
         spawn(cmd)
-        cmd = [check.qmtest,
-               '-D', 'tests', 'run',
+        cmd = [qmtest] + options + \
+              ['-D', 'tests', 'run',
                '-T', norm('tests/QMTest/thread_target'),
-               '-c', 'qmtest_path=%s'%norm('qm/test/qmtest'),
+               '-c', 'qmtest_path=%s' % norm(qmtest),
                '-c', 'qmtest_target=%s'%norm('tests/QMTest/thread_target')]
         spawn(cmd)
 
-    def check_processes(self):
+    def check_processes(self, qmtest, options):
         """Perform sub-processed tests."""
 
         remove_if_exists(norm('tests/QMTest/process_target'))
-        cmd = [check.qmtest,
+        cmd = [qmtest,
                '-D', 'tests', 'create-target', '-a', 'processes=4',
                '-T', norm('tests/QMTest/process_target'),
                'process', 'process_target.ProcessTarget']
         spawn(cmd)
-        cmd = [check.qmtest,
-               '-D', 'tests', 'run',
+        cmd = [qmtest] + options + \
+              ['-D', 'tests', 'run',
                '-T', norm('tests/QMTest/process_target'),
-               '-c', 'qmtest_path=%s'%norm('qm/test/qmtest'),
+               '-c', 'qmtest_path=%s' % norm(qmtest),
                '-c', 'qmtest_target=%s'%norm('tests/QMTest/process_target')]
         spawn(cmd)
 
-    def check_rsh(self):
+    def check_rsh(self, qmtest, options):
         """Perform tests over a remote shell."""
 
         remove_if_exists(norm('tests/QMTest/rsh_target'))
-        cmd = [check.qmtest,
-               '-D', 'tests', 'create-target',
+        cmd = [qmtest,
+              '-D', 'tests', 'create-target',
                '-a', 'host=localhost', '-a', 'remote_shell=ssh',
                '-T', norm('tests/QMTest/rsh_target'),
                'rsh', 'rsh_target.RSHTarget']
         spawn(cmd)
-        cmd = [check.qmtest,
-               '-D', 'tests', 'run',
+        abs_target = os.path.abspath("tests/QMTest/rsh_target")
+        cmd = [qmtest] + options + \
+              ['-D', 'tests', 'run',
                '-T', norm('tests/QMTest/rsh_target'),
-               '-c', 'qmtest_path=%s'%norm('%s/qm/test/qmtest'%os.getcwd()),
-               '-c', 'qmtest_target=%s'%norm('%s/tests/QMTest/rsh_target'%os.getcwd())]
+               '-c', 'qmtest_path=%s' % norm(qmtest),
+               '-c', 'qmtest_target=%s' % norm(abs_target)]
         spawn(cmd)
 
 
     def run(self):
         """Execute the various tests."""
 
+        # Ensure that QMTest is already built.
+        self.run_command("build")
+
+        qmtest = os.path.abspath(os.path.join(self.build_scripts,
+                                              "qmtest"))
+        if os.environ.has_key("QMTESTFLAGS"):
+            options = os.environ["QMTESTFLAGS"].split()
+        else:
+            options = []
+
         if self.serial:
-            self.check_serial()
+            self.check_serial(qmtest, options)
         if self.threads:
-            self.check_threads()
+            self.check_threads(qmtest, options)
         if self.processes:
-            self.check_processes()
+            self.check_processes(qmtest, options)
         if self.rsh:
-            self.check_rsh()
+            self.check_rsh(qmtest, options)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: sigmask.c
Type: text/x-csrc
Size: 2176 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040504/0739d10f/attachment.c>
-------------- next part --------------
<?xml version="1.0" ?>
<!DOCTYPE extension
  PUBLIC '-//QM/2.2/Extension//EN'
  'http://www.codesourcery.com/qm/dtds/2.2/-//qm/2.2/extension//en.dtd'>
<extension class="command.ShellScriptTest" kind="test"><argument name="stdin"><text/></argument><argument name="stderr"><text/></argument><argument name="stdout"><text/></argument><argument name="prerequisites"><set/></argument><argument name="target_group"><text>.*</text></argument><argument name="exit_code"><integer>0</integer></argument><argument name="environment"><set/></argument><argument name="script"><text>if ! which cc &gt;/dev/null; then
    echo &quot;No cc, skipping test&quot;
    exit 1
fi

cd $QMV_temp_dir_path

cat &gt;check_sigmask.c &lt;&lt;EOF
#include &lt;signal.h&gt;

int main(int argc, char** argv)
{
    sigset_t s;
    sigprocmask(SIG_BLOCK, 0, &amp;s);
    return (sigismember(&amp;s, SIGTERM) || sigismember(&amp;s, SIGXCPU));
}
EOF

cc check_sigmask.c -o check_sigmask

if ! ./check_sigmask; then
    echo &quot;Test failed; some signals are blocked that shouldn't be.&quot;
    OUTCOME=1
else
    OUTCOME=0
fi

rm -f ./check_sigmask check_sigmask.c
exit $OUTCOME</text></argument><argument name="arguments"><set/></argument><argument name="timeout"><integer>-1</integer></argument><argument name="resources"><set><text>signals_unblocked_tmpdir</text></set></argument></extension>
-------------- next part --------------
<?xml version="1.0" ?>
<!DOCTYPE extension
  PUBLIC '-//QM/2.2/Extension//EN'
  'http://www.codesourcery.com/qm/dtds/2.2/-//qm/2.2/extension//en.dtd'>
<extension class="temporary.TempDirectoryResource" kind="resource"><argument name="dir_path_property"><text>temp_dir_path</text></argument><argument name="resources"><set/></argument><argument name="delete_recursively"><integer>1</integer></argument></extension>

From mark at codesourcery.com  Wed May  5 15:12:43 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 05 May 2004 08:12:43 -0700
Subject: [qmtest] [PATCH] Save/restore signal masks.
In-Reply-To: <20040505044000.GA18833@njs.ddts.net>
References: <20040505044000.GA18833@njs.ddts.net>
Message-ID: <4099046B.7030300@codesourcery.com>

Nathaniel Smith wrote:

>Attached for review.
>
>This patch also overhauls a bit of the build system, so that testing
>and such run out of the build directory, not the source directory;
>this is necessitated by the addition of an impure module, that will
>_only_ work from the build directory...
>
>The goals of this patch, then, are:
>  -- Signals aren't screwed up by threads.
>  -- QMTest still builds fine on all systems.
>  -- 'make check' still works on all systems.
>  -- running out of the build directory still works on all systems.
>  -- Building packages still works on all systems, except
>     -- Packages are now architecture specific, and can only be
>        built on the relevant architecture.
>
>-- Nathaniel
>  
>
It ain't beautiful, but it will do the job nicely.  Pl.ease add a 
comment where you call qm.sigmask.restore_mask to explain what's going 
on and why it's necessary.  And then check it in!

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From njs at pobox.com  Thu May  6 06:17:17 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Wed, 5 May 2004 23:17:17 -0700
Subject: [PATCH] Work around bug in Python 2.2 distutils
Message-ID: <20040506061717.GA11962@njs.ddts.net>

Prior to version 2.3, the distutils shipped with python does not set
the executable bit on build scripts.  This causes problems with the
previous patch; "make check" no longer works under Python 2.2.

Here we add a klugy little workaround that should hold until we
eventually drop 2.2 support...

-- Nathaniel

-- 
Details are all that matters; God dwells there, and you never get to
see Him if you don't struggle to get them right. -- Stephen Jay Gould
-------------- next part --------------
? results.qmr
? qm/external/__init__.pyc
? qm/external/__init__.pyo
? qmdist/command/bdist_wininst.py
? tests/regress/QMTest/regression_database.pyc
? tests/regress/QMTest/selftest.pyc
? tests/regress/tuple1/QMTest/tuple_test.pyc
? tests/results_files/QMTest/results_file_database.pyc
? tests/results_files/QMTest/results_file_test.pyc
Index: ChangeLog
===================================================================
RCS file: /home/qm/Repository/qm/ChangeLog,v
retrieving revision 1.617
diff -u -r1.617 ChangeLog
--- ChangeLog	6 May 2004 00:35:34 -0000	1.617
+++ ChangeLog	6 May 2004 06:12:51 -0000
@@ -1,3 +1,8 @@
+2004-05-05  Nathaniel Smith  <njs at codesourcery.com>
+
+	* GNUmakefile.in (build): Force executable bit on scripts in
+	build directory.
+
 2004-05-04  Nathaniel Smith  <njs at codesourcery.com>
 
 	* setup.py: Import 'Extension'.
Index: GNUmakefile.in
===================================================================
RCS file: /home/qm/Repository/qm/GNUmakefile.in,v
retrieving revision 1.35
diff -u -r1.35 GNUmakefile.in
--- GNUmakefile.in	6 May 2004 00:35:35 -0000	1.35
+++ GNUmakefile.in	6 May 2004 06:12:51 -0000
@@ -59,6 +59,9 @@
 
 build:
 	$(PYTHON) ./setup.py build
+# The distutils shipped with Python versions prior to 2.3
+# buggily does not make these executable.
+	chmod 755 build/scripts-*/*
 
 doc:
 	$(PYTHON) ./setup.py build_doc

From mark at codesourcery.com  Thu May  6 06:45:22 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 05 May 2004 23:45:22 -0700
Subject: [qmtest] [PATCH] Work around bug in Python 2.2 distutils
In-Reply-To: <20040506061717.GA11962@njs.ddts.net>
References: <20040506061717.GA11962@njs.ddts.net>
Message-ID: <4099DF02.8070107@codesourcery.com>

Nathaniel Smith wrote:

> Prior to version 2.3, the distutils shipped with python does not set
> the executable bit on build scripts.  This causes problems with the
> previous patch; "make check" no longer works under Python 2.2.
> 
> Here we add a klugy little workaround that should hold until we
> eventually drop 2.2 support...

Yup, looks good.

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com


From slowrey at nextone.com  Mon May 10 21:09:10 2004
From: slowrey at nextone.com (Scott Lowrey)
Date: Mon, 10 May 2004 17:09:10 -0400
Subject: Web Site Bugs
Message-ID: <409FEF76.1090301@nextone.com>

An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040510/76700f46/attachment.html>

From slowrey at nextone.com  Mon May 10 23:33:50 2004
From: slowrey at nextone.com (Scott Lowrey)
Date: Mon, 10 May 2004 19:33:50 -0400
Subject: [qmtest] Web Site Bugs
In-Reply-To: <40A00CAC.5090404@tejasconsulting.com>
References: <409FEF76.1090301@nextone.com> <40A00CAC.5090404@tejasconsulting.com>
Message-ID: <40A0115E.5080903@nextone.com>

An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040510/7a4d4a81/attachment.html>

From mark at codesourcery.com  Tue May 11 01:46:10 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 10 May 2004 18:46:10 -0700
Subject: [qmtest] Web Site Bugs
In-Reply-To: <409FEF76.1090301@nextone.com>
References: <409FEF76.1090301@nextone.com>
Message-ID: <40A03062.8030105@codesourcery.com>

Scott Lowrey wrote:

> Just a minor note: clicking any of the links in the QMTest User Guide 
> that lead to internals (i.e., HappyDoc-generated) stuff at 
> codesourcery.com are broken.

This problem has been fixed.  A better fix will be forthcoming 
(involving embedding version numbers in the generated documentation).  
The temporary fix points at the internals documentation for 2.1.2.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From mark at codesourcery.com  Tue May 11 18:31:32 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 11 May 2004 11:31:32 -0700
Subject: [qmtest] Web Site Bugs
In-Reply-To: <409FEF76.1090301@nextone.com>
References: <409FEF76.1090301@nextone.com>
Message-ID: <40A11C04.3090707@codesourcery.com>

Scott Lowrey wrote:

> Also, if you click Help -> Manual within QMTest, a small explosion occurs.

Does this happen when you use our RPMs, or only when you build QMTest 
yourself?

In the latter case, that's a known issue if you did not actually build 
the documentation when you build QMTest.  We should handle the situation 
more gracefully, of course.  Please let me know which situation you are in.

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From njs at pobox.com  Fri May 21 07:32:01 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Fri, 21 May 2004 00:32:01 -0700
Subject: [PATCH] Fix resource cleanup ordering
Message-ID: <20040521073201.GA29876@njs.ddts.net>

Currently resources are set up in an order that respects their
dependencies, but torn down in an effectively random order.  This
patch fixes this, and adds a test to make sure that we don't
reintroduce the bug in the future (especially useful if we try to do
something cleverer with resources; the current algorithm is pretty
stupid).

For review.

-- Nathaniel

-- 
Damn the Solar System.  Bad light; planets too distant; pestered with
comets; feeble contrivance; could make a better one myself.
  -- Lord Jeffrey
-------------- next part --------------
? results.qmr
? qm/external/__init__.pyc
? qm/external/__init__.pyo
? qmdist/command/bdist_wininst.py
? tests/regress/resource_ordering
? tests/regress/QMTest/regression_database.pyc
? tests/regress/QMTest/selftest.pyc
? tests/regress/tuple1/QMTest/tuple_test.pyc
? tests/results_files/QMTest/results_file_database.pyc
? tests/results_files/QMTest/results_file_test.pyc
Index: ChangeLog
===================================================================
RCS file: /home/qm/Repository/qm/ChangeLog,v
retrieving revision 1.619
diff -u -r1.619 ChangeLog
--- ChangeLog	21 May 2004 07:22:22 -0000	1.619
+++ ChangeLog	21 May 2004 07:28:04 -0000
@@ -1,5 +1,14 @@
 2004-05-21  Nathaniel Smith  <njs at codesourcery.com>
 
+	* qm/test/target.py (Target.Start): Add instance variable
+	'__order_of_resources'.
+	(Target._FinishResourceSetUp): Record resource setup order in
+	it.
+	(Target.Stop): Use it to determine resource cleanup order.
+	* tests/regress/resource_ordering: New test.
+	
+2004-05-21  Nathaniel Smith  <njs at codesourcery.com>
+
 	* Makefile: Switch default copyright date to 2004.
 	* docbook: Likewise.
 	* docbook-chapter: Likewise.
Index: qm/test/target.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/target.py,v
retrieving revision 1.26
diff -u -r1.26 target.py
--- qm/test/target.py	16 Mar 2004 05:10:56 -0000	1.26
+++ qm/test/target.py	21 May 2004 07:28:04 -0000
@@ -171,6 +171,7 @@
         self.__engine = engine
         # There are no resources available on this target yet.
         self.__resources = {}
+        self.__order_of_resources = []
 
         
     def Stop(self):
@@ -183,12 +184,15 @@
         Derived classes may override this method."""
         
         # Clean up any available resources.
-        for (name, rop) in self.__resources.items():
+        self.__order_of_resources.reverse()
+        for name in self.__order_of_resources:
+            rop = self.__resources[name]
             if rop and rop[1] == Result.PASS:
                 self._CleanUpResource(name, rop[0])
         del self.__response_queue
         del self.__engine
         del self.__resources
+        del self.__order_of_resources
 
 
     def RunTest(self, descriptor, context):
@@ -321,6 +325,7 @@
         del properties[Context.ID_CONTEXT_PROPERTY]
         rop = (resource, result.GetOutcome(), properties)
         self.__resources[result.GetId()] = rop
+        self.__order_of_resources.append(result.GetId())
         return rop
 
 

From mark at codesourcery.com  Fri May 21 16:01:26 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 21 May 2004 09:01:26 -0700
Subject: [qmtest] [PATCH] Fix resource cleanup ordering
In-Reply-To: <20040521073201.GA29876@njs.ddts.net>
References: <20040521073201.GA29876@njs.ddts.net>
Message-ID: <40AE27D6.8040003@codesourcery.com>

Nathaniel Smith wrote:

> Currently resources are set up in an order that respects their
> dependencies, but torn down in an effectively random order.  This
> patch fixes this, and adds a test to make sure that we don't
> reintroduce the bug in the future (especially useful if we try to do
> something cleverer with resources; the current algorithm is pretty
> stupid).

Yay.

I was kinda hoping we'd revive the idea of a data structure that was 
*both* a list and a dictionary, but your way Just Works. :-)

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com


From njs at pobox.com  Sat May 22 01:48:08 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Fri, 21 May 2004 18:48:08 -0700
Subject: [qmtest] [PATCH] Fix resource cleanup ordering
In-Reply-To: <40AE27D6.8040003@codesourcery.com>
References: <20040521073201.GA29876@njs.ddts.net> <40AE27D6.8040003@codesourcery.com>
Message-ID: <20040522014808.GB3693@njs.ddts.net>

On Fri, May 21, 2004 at 09:01:26AM -0700, Mark Mitchell wrote:
> I was kinda hoping we'd revive the idea of a data structure that was 
> *both* a list and a dictionary, but your way Just Works. :-)

It occurred to me.  But it's hard to argue with a 3 line patch :-).

-- Nathaniel

-- 
Eternity is very long, especially towards the end.
  -- Woody Allen


From njs at pobox.com  Mon May 24 15:30:06 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Mon, 24 May 2004 08:30:06 -0700
Subject: [PATCH] Embed qmtest version in urls to internals manual
Message-ID: <20040524153006.GA28143@njs.ddts.net>

Currently, the manual distributed with QMTest contains URL references
to the internals manual at codesourcery.com.  These links don't
contain any version information, which means that there's no way to
update the web site without changing the content referred to by old
manuals.

Ideally, we would ship the internals manual with QMTest, but this 1)
adds a build dependency on happydoc, and 2) is a somewhat complicated
change.  In the mean time, the attached patch causes these links in
the manual to go to the internals manual for the proper version.

Attached for review.

-- Nathaniel

-- 
So let us espouse a less contested notion of truth and falsehood, even
if it is philosophically debatable (if we listen to philosophers, we
must debate everything, and there would be no end to the discussion).
  -- Serendipities, Umberto Eco
-------------- next part --------------
? results.qmr
? doc/qm-version
? tests/regress/QMTest/regression_database.pyc
? tests/regress/QMTest/selftest.pyc
? tests/regress/tuple1/QMTest/tuple_test.pyc
? tests/results_files/QMTest/results_file_database.pyc
? tests/results_files/QMTest/results_file_test.pyc
Index: ChangeLog
===================================================================
RCS file: /home/qm/Repository/qm/ChangeLog,v
retrieving revision 1.620
diff -u -r1.620 ChangeLog
--- ChangeLog	22 May 2004 01:53:20 -0000	1.620
+++ ChangeLog	24 May 2004 15:24:59 -0000
@@ -1,3 +1,11 @@
+2004-05-24  Nathaniel Smith  <njs at codesourcery.com>
+
+	* qmdist/command/build_doc.py (build_doc.run): Create
+	'doc/qm-version' file.
+	* doc/qm.mod: Define entity 'qm_version' to its contents.
+	* qm/test/doc/manual.xml (internal_doc_url): Use
+	'qm_version_entity' in definition.
+
 2004-05-21  Nathaniel Smith  <njs at codesourcery.com>
 
 	* qm/test/target.py (Target.Start): Add instance variable
Index: doc/qm.mod
===================================================================
RCS file: /home/qm/Repository/qm/doc/qm.mod,v
retrieving revision 1.13
diff -u -r1.13 qm.mod
--- doc/qm.mod	5 Dec 2001 20:01:47 -0000	1.13
+++ doc/qm.mod	24 May 2004 15:24:59 -0000
@@ -16,6 +16,10 @@
 
 -->
 
+<!-- Version number. -->
+
+<!ENTITY qm_version SYSTEM "qm-version">
+
 <!-- Names of the project components.  -->
 
 <!ENTITY sc "&#60;ulink url=&#34;http://www.software-carpentry.com&#34;&#62;Software Carpentry&#60;/ulink&#62;">
Index: qm/test/doc/manual.xml
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/doc/manual.xml,v
retrieving revision 1.5
diff -u -r1.5 manual.xml
--- qm/test/doc/manual.xml	29 Sep 2003 00:49:30 -0000	1.5
+++ qm/test/doc/manual.xml	24 May 2004 15:24:59 -0000
@@ -32,7 +32,7 @@
   <!ENTITY tour.xml SYSTEM "tour.xml">
   <!ENTITY reference.xml SYSTEM "reference.xml">
 
-  <!ENTITY internal_doc_url "http://www.codesourcery.com/qm/qmtest_internals_docs/qm">
+  <!ENTITY internal_doc_url "http://www.codesourcery.com/public/qmtest/qm-&qm_version;/internals/qm">
 
   <!ENTITY context_class "<ulink url=&#34;&internal_doc_url;/test/context/Context.html&#34;><classname>Context</classname></ulink>">
   <!ENTITY result_class "<ulink url=&#34;&internal_doc_url;/test/result/Result.html&#34;><classname>Result</classname></ulink>">
Index: qmdist/command/build_doc.py
===================================================================
RCS file: /home/qm/Repository/qm/qmdist/command/build_doc.py,v
retrieving revision 1.3
diff -u -r1.3 build_doc.py
--- qmdist/command/build_doc.py	4 Dec 2003 02:38:09 -0000	1.3
+++ qmdist/command/build_doc.py	24 May 2004 15:24:59 -0000
@@ -127,6 +127,16 @@
         # install the documentation as data files (in "share") rather
         # than as program files (in "lib").
         
+        # 
+        # Write the version to a file so the manual can refer to it.  This
+        # file contains exactly the version number -- there must be no
+        # trailing newline, for example.
+        #
+        self.announce("writing version file")
+        f = open(os.path.join("doc", "qm-version"), "w")
+        f.write(self.distribution.get_version())
+        f.close()
+
         #
         # Build html output.
         #

From mark at codesourcery.com  Mon May 24 15:49:41 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 24 May 2004 08:49:41 -0700
Subject: [qmtest] [PATCH] Embed qmtest version in urls to internals manual
In-Reply-To: <20040524153006.GA28143@njs.ddts.net>
References: <20040524153006.GA28143@njs.ddts.net>
Message-ID: <40B21995.5030800@codesourcery.com>

Nathaniel Smith wrote:

>Currently, the manual distributed with QMTest contains URL references
>to the internals manual at codesourcery.com.  These links don't
>contain any version information, which means that there's no way to
>update the web site without changing the content referred to by old
>manuals.
>
>Ideally, we would ship the internals manual with QMTest, but this 1)
>adds a build dependency on happydoc, and 2) is a somewhat complicated
>change.  In the mean time, the attached patch causes these links in
>the manual to go to the internals manual for the proper version.
>
>Attached for review.
>  
>
Looks good.  (So *that's* how you get content from a file into a DocBook 
macro...)

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From njs at pobox.com  Mon May 24 15:53:12 2004
From: njs at pobox.com (Nathaniel Smith)
Date: Mon, 24 May 2004 08:53:12 -0700
Subject: [qmtest] [PATCH] Embed qmtest version in urls to internals manual
In-Reply-To: <40B21995.5030800@codesourcery.com>
References: <20040524153006.GA28143@njs.ddts.net> <40B21995.5030800@codesourcery.com>
Message-ID: <20040524155312.GA28491@njs.ddts.net>

On Mon, May 24, 2004 at 08:49:41AM -0700, Mark Mitchell wrote:
> Looks good.  (So *that's* how you get content from a file into a DocBook 
> macro...)

Heh.  I don't know a thing about DocBook, I just cut-and-pasted from
manual.xml :-).

-- Nathaniel

-- 
So let us espouse a less contested notion of truth and falsehood, even
if it is philosophically debatable (if we listen to philosophers, we
must debate everything, and there would be no end to the discussion).
  -- Serendipities, Umberto Eco


From mark at codesourcery.com  Mon May 24 19:19:07 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 24 May 2004 12:19:07 -0700
Subject: PATCH: Update version number in manual
Message-ID: <40B24AAB.3090406@codesourcery.com>

This patch, following up on Nathaniel's recent change, automatically 
gets the version number set correctly in the <releaseinfo> tag in the 
manual.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diffs
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040524/883cf984/attachment.ksh>

From mark at codesourcery.com  Mon May 24 20:38:42 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 24 May 2004 13:38:42 -0700
Subject: PATCH: Update manual look-and-feel
Message-ID: <40B25D52.80408@codesourcery.com>

This patch incorporates a few bits of CodeSourcery's new web-site 
look-and-feel into the QMTest manual.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diffs
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040524/deeffb64/attachment.ksh>

From mark at codesourcery.com  Wed May 26 01:27:30 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 25 May 2004 18:27:30 -0700
Subject: PATCH: Repair Windows builds
Message-ID: <200405260127.i4Q1RUCW001182@sirius.codesourcery.com>


This patch fixes two problems on Windows.  The first was that we were
trying to write out the "uname" annotation on Windows, but it's None,
which causes a crash.  The second was that "import qm.sigmask" in a
local -- unexecuted -- scope causes Python 2.2.3 to complain about
uninitialized local variables.  The fix is to move the "import" to the
global scope, which IIRC, is the only place it is guaranteed to work
according to the Python spec.

--
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com

2004-05-25  Mark Mitchell  <mark at codesourcery.com>

	* qm/test/execution_engine.py
	(ExecutionEngine._WriteInitialAnnotations): Check that uname is
	not None before trying to write it out.
	* qm/test/qmtest (qm.sigmask): Import it in the global scope, not
	...
	(main): ... here.

Index: qm/test/execution_engine.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/execution_engine.py,v
retrieving revision 1.28
diff -c -5 -p -r1.28 execution_engine.py
*** qm/test/execution_engine.py	31 Mar 2004 10:32:44 -0000	1.28
--- qm/test/execution_engine.py	26 May 2004 01:20:43 -0000
*************** class ExecutionEngine:
*** 839,849 ****
              if username is not None:
                  rs.WriteAnnotation("qmtest.run.username", username)
              if userid is not None:
                  rs.WriteAnnotation("qmtest.run.userid", userid)
              rs.WriteAnnotation("qmtest.run.version", qm.version)
!             rs.WriteAnnotation("qmtest.run.uname", uname)
              rs.WriteAnnotation("qmtest.run.command_line", args_str)
  
  
  ########################################################################
  # Local Variables:
--- 839,850 ----
              if username is not None:
                  rs.WriteAnnotation("qmtest.run.username", username)
              if userid is not None:
                  rs.WriteAnnotation("qmtest.run.userid", userid)
              rs.WriteAnnotation("qmtest.run.version", qm.version)
!             if uname is not None:
!                 rs.WriteAnnotation("qmtest.run.uname", uname)
              rs.WriteAnnotation("qmtest.run.command_line", args_str)
  
  
  ########################################################################
  # Local Variables:
Index: qm/test/qmtest
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/qmtest,v
retrieving revision 1.4
diff -c -5 -p -r1.4 qmtest
*** qm/test/qmtest	6 May 2004 00:35:35 -0000	1.4
--- qm/test/qmtest	26 May 2004 01:20:43 -0000
*************** qm.prefix = qm_home
*** 86,95 ****
--- 86,97 ----
  import qm.cmdline
  import qm.diagnostic
  import qm.platform
  import qm.structured_text
  import qm.test.cmdline
+ if sys.platform != "win32":
+     import qm.sigmask
  
  ########################################################################
  # Functions
  ########################################################################
  
*************** def main():
*** 129,139 ****
      # Make sure our Python is recent enough.
      check_python_version()
  
      # Save the initial signal mask, as early as possible.
      if sys.platform != "win32":
-         import qm.sigmask
          qm.sigmask.save_mask()
  
      # Parse the command line.
      command = qm.test.cmdline.QMTest(sys.argv[1:], qm_path)
  
--- 131,140 ----


From Diana.Bosio at cern.ch  Thu May 27 12:48:09 2004
From: Diana.Bosio at cern.ch (Diana Bosio)
Date: Thu, 27 May 2004 14:48:09 +0200
Subject: qmtest for linux
Message-ID: <40B5E389.7070309@cern.ch>

Hi,

I am writing to the qmtest mailing list as I could not find an answer to 
my problem on your website.

I've tried to install qmtest version 2.1.2 on a linux pc to no avail. 
With the rpm the installation goes fine, but when I try to run qmtest I get
File "./qmtest", line 108
     version_str = ".".join([str(num) for num in _required_python_version])
                                        ^
SyntaxError: invalid syntax

with the tar.gz when I untar it and read the README file in the doc 
directory it specifies do execute ./configure from the top of the tree, 
but I could not find this executable anywhere in the tree. If I try to 
execute qmtest from this local tree I get the same error that I have 
with the rpm.

Is there a working version of qmtest under linux somewhere?

Best regards,

Diana Bosio
-- 
CERN, European Organization for Nuclear Research
IT Department, Grid Middleware
Geneva 23, CH-1211, Switzerland
Tel: ++ 41 22 767 1466	Fax: ++ 41 22 767 7155




From seefeld at sympatico.ca  Thu May 27 16:21:56 2004
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 27 May 2004 12:21:56 -0400
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B5E389.7070309@cern.ch>
References: <40B5E389.7070309@cern.ch>
Message-ID: <40B615A4.8000108@sympatico.ca>

Diana Bosio wrote:
> Hi,
> 
> I am writing to the qmtest mailing list as I could not find an answer to 
> my problem on your website.
> 
> I've tried to install qmtest version 2.1.2 on a linux pc to no avail. 
> With the rpm the installation goes fine, but when I try to run qmtest I get
> File "./qmtest", line 108
>     version_str = ".".join([str(num) for num in _required_python_version])

ouch ! That's list comprehension syntax which only recent python
versions support. Even though it *means* that you must upgrade your python
version if you want to run qmtest, the very code that tries to diagnose
invalid python versions shouldn't bail out because of it. Catch 22.

Regards,
		Stefan



From mark at codesourcery.com  Thu May 27 17:47:03 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 27 May 2004 10:47:03 -0700
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B615A4.8000108@sympatico.ca>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca>
Message-ID: <40B62997.6000207@codesourcery.com>

Stefan Seefeld wrote:

> Diana Bosio wrote:
>
>> Hi,
>>
>> I am writing to the qmtest mailing list as I could not find an answer 
>> to my problem on your website.
>>
>> I've tried to install qmtest version 2.1.2 on a linux pc to no avail. 
>> With the rpm the installation goes fine, but when I try to run qmtest 
>> I get
>> File "./qmtest", line 108
>>     version_str = ".".join([str(num) for num in 
>> _required_python_version])
>
>
> ouch ! That's list comprehension syntax which only recent python
> versions support. Even though it *means* that you must upgrade your 
> python
> version if you want to run qmtest, the very code that tries to diagnose
> invalid python versions shouldn't bail out because of it. Catch 22.

Stefan is correct; the root cause here is that you do not have a 
sufficiently recent version of Python installed.

However, this is definitely a bug.  It looks like Nathaniel introduced 
this change a while back; we'll get it fixed before QMTest 2.2.2 -- 
which will be released very shortly.

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com



From mark at codesourcery.com  Thu May 27 19:03:16 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 27 May 2004 12:03:16 -0700
Subject: PATCH: Fix version check
Message-ID: <200405271903.i4RJ3GdZ028588@sirius.codesourcery.com>


This patch fixes the Python version-checking code in QMTest, which
itself had features requiring a new version of Python. (!)

--
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com

2004-05-27  Mark Mitchell  <mark at codesourcery.com>

	* qm/test/qmtest (check_python_version): Rework to avoid using
	newer Python features.

Index: qm/test/qmtest
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/qmtest,v
retrieving revision 1.4.2.1
diff -c -5 -p -r1.4.2.1 qmtest
*** qm/test/qmtest	26 May 2004 01:21:23 -0000	1.4.2.1
--- qm/test/qmtest	27 May 2004 19:00:55 -0000
***************
*** 14,31 ****
  # For license terms see the file COPYING.
  #
  ########################################################################
  
  ########################################################################
  # Imports
  ########################################################################
  
  import errno
  import gc
  import os
  import os.path
- import sys
  import string
  import traceback
  
  # The Python interpreter will place the directory containing this
  # script in the default path to search for modules.  That is
--- 14,73 ----
  # For license terms see the file COPYING.
  #
  ########################################################################
  
  ########################################################################
+ # Check Python Version
+ ########################################################################
+ 
+ # Before doing anything else, check that the version of Python in use
+ # is sufficiently recent.  All code in this section should be portable
+ # even to old versions of Python.
+ 
+ import sys
+ 
+ def check_python_version():
+     """Check to see if the Python interpreter in use is acceptable.
+ 
+     If the Python interpreter is not sufficiently recent, issue an
+     error message and exit."""
+ 
+     required_python_version = (2, 2)
+ 
+     # Get the version of Python in use.
+     try:
+         actual_version = sys.version_info
+     except:
+         # Older versions of Python do not have "sys.version_info".
+         actual_version = (0, 0, 0, 0)
+ 
+     old = 0
+     for i in range(len(required_python_version)):
+         if required_python_version[i] > actual_version[i]:
+             old = 1
+ 
+     if old:
+         if len(required_python_version) == 2:
+             version = "%d.%d" % required_python_version
+         else:
+             version = "%d.%d.%d" % required_python_version
+         sys.stderr.write(
+             ("QMTest requires Python %s or later.\n"
+              "Set the QM_PYTHON environment variable to an appropriate "
+              "Python interpreter.\n") % version)
+         sys.exit(1)
+ 
+ check_python_version()
+ 
+ ########################################################################
  # Imports
  ########################################################################
  
  import errno
  import gc
  import os
  import os.path
  import string
  import traceback
  
  # The Python interpreter will place the directory containing this
  # script in the default path to search for modules.  That is
*************** if sys.platform != "win32":
*** 94,138 ****
  ########################################################################
  # Functions
  ########################################################################
  
  def print_error_message(message):
      prefix = "qmtest: error: "
      message = qm.structured_text.to_text(str(message),
                                           indent=len(prefix))
      message = prefix + message[len(prefix):]
      sys.stderr.write(message)
  
  
- _required_python_version = (2, 2)
- def check_python_version():
-     """Check to see if the Python interpreter in use is acceptable.
- 
-     If the Python interpreter is not sufficiently recent, issue an
-     error message and exit."""
- 
-     version_str = ".".join([str(num) for num in _required_python_version])
-     message = "Python " + version_str + " or higher is required.\n"
-     message += "Set QM_PYTHON to an appropriate Python interpreter.\n"
-     try:
-         if sys.version_info < _required_python_version:
-             print_error_message(message)
-             sys.exit(1)
-     except AttributeError:
-         print_error_message(message)
-         sys.exit(1)
- 
- 
  def main():
      """Run QMTest.
  
      returns -- The exit code that should be provided to the operating
      system."""
      
-     # Make sure our Python is recent enough.
-     check_python_version()
- 
      # Save the initial signal mask, as early as possible.
      if sys.platform != "win32":
          qm.sigmask.save_mask()
  
      # Parse the command line.
--- 136,164 ----
  ########################################################################
  # Functions
  ########################################################################
  
  def print_error_message(message):
+     """Output an error message.
+ 
+     'message' -- Structured text for the error message to emit.  The
+     messing is emitted to the standard error stream with an
+     identifying prefix."""
+     
      prefix = "qmtest: error: "
      message = qm.structured_text.to_text(str(message),
                                           indent=len(prefix))
      message = prefix + message[len(prefix):]
      sys.stderr.write(message)
  
  
  def main():
      """Run QMTest.
  
      returns -- The exit code that should be provided to the operating
      system."""
      
      # Save the initial signal mask, as early as possible.
      if sys.platform != "win32":
          qm.sigmask.save_mask()
  
      # Parse the command line.


From seefeld at sympatico.ca  Fri May 28 12:47:57 2004
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Fri, 28 May 2004 08:47:57 -0400
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B6EC3B.9050701@cern.ch>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch>
Message-ID: <40B734FD.1050005@sympatico.ca>

Diana Bosio wrote:
> Hi,
> 
> my computer comes also with python 2.2, the only thing is that python 
> 2.2 is not in /usr/bin/python (where the old version is) but instead I 
> have:
> 
>  >ls  /usr/bin/python*
> /usr/bin/python  /usr/bin/python1.5  /usr/bin/python2  /usr/bin/python2.2
> 
> and I have no means of changing that (well, I have the means but I am 
> not supposed to do it)... With qmtest 2.0.3 I could run configure and 
> specify which python to use (i.e. ./configure 
> --with-python=/usr/bin/python2.2), how can I do it with the new version 
> of qmtest?

as of release 2.1 qmtest has a new build system which allows you to
run 'python setup.py install' (and so the python tool you run during the
build/install will be the python tool that is used by the installed tool,
whether it's called 'python' or 'python2').

However, the toplevel 'README' file still suggests to use 'configure; make install;'.
That appears to be a slim wrapper around the former, so I'm not sure why
this is still suggested, or even necessary. Mark ?

Regards,
		Stefan



From seefeld at sympatico.ca  Fri May 28 13:35:50 2004
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Fri, 28 May 2004 09:35:50 -0400
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B739E5.3020909@cern.ch>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch> <40B734FD.1050005@sympatico.ca> <40B739E5.3020909@cern.ch>
Message-ID: <40B74036.1070109@sympatico.ca>

Diana Bosio wrote:

>> as of release 2.1 qmtest has a new build system which allows you to
>> run 'python setup.py install' (and so the python tool you run during the
>> build/install will be the python tool that is used by the installed tool,
>> whether it's called 'python' or 'python2').
>>
> Thanks! From which directory shall I try to run it? From 
> /usr/lib/python2.2/site-packages/qm ? Does it go automatically to 
> /usr/local? And in any case, do I have a way to configure the target 
> directory?

The installation procedure we are talking about applies to a source distribution,
and so you run it from the toplevel (source) directory, i.e. 'qm'.
If you already have files in /usr/lib/python2.2/site-packages/qm it's
because you either installed a binary distribution or you have a previous
release there.

As to the installation location, that is usually determined by the python
interpreter (a python 2.3 installation in /usr/local would typically install
new packages into /usr/local/lib/python2.3/site-packages...).
You can override these defaults using the '--prefix' option. See
'python setup.py --help' for everything you can choose at build/installation
time (again, this has to be run in the toplevel source directory, where you
should find a 'setup.py' file).

>> However, the toplevel 'README' file still suggests to use 'configure; 
>> make install;'.
>> That appears to be a slim wrapper around the former, so I'm not sure why
>> this is still suggested, or even necessary. Mark ?
>>
> This would imply that you have a file called "configure" and another one 
> called "Makefile" at the top of the tree, but I have no such files in 
> the new version, I've tried to look in different directories, but had no 
> luck. Where did you find it?

A source distribution should contain everything you need, i.e. 'configure',
'GNUMakefile.in', 'setup.py', etc.
I suspect you are not looking at the right place.

If we are talking about a binary distribution, all files are already
in their destination directory, and thus there isn't any choice any more
as to how to call the python interpreter. Generally binary distributions
are specific to the python versions they had been compiled for.

Regards,
		Stefan





From Diana.Bosio at cern.ch  Fri May 28 07:37:31 2004
From: Diana.Bosio at cern.ch (Diana Bosio)
Date: Fri, 28 May 2004 09:37:31 +0200
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B62997.6000207@codesourcery.com>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com>
Message-ID: <40B6EC3B.9050701@cern.ch>

Hi,

my computer comes also with python 2.2, the only thing is that python 
2.2 is not in /usr/bin/python (where the old version is) but instead I have:

 >ls  /usr/bin/python*
/usr/bin/python  /usr/bin/python1.5  /usr/bin/python2  /usr/bin/python2.2

and I have no means of changing that (well, I have the means but I am 
not supposed to do it)... With qmtest 2.0.3 I could run configure and 
specify which python to use (i.e. ./configure 
--with-python=/usr/bin/python2.2), how can I do it with the new version 
of qmtest?

The Makefile is also missing, to do make and make install, where can i 
find it? Or did you change the installation steps and forgot to update 
the README ;-)?

Cheers,
Diana

Mark Mitchell wrote:
> Stefan Seefeld wrote:
> 
>> Diana Bosio wrote:
>>
>>> Hi,
>>>
>>> I am writing to the qmtest mailing list as I could not find an answer 
>>> to my problem on your website.
>>>
>>> I've tried to install qmtest version 2.1.2 on a linux pc to no avail. 
>>> With the rpm the installation goes fine, but when I try to run qmtest 
>>> I get
>>> File "./qmtest", line 108
>>>     version_str = ".".join([str(num) for num in 
>>> _required_python_version])
>>
>>
>>
>> ouch ! That's list comprehension syntax which only recent python
>> versions support. Even though it *means* that you must upgrade your 
>> python
>> version if you want to run qmtest, the very code that tries to diagnose
>> invalid python versions shouldn't bail out because of it. Catch 22.
> 
> 
> Stefan is correct; the root cause here is that you do not have a 
> sufficiently recent version of Python installed.
> 
> However, this is definitely a bug.  It looks like Nathaniel introduced 
> this change a while back; we'll get it fixed before QMTest 2.2.2 -- 
> which will be released very shortly.
> 


-- 
CERN, European Organization for Nuclear Research
IT Department, Grid Middleware
Geneva 23, CH-1211, Switzerland
Tel: ++ 41 22 767 1466	Fax: ++ 41 22 767 7155




From Diana.Bosio at cern.ch  Fri May 28 13:08:53 2004
From: Diana.Bosio at cern.ch (Diana Bosio)
Date: Fri, 28 May 2004 15:08:53 +0200
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B734FD.1050005@sympatico.ca>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch> <40B734FD.1050005@sympatico.ca>
Message-ID: <40B739E5.3020909@cern.ch>

Stefan Seefeld wrote:
> Diana Bosio wrote:
> 
>> Hi,
>>
>> my computer comes also with python 2.2, the only thing is that python 
>> 2.2 is not in /usr/bin/python (where the old version is) but instead I 
>> have:
>>
>>  >ls  /usr/bin/python*
>> /usr/bin/python  /usr/bin/python1.5  /usr/bin/python2  /usr/bin/python2.2
>>
>> and I have no means of changing that (well, I have the means but I am 
>> not supposed to do it)... With qmtest 2.0.3 I could run configure and 
>> specify which python to use (i.e. ./configure 
>> --with-python=/usr/bin/python2.2), how can I do it with the new 
>> version of qmtest?
> 
> 
> as of release 2.1 qmtest has a new build system which allows you to
> run 'python setup.py install' (and so the python tool you run during the
> build/install will be the python tool that is used by the installed tool,
> whether it's called 'python' or 'python2').
> 
Thanks! From which directory shall I try to run it? From 
/usr/lib/python2.2/site-packages/qm ? Does it go automatically to 
/usr/local? And in any case, do I have a way to configure the target 
directory?

> However, the toplevel 'README' file still suggests to use 'configure; 
> make install;'.
> That appears to be a slim wrapper around the former, so I'm not sure why
> this is still suggested, or even necessary. Mark ?
> 
This would imply that you have a file called "configure" and another one 
called "Makefile" at the top of the tree, but I have no such files in 
the new version, I've tried to look in different directories, but had no 
luck. Where did you find it?

Regards,
Diana
-- 
CERN, European Organization for Nuclear Research
IT Department, Grid Middleware
Geneva 23, CH-1211, Switzerland
Tel: ++ 41 22 767 1466	Fax: ++ 41 22 767 7155




From Diana.Bosio at cern.ch  Fri May 28 14:27:54 2004
From: Diana.Bosio at cern.ch (Diana Bosio)
Date: Fri, 28 May 2004 16:27:54 +0200
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B74036.1070109@sympatico.ca>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch> <40B734FD.1050005@sympatico.ca> <40B739E5.3020909@cern.ch> <40B74036.1070109@sympatico.ca>
Message-ID: <40B74C6A.10903@cern.ch>

Stefan Seefeld wrote:
> Diana Bosio wrote:
> 
>>> as of release 2.1 qmtest has a new build system which allows you to
>>> run 'python setup.py install' (and so the python tool you run during the
>>> build/install will be the python tool that is used by the installed 
>>> tool,
>>> whether it's called 'python' or 'python2').
>>>
>> Thanks! From which directory shall I try to run it? From 
>> /usr/lib/python2.2/site-packages/qm ? Does it go automatically to 
>> /usr/local? And in any case, do I have a way to configure the target 
>> directory?
> 
> 
> The installation procedure we are talking about applies to a source 
> distribution,
> and so you run it from the toplevel (source) directory, i.e. 'qm'.
> If you already have files in /usr/lib/python2.2/site-packages/qm it's
> because you either installed a binary distribution or you have a previous
> release there.
> 
Sorry, my mistake here, I am getting confused as I did various 
installations, starting with the rpm, then the binary tarball, then the 
source tarball, but of old (2.0.3 and 2.1.2) versions...

> As to the installation location, that is usually determined by the python
> interpreter (a python 2.3 installation in /usr/local would typically 
> install
> new packages into /usr/local/lib/python2.3/site-packages...).
> You can override these defaults using the '--prefix' option. See
> 'python setup.py --help' for everything you can choose at 
> build/installation
> time (again, this has to be run in the toplevel source directory, where you
> should find a 'setup.py' file).
> 
>>> However, the toplevel 'README' file still suggests to use 'configure; 
>>> make install;'.
>>> That appears to be a slim wrapper around the former, so I'm not sure why
>>> this is still suggested, or even necessary. Mark ?
>>>
>> This would imply that you have a file called "configure" and another 
>> one called "Makefile" at the top of the tree, but I have no such files 
>> in the new version, I've tried to look in different directories, but 
>> had no luck. Where did you find it?
> 
> 
> A source distribution should contain everything you need, i.e. 'configure',
> 'GNUMakefile.in', 'setup.py', etc.
> I suspect you are not looking at the right place.
> 

> If we are talking about a binary distribution, all files are already
> in their destination directory, and thus there isn't any choice any more
> as to how to call the python interpreter. Generally binary distributions
> are specific to the python versions they had been compiled for.
> 

Ok, let me do some spring cleaning...
[...]

Ok. I've redownloaded everything just now...

1. rpm installation tells me that I have the wrong version of python and 
tells me to set the QM_PYTHON variable. I set it and it still tells me 
to set that variable. I use tcsh, maybe it is this that causes it?

=====> I am erasing it.

2. binary tarball installation: it installs everything under the user 
515 group 515 (???), but at least it runs...

3. Source installation I haven't tried yet, and I am not going to try it 
if number 2 works...

Maybe few words more on the website on the different types of 
installations wouldn't hurt :-)

Regards,
Diana

-- 
CERN, European Organization for Nuclear Research
IT Department, Grid Middleware
Geneva 23, CH-1211, Switzerland
Tel: ++ 41 22 767 1466	Fax: ++ 41 22 767 7155




From mark at codesourcery.com  Fri May 28 19:30:16 2004
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 28 May 2004 12:30:16 -0700
Subject: [qmtest] qmtest for linux
In-Reply-To: <40B74C6A.10903@cern.ch>
References: <40B5E389.7070309@cern.ch> <40B615A4.8000108@sympatico.ca> <40B62997.6000207@codesourcery.com> <40B6EC3B.9050701@cern.ch> <40B734FD.1050005@sympatico.ca> <40B739E5.3020909@cern.ch> <40B74036.1070109@sympatico.ca> <40B74C6A.10903@cern.ch>
Message-ID: <40B79348.2050803@codesourcery.com>


> 1. rpm installation tells me that I have the wrong version of python 
> and tells me to set the QM_PYTHON variable. I set it and it still 
> tells me to set that variable. I use tcsh, maybe it is this that 
> causes it?

That's a misleading message; QMTest no longer uses that environment 
variable.  Thanks for pointing out this issue; this patch removes the 
message.

Thanks for the feedback!

-- 
Mark Mitchell
CodeSourcery, LLC
(916) 791-8304
mark at codesourcery.com

-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diffs
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20040528/15801f23/attachment.ksh>

