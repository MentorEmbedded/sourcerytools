From mohamedb at sgi.com  Tue Jul 22 08:09:29 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Tue, 22 Jul 2008 18:09:29 +1000
Subject: Only run tests with attribute=X
Message-ID: <200807221809.29803.mohamedb@sgi.com>

Hello there,

Here is one of the problems that am facing with qmtest and puzzled on how to 
solve it..

Suppose I have 100s of tests, based on a class of test y that has an attribute 
metadata..
i.e.:
class y(Test): # Extends/Inherits from qm.test.test.Test
    metadata=TextField()
    def Run(self, context, result):
         # do some thing


Is there a mechanism for me to ask qmtest to run any of class y tests that 
have metadata="something"

Would I be able to extend any of the database class method to do so?

Is there anything else that am missing from the qmtest philosophy ?!

-- 
Mohamed Barwani
ASGQA
"The good life is one inspired by love and guided by knowledge."
--Bertrand Russell


From mark at codesourcery.com  Tue Jul 22 22:41:36 2008
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 22 Jul 2008 15:41:36 -0700
Subject: [qmtest] Only run tests with attribute=X
In-Reply-To: <200807221809.29803.mohamedb@sgi.com>
References: <200807221809.29803.mohamedb@sgi.com>
Message-ID: <48866220.1020906@codesourcery.com>

Mohamed Barwani wrote:

> Is there a mechanism for me to ask qmtest to run any of class y tests that 
> have metadata="something"

Not out of the box, but you could provide an implementation of the test 
suite abstraction that did that.  Then, you'd be able to run just the 
tests in that test suite.

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From mohamedb at sgi.com  Wed Jul 23 05:43:16 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Wed, 23 Jul 2008 15:43:16 +1000
Subject: [qmtest] Only run tests with attribute=X
In-Reply-To: <48866220.1020906@codesourcery.com>
References: <200807221809.29803.mohamedb@sgi.com> <48866220.1020906@codesourcery.com>
Message-ID: <200807231543.16213.mohamedb@sgi.com>

On Wed, 23 Jul 2008 08:41:36 am Mark Mitchell wrote:
> Mohamed Barwani wrote:
> > Is there a mechanism for me to ask qmtest to run any of class y tests
> > that have metadata="something"
>
> Not out of the box, but you could provide an implementation of the test
> suite abstraction that did that.  Then, you'd be able to run just the
> tests in that test suite.

Yep I'll see what I can do .. thanks

Another one for you, am just tyring to read some of the Target class code.. In 
order to find out if there is a way where a test can depend on a resource 
with some options.. Otherwise you will have to create a lot of instances of 
the same class for the test to choose from..

cheers
-- 
Mohamed Barwani
ASGQA
"Everything is vague to a degree you do not realize till you have tried to 
make it precise." --Bertrand Russell


From pankajj at qualcomm.com  Thu Jul 24 19:29:26 2008
From: pankajj at qualcomm.com (Jain, Pankaj)
Date: Thu, 24 Jul 2008 12:29:26 -0700
Subject: How to Display stdout while test is running
In-Reply-To: <48866220.1020906@codesourcery.com>
References: <200807221809.29803.mohamedb@sgi.com> <48866220.1020906@codesourcery.com>
Message-ID: <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C85@NAEX11.na.qualcomm.com>

Right now QMTest Display the stdout after completion of tests. I would
like to display it ( may be on separate command prompt) while test is
running. I use GUI to run the tests. 

Any pointers? 

Pankaj 

-----Original Message-----
From: Mark Mitchell [mailto:mark at codesourcery.com] 
Sent: Tuesday, July 22, 2008 3:42 PM
To: Mohamed Barwani
Cc: qmtest at codesourcery.com
Subject: Re: [qmtest] Only run tests with attribute=X

Mohamed Barwani wrote:

> Is there a mechanism for me to ask qmtest to run any of class y tests
that 
> have metadata="something"

Not out of the box, but you could provide an implementation of the test 
suite abstraction that did that.  Then, you'd be able to run just the 
tests in that test suite.

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From mohamedb at sgi.com  Fri Jul 25 00:47:46 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Fri, 25 Jul 2008 10:47:46 +1000
Subject: How to Display stdout while test is running
In-Reply-To: <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C85@NAEX11.na.qualcomm.com>
References: <200807221809.29803.mohamedb@sgi.com> <48866220.1020906@codesourcery.com> <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C85@NAEX11.na.qualcomm.com>
Message-ID: <200807251047.46666.mohamedb@sgi.com>

On Fri, 25 Jul 2008 05:29:26 am Jain, Pankaj wrote:
> Right now QMTest Display the stdout after completion of tests. I would
> like to display it ( may be on separate command prompt) while test is
> running. I use GUI to run the tests.
>

Can you clarify?

I never really used the gui, but if I understand correctly, displaying the 
stdout of the test execution depends on the test class extension you are 
using. 

cheers
-- 
Mohamed Barwani
ASGQA
"It is bad luck to be superstitious." -- Andrew W. Mathis


From mohamedb at sgi.com  Fri Jul 25 01:04:09 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Fri, 25 Jul 2008 11:04:09 +1000
Subject: Passing context variables through command line...
Message-ID: <200807251104.09234.mohamedb@sgi.com>

What am I doing wrong? The test can't seem to find the context variables

[]# qmtest create-tdb
QMTest has created a new test database at '/root/mohamedb/.'.
[]# qmtest create --id=print_context -a source="print context" test 
python.ExecTest
[]# qmtest run -c foo=bar
{'qmtest.tmpdir': '/tmp/tmpXS9UdD', 'qmtest.target': 'local', 'qmtest.dbpath': '/root/mohamedb', 'qmtest.id': 'print_context'}
--- TEST RESULTS -------------------------------------------------------------

  print_context                                 : PASS

--- TESTS THAT DID NOT PASS --------------------------------------------------

  None.


--- STATISTICS ---------------------------------------------------------------

       1        tests total
       1 (100%) tests PASS

Note: {'foo':'bar'} is not in the dictionary
-- 
Mohamed Barwani
ASGQA
"Programming today is a race between software engineers striving to build 
bigger and better idiot-proof programs, and the Universe trying to produce 
bigger and better idiots. So far, the Universe is winning." -- Rick Cook


From pankajj at qualcomm.com  Fri Jul 25 18:27:49 2008
From: pankajj at qualcomm.com (Jain, Pankaj)
Date: Fri, 25 Jul 2008 11:27:49 -0700
Subject: How to Display stdout while test is running
In-Reply-To: <200807251047.46666.mohamedb@sgi.com>
References: <200807221809.29803.mohamedb@sgi.com> <48866220.1020906@codesourcery.com> <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C85@NAEX11.na.qualcomm.com> <200807251047.46666.mohamedb@sgi.com>
Message-ID: <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C90@NAEX11.na.qualcomm.com>

Thanks for the response. 
I am using command.ExecTest class extension. Please let me know how to
display stdout while test is in progress. 
Pankaj 


-----Original Message-----
From: Mohamed Barwani [mailto:mohamedb at sgi.com] 
Sent: Thursday, July 24, 2008 5:48 PM
To: Jain, Pankaj
Cc: Mark Mitchell; qmtest at codesourcery.com
Subject: Re: How to Display stdout while test is running

On Fri, 25 Jul 2008 05:29:26 am Jain, Pankaj wrote:
> Right now QMTest Display the stdout after completion of tests. I would
> like to display it ( may be on separate command prompt) while test is
> running. I use GUI to run the tests.
>

Can you clarify?

I never really used the gui, but if I understand correctly, displaying
the 
stdout of the test execution depends on the test class extension you are

using. 

cheers
-- 
Mohamed Barwani
ASGQA
"It is bad luck to be superstitious." -- Andrew W. Mathis


From mohamedb at sgi.com  Sun Jul 27 23:45:19 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Mon, 28 Jul 2008 09:45:19 +1000
Subject: How to Display stdout while test is running
In-Reply-To: <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C90@NAEX11.na.qualcomm.com>
References: <200807221809.29803.mohamedb@sgi.com> <200807251047.46666.mohamedb@sgi.com> <9A06FCF253BE2C448F54EC04DC4C9BCC01F80C90@NAEX11.na.qualcomm.com>
Message-ID: <200807280945.19352.mohamedb@sgi.com>

On Sat, 26 Jul 2008 04:27:49 am Jain, Pankaj wrote:
> Thanks for the response.
> I am using command.ExecTest class extension. Please let me know how to
> display stdout while test is in progress.
> Pankaj
>

command.ExecTest is one of those test that compares the stdout with what you 
specify in Expected Output field, if they don't match the test fails.

If you like, you could write your own test class that logs the stdout while 
the child process is being executed. Otherwise if you run qmtest run --format 
full that should show you the stdout of the test. Am not quite sure how the 
gui works, but I hope that helps.

cheers
-- 
Mohamed Barwani
ASGQA
"Non-determinism... hard to debug... These kinds of bugs are almost impossible 
to find by testing; they can only
be avoided by careful programming."
--Allen B. Downey



From mohamedb at sgi.com  Sun Jul 27 23:46:31 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Mon, 28 Jul 2008 09:46:31 +1000
Subject: [qmtest] Passing context variables through command line...
In-Reply-To: <200807251104.09234.mohamedb@sgi.com>
References: <200807251104.09234.mohamedb@sgi.com>
Message-ID: <200807280946.32059.mohamedb@sgi.com>

On Fri, 25 Jul 2008 11:04:09 am Mohamed Barwani wrote:
> What am I doing wrong? The test can't seem to find the context variables
>
> []# qmtest create-tdb
> QMTest has created a new test database at '/root/mohamedb/.'.
> []# qmtest create --id=print_context -a source="print context" test
> python.ExecTest
> []# qmtest run -c foo=bar
> {'qmtest.tmpdir': '/tmp/tmpXS9UdD', 'qmtest.target': 'local',
> 'qmtest.dbpath': '/root/mohamedb', 'qmtest.id': 'print_context'} --- TEST
> RESULTS -------------------------------------------------------------
>
>   print_context                                 : PASS
>
> --- TESTS THAT DID NOT PASS
> --------------------------------------------------
>
>   None.
>
>
> --- STATISTICS
> ---------------------------------------------------------------
>
>        1        tests total
>        1 (100%) tests PASS
>
> Note: {'foo':'bar'} is not in the dictionary

Using context.get() method retrieves the variable anyway.. ignore this!


-- 
Mohamed Barwani
ASGQA
"Science may set limits to knowledge, but should not set limits to 
imagination."
-- Bertrand Russell


From mohamedb at sgi.com  Thu Jul 31 23:56:40 2008
From: mohamedb at sgi.com (Mohamed Barwani)
Date: Fri, 1 Aug 2008 09:56:40 +1000
Subject: W.R.T result_streams
Message-ID: <200808010956.40311.mohamedb@sgi.com>

I wanted to play around with different result streams.. and see what would fit 
best, or perhaps write a new one.

However, regardless of what you pass into the command line you get multiple 
streams printed out.. Specifying xml_result_stream fro example will produce 
an output as below. A combination of TextResultStream & XMLResultStream. 
Further I expected the output file to be an xml but I got a pickled python 
object. Which is fine, I think, so long as I could get a proper xml output.

My question is, What is the significance of having multiple streams output, if 
the output file is still going to be a cPickled object? 

Thanks,
Mohamed

-------------------------------- Output -------------------------------------
$ qmtest run --result-stream=xml_result_stream.XMLResultStream -o s.xml ls
<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE results 
PUBLIC "-//QM/2.4/QMTest/Result//EN" "http://www.codesourcery.com/qm/dtds/2.4/qmtest/result.dtd">
<results>
<annotation key="foo">
 bar
</annotation>
<annotation key="bla">
 ble
</annotation>
<annotation key="qmtest.run.start_time">
 2008-07-31T23:44:30Z
</annotation>
<annotation key="qmtest.run.username">
 mohamedb
</annotation>
<annotation key="qmtest.run.userid">
 16393
</annotation>
<annotation key="qmtest.run.version">
 2.4
</annotation>
<annotation key="qmtest.run.uname">
 Linux shark 2.6.25-2-amd64 #1 SMP Mon Jul 14 11:05:23 UTC 2008 x86_64
</annotation>
<annotation key="qmtest.run.command_line">
 /usr/bin/qmtest run --result-stream=xml_result_stream.XMLResultStream -o 
s.xml ls
</annotation>
--- TEST RESULTS -------------------------------------------------------------

  ls                                            : PASS

 <result id="ls" kind="test" outcome="PASS">
  <annotation name="ExecTest.stderr">
   &quot;&lt;pre&gt;&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="ExecTest.stdout">
   &quot;&lt;pre&gt;Linux shark 2.6.25-2-amd64 #1 SMP Mon Jul 14 11:05:23 UTC 
2008 x86_64 GNU/Linux
&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2008-07-31T23:44:30Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2008-07-31T23:44:30Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
--- TESTS THAT DID NOT PASS --------------------------------------------------

  None.


--- STATISTICS ---------------------------------------------------------------

       1        tests total
       1 (100%) tests PASS

<annotation key="qmtest.run.end_time">
 2008-07-31T23:44:30Z
</annotation>

</results>


