From mark at codesourcery.com  Wed Oct  1 07:30:51 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 01 Oct 2003 00:30:51 -0700
Subject: [qmtest] working with the xml result stream
In-Reply-To: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca>
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca>
Message-ID: <1064993452.7789.174.camel@doubledemon.codesourcery.com>

On Tue, 2003-09-30 at 09:18, Stefan Seefeld wrote:
> I'v run into a little issue with the generated xml output using
> xml-result-stream.
> 
> I run qmtest on a variety of platforms, and I generate one xml
> result file for each. Then I process these files with xslt to
> generate a 'result matrix'. At some point I'm determining the
> number of failures/passes/etc., and the xslt way to do this is
> with an xpath expression such as
> 
> "count($target/results/result[outcome='FAIL'])"
> 
> The problem is that the content of 'outcome' nodes varies
> between platforms, i.e. on linux it may be
> 
> <outcome>PASS</outcome>
> 
> and on windows
> 
>    <outcome>
>     PASS
>    </outcome>
> 
> This means that I can't just compare the string values that
> easily, since the content differs in whitespace.
> 
> Thus my question: wouldn't it be more natural to put the outcome
> value into an attribute ?
> A temporary workaround for my xpath expression may be to use
> "contains(outcome, 'FAIL')", but that seems quite hackish.
> 
> Checking with the document type definition for result files
> I think it would be perfectly fine to make such a change,
> i.e. the outcome is actually an enum, so the dtd / schema could
> well be tightened a bit to make processing easier.
> 
> Any thoughts ?

Yes, that would definitely be much better!

Are you willing to work on a patch?  If so, you should make
XMLResultReader._GetResultFromDomNode accept both the old and new format
-- we try to maintain backward compatibility wherever possible.

Thanks!

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com



From njs at pobox.com  Wed Oct  1 08:03:21 2003
From: njs at pobox.com (Nathaniel Smith)
Date: Wed, 1 Oct 2003 01:03:21 -0700
Subject: [qmtest] working with the xml result stream
In-Reply-To: <1064993452.7789.174.camel@doubledemon.codesourcery.com>
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca> <1064993452.7789.174.camel@doubledemon.codesourcery.com>
Message-ID: <20031001080321.GA7961@njs.dhis.org>

On Wed, Oct 01, 2003 at 12:30:51AM -0700, Mark Mitchell wrote:
> Are you willing to work on a patch?  If so, you should make
> XMLResultReader._GetResultFromDomNode accept both the old and new format
> -- we try to maintain backward compatibility wherever possible.

And make sure to put a test in tests/results_files/ and document the
change in tests/results_files/README.

-- Nathaniel

-- 
So let us espouse a less contested notion of truth and falsehood, even
if it is philosophically debatable (if we listen to philosophers, we
must debate everything, and there would be no end to the discussion).
  -- Serendipities, Umberto Eco


From seefeld at sympatico.ca  Wed Oct  1 13:27:30 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Wed, 01 Oct 2003 09:27:30 -0400
Subject: [qmtest] working with the xml result stream
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca> <1064993452.7789.174.camel@doubledemon.codesourcery.com> <20031001080321.GA7961@njs.dhis.org>
Message-ID: <e0cdcb3a25dc8a992a8e192ff9cf82093f7ad26f@Orthosoft.ca>

Nathaniel Smith wrote:

> And make sure to put a test in tests/results_files/ and document the
> change in tests/results_files/README.

How do I put a test into tests/results_files ? I can guess that in the
end that directory should contain an 'xml_results_v3.qmr' file, but
how should I generate that, and what else should I do to actually test
anything ?

There seems to be an earlier change in the xml output, (compare
xml_results.qmr and xml_results_v2.qmr), but the README only documents
the initial xml file format. I'll leave a spot in the README so someone
can fill in the docs...

Stefan






From seefeld at sympatico.ca  Wed Oct  1 13:56:26 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Wed, 01 Oct 2003 09:56:26 -0400
Subject: [qmtest] working with the xml result stream
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca> <1064993452.7789.174.camel@doubledemon.codesourcery.com>
Message-ID: <3f28582c76ad68b5789e2a291b0ed6c63f7ad936@Orthosoft.ca>

Mark Mitchell wrote:

> Are you willing to work on a patch?  If so, you should make
> XMLResultReader._GetResultFromDomNode accept both the old and new format
> -- we try to maintain backward compatibility wherever possible.

ok, here is a partial patch. It includes the changed document type 
definition, and the necessary changes to result.py and 
xml_result_stream.py. I didn't include the changes asked for by
Nathaniel, as I don't have enough information to know how to generate
that reference qmr file.


Regards,
		Stefan



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20031001/d5f01506/attachment.ksh>

From mark at codesourcery.com  Wed Oct  1 18:49:48 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 01 Oct 2003 11:49:48 -0700
Subject: [qmtest] working with the xml result stream
In-Reply-To: <3f28582c76ad68b5789e2a291b0ed6c63f7ad936@Orthosoft.ca>
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca>
	<1064993452.7789.174.camel@doubledemon.codesourcery.com> 
	<3f28582c76ad68b5789e2a291b0ed6c63f7ad936@Orthosoft.ca>
Message-ID: <1065034189.2650.200.camel@doubledemon.codesourcery.com>

On Wed, 2003-10-01 at 06:56, Stefan Seefeld wrote:
> Mark Mitchell wrote:
> 
> > Are you willing to work on a patch?  If so, you should make
> > XMLResultReader._GetResultFromDomNode accept both the old and new format
> > -- we try to maintain backward compatibility wherever possible.
> 
> ok, here is a partial patch. It includes the changed document type 
> definition, and the necessary changes to result.py and 
> xml_result_stream.py. I didn't include the changes asked for by
> Nathaniel, as I don't have enough information to know how to generate
> that reference qmr file.

I think this patch is a little *too* backwards compatible. :-)

We don't need for old QMTest to be able to read the new files; only for
new QMTest to be able to read the old files.  So, there should no longer
be an "outcome" element.  That means that the "outcome" element
declaration should be removed from the DTD as well.

The instructions for Nathaniel's testing regime are buried in
tests/results_files/QMTest/results_file_database.py.  We should move
those instructions to README.

Basically, you want to do:

/path/to/new/qmtest -D tdb run --result-stream
xml_result_stream.XMLResultStream

and then copy results.qmr to xml_results_v3.qmr.

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com



From seefeld at sympatico.ca  Wed Oct  1 19:23:48 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Wed, 01 Oct 2003 15:23:48 -0400
Subject: [qmtest] working with the xml result stream
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca>	<1064993452.7789.174.camel@doubledemon.codesourcery.com> 	<3f28582c76ad68b5789e2a291b0ed6c63f7ad936@Orthosoft.ca> <1065034189.2650.200.camel@doubledemon.codesourcery.com>
Message-ID: <e6b47463a818e6bedba14610e86bfb9b3f7b25f6@Orthosoft.ca>

Mark Mitchell wrote:
> On Wed, 2003-10-01 at 06:56, Stefan Seefeld wrote:
> 
>>Mark Mitchell wrote:
>>
>>
>>>Are you willing to work on a patch?  If so, you should make
>>>XMLResultReader._GetResultFromDomNode accept both the old and new format
>>>-- we try to maintain backward compatibility wherever possible.
>>
>>ok, here is a partial patch. It includes the changed document type 
>>definition, and the necessary changes to result.py and 
>>xml_result_stream.py. I didn't include the changes asked for by
>>Nathaniel, as I don't have enough information to know how to generate
>>that reference qmr file.
> 
> 
> I think this patch is a little *too* backwards compatible. :-)
> 
> We don't need for old QMTest to be able to read the new files; only for
> new QMTest to be able to read the old files.  So, there should no longer
> be an "outcome" element.  That means that the "outcome" element
> declaration should be removed from the DTD as well.
> 
> The instructions for Nathaniel's testing regime are buried in
> tests/results_files/QMTest/results_file_database.py.  We should move
> those instructions to README.
> 
> Basically, you want to do:
> 
> /path/to/new/qmtest -D tdb run --result-stream
> xml_result_stream.XMLResultStream
> 
> and then copy results.qmr to xml_results_v3.qmr.

hmm, that writes the xml output to stdout, and the results.qmr
contains pickled data. I assume you meant

qmtest.py -D tdb run --result-stream
xml_result_stream.XMLResultStream > xml_results_v3.qmr

Anyway, that's what I did, and here is the new patch.

Regards,
		Stefan
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20031001/cd586799/attachment.ksh>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: xml_results_v3.qmr
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20031001/cd586799/attachment-0001.ksh>

From seefeld at sympatico.ca  Thu Oct  2 14:46:30 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 02 Oct 2003 10:46:30 -0400
Subject: [qmtest] RFE: result annotations
References: <a0ff1edbe193e64544bab947beb07ec63f6b48a4@Orthosoft.ca>	 <1064196811.12893.23.camel@minax.codesourcery.com>	 <07ef5449f0f67237981d0cf94f96bae63f6eee82@Orthosoft.ca>	 <006601c381e7$432802f0$6c0b3781@minax> <3F70E851.9070203@sympatico.ca>	 <006401c38242$fbeb2550$01cf000a@minax> <3F7123E5.5010900@sympatico.ca>	 <20030924060956.GA19901@njs.dhis.org> <1064414571.3392.44.camel@minax.codesourcery.com>
Message-ID: <e91f1d8a77e3812d744cde83d2416a1c3f7c368a@Orthosoft.ca>

Mark Mitchell wrote:
> On Tue, 2003-09-23 at 23:09, Nathaniel Smith wrote:

>>Do we even know that annotations are, in general, proper XHTML?
>>We've documented them as being HTML (though they're not even properly
>>treated as that ATM; we don't handle character entities right at all),
>>and HTML in real life is rarely well-formed XML.  I'm worried that if
>>we start parsing it as XML, we'll start getting parse errors
>>who-knows-where...
> 
> 
> Right now, we assume they are HTML, not XHTML.
> 
> And, we do handle character entities correctly in results files; they
> are escaped.

yes, the current solution works, with a proper definition of 'works'.
But why can't we require the annotation author to use valid xml (i.e.
balancing start and end tags, properly escaping of special characters),
and through this gain a lot of power for the postprocessing of these
data ? Just using some non-validated form of html doesn't gain anything
but the hope that it might render nicely in a browser even without the
efford to adhere to a stricter grammar.

I don't think the proposed change would cause any trouble for backward
compatibility. I'm talking about generating well-formed xml inside
qmtest.
The parsing of these data (wherever that might be necessary inside
qmtest) could be more relax...

> If the HTML is invalid, it will be stored correctly in the results
> files, but not displayed correctly in the GUI.  (I'm not sure how to
> correctly display invalid HTML, but we make no attempt to discern
> validity; we just dump it into the web page.)

I don't understand your argument. Are you arguing that qmtest should
be agnostic to the content of annotations, and just try to do the
best it can to still render it nicely (in its web frontend) ?

If you are concerned about the burden for users to convert their
annnotations to valid xml, why not just provide a convenience function
that escapes the string or wraps it in a CDATA section or somesuch.
That's ugly enough (and should be discouraged), but it's all that is
needed for backward compatibility.

I'm really just trying to enhance the output data structure to make
automatic postprocessing more efficient.

Regards,
		Stefan



From mark at codesourcery.com  Thu Oct  2 15:49:35 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 02 Oct 2003 08:49:35 -0700
Subject: [qmtest] RFE: result annotations
In-Reply-To: <e91f1d8a77e3812d744cde83d2416a1c3f7c368a@Orthosoft.ca>
References: <a0ff1edbe193e64544bab947beb07ec63f6b48a4@Orthosoft.ca>	
	<1064196811.12893.23.camel@minax.codesourcery.com>	
	<07ef5449f0f67237981d0cf94f96bae63f6eee82@Orthosoft.ca>	
	<006601c381e7$432802f0$6c0b3781@minax> <3F70E851.9070203@sympatico.ca>	
	<006401c38242$fbeb2550$01cf000a@minax> <3F7123E5.5010900@sympatico.ca>	
	<20030924060956.GA19901@njs.dhis.org>
	<1064414571.3392.44.camel@minax.codesourcery.com> 
	<e91f1d8a77e3812d744cde83d2416a1c3f7c368a@Orthosoft.ca>
Message-ID: <1065109776.30431.37.camel@doubledemon.codesourcery.com>

On Thu, 2003-10-02 at 07:46, Stefan Seefeld wrote:
> Mark Mitchell wrote:
> > On Tue, 2003-09-23 at 23:09, Nathaniel Smith wrote:
> 
> >>Do we even know that annotations are, in general, proper XHTML?
> >>We've documented them as being HTML (though they're not even properly
> >>treated as that ATM; we don't handle character entities right at all),
> >>and HTML in real life is rarely well-formed XML.  I'm worried that if
> >>we start parsing it as XML, we'll start getting parse errors
> >>who-knows-where...
> > 
> > 
> > Right now, we assume they are HTML, not XHTML.
> > 
> > And, we do handle character entities correctly in results files; they
> > are escaped.
> 
> yes, the current solution works, with a proper definition of 'works'.
> But why can't we require the annotation author to use valid xml (i.e.
> balancing start and end tags, properly escaping of special characters),

I do not have any objection to that requirement.  In a way, it's already
implicit -- if the annotation is not valid HTML, unpredictable things
will happen.  If we were to require it be XHTML (as you suggest), that
would be OK.

However, I'd still *store* it with escapes.  In other words, you want:

  <annotation name="foo.bar"><p>This is a paragraph.</p></annotation>

and I want:

  <annotation name="foo.bar">&lt;p&gt;This is a
paragraph.&lt;p&gt;</annotation>

I am still not sure how to recover the data from your version using the
DOM API.

> I'm really just trying to enhance the output data structure to make
> automatic postprocessing more efficient.

I think what's really happening is that you're working around a
limitation in current versions of QMTest -- we don't have historical
results data.  There should a "ResultsDatabase" object that would store
multiple results streams.  Then, it would be easy to generate the kind
of historical/cross-run summary data you want.  We would like to add
this, but we need evidence that doing that work would be of (monetary)
value to a customer.

In the mean time, you could always make a variant of XMLResultStream
that did what you want. :-)

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com



From mark at codesourcery.com  Thu Oct  2 15:51:39 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 02 Oct 2003 08:51:39 -0700
Subject: [qmtest] working with the xml result stream
In-Reply-To: <e6b47463a818e6bedba14610e86bfb9b3f7b25f6@Orthosoft.ca>
References: 	<9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca>	<1064993452.7789.174
	.camel@doubledemon.codesourcery.com>
		<3f28582c76ad68b5789e2a291b0ed6c63f7ad936@Orthosoft.ca>
	<1065034189.2650.200.camel@doubledemon.codesourcery.com> 
	<e6b47463a818e6bedba14610e86bfb9b3f7b25f6@Orthosoft.ca>
Message-ID: <1065109900.30395.40.camel@doubledemon.codesourcery.com>

> qmtest.py -D tdb run --result-stream
> xml_result_stream.XMLResultStream > xml_results_v3.qmr

Yes.  Sorry!

> Anyway, that's what I did, and here is the new patch.

That looks fine,  except that you didn't remove the "outcome" element
from the DTD.  Would you do that before you check in?

Thanks!

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com



From mark at codesourcery.com  Thu Oct  2 16:16:30 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 02 Oct 2003 09:16:30 -0700
Subject: [qmtest] new 'check' command
In-Reply-To: <f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>
References: <3F6903F8.1050304@sympatico.ca>
	<1064819601.4279.157.camel@minax.codesourcery.com> 
	<f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>
Message-ID: <1065111390.30395.48.camel@doubledemon.codesourcery.com>

On Tue, 2003-09-30 at 06:02, Stefan Seefeld wrote:
> Mark Mitchell wrote:
> 
> > The new check.py file is OK.
> 
> ok, it's checked in. However, this command assumes 'qmtest.py' is
> executable (which it is after installation). So to make it work
> even inside the source tree the qm/test/qmtest.py file's permissions
> have to be changed.

True.  I've now marked that as executable in CVS.

> What else is missing / can I do to bring the new build system up to
> speed so the old stuff can be dropped ? As soon as the file layout
> is a bit reorganized there is quite a bit of cleanup that can be done.

I think I'd prefer not to try the file layout reorganization before the
release.

I think the big thing we have to do before we cut over is figure out
which pieces of qm.sh need to get incorporated into qmtest.py.

A first puzzle is how -- using qmtest.py as the main executable -- to
get Python optimization turned on.  (In other words, we want to invoke
Python with "-O".)  Is that possible without a separate shell script?

Thanks,

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com



From seefeld at sympatico.ca  Thu Oct  2 16:24:57 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 02 Oct 2003 12:24:57 -0400
Subject: [qmtest] new 'check' command
References: <3F6903F8.1050304@sympatico.ca>	<1064819601.4279.157.camel@minax.codesourcery.com> 	<f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca> <1065111390.30395.48.camel@doubledemon.codesourcery.com>
Message-ID: <768aa1919c07b62410ae7da8370c71433f7c4d9e@Orthosoft.ca>

Mark Mitchell wrote:

> A first puzzle is how -- using qmtest.py as the main executable -- to
> get Python optimization turned on.  (In other words, we want to invoke
> Python with "-O".)  Is that possible without a separate shell script?

er, '#!/usr/bin/python -O' ?

(this line is generated by the install_script command anyways, so
there definitely is a way to fine-tune it)

Regards,
		Stefan







From mark at codesourcery.com  Thu Oct  2 16:30:31 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 02 Oct 2003 09:30:31 -0700
Subject: [qmtest] new 'check' command
In-Reply-To: <768aa1919c07b62410ae7da8370c71433f7c4d9e@Orthosoft.ca>
References: 	<3F6903F8.1050304@sympatico.ca>	<1064819601.4279.157.camel@minax.codesourcer
	y.com> 	<f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>
	<1065111390.30395.48.camel@doubledemon.codesourcery.com> 
	<768aa1919c07b62410ae7da8370c71433f7c4d9e@Orthosoft.ca>
Message-ID: <1065112232.30431.50.camel@doubledemon.codesourcery.com>

On Thu, 2003-10-02 at 09:24, Stefan Seefeld wrote:
> Mark Mitchell wrote:
> 
> > A first puzzle is how -- using qmtest.py as the main executable -- to
> > get Python optimization turned on.  (In other words, we want to invoke
> > Python with "-O".)  Is that possible without a separate shell script?
> 
> er, '#!/usr/bin/python -O' ?
> 
> (this line is generated by the install_script command anyways, so
> there definitely is a way to fine-tune it)

How is this going to work on a machine where we ship Python with QMTest?

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com



From seefeld at sympatico.ca  Thu Oct  2 16:35:59 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 02 Oct 2003 12:35:59 -0400
Subject: [qmtest] working with the xml result stream
References: <9ddc2050bf1ad07345ba5b49ae6f4d743f79a905@Orthosoft.ca>	<1064993452.7789.174	.camel@doubledemon.codesourcery.com>		<3f28582c76ad68b5789e2a291b0ed6c63f7ad936@Orthosoft.ca>	<1065034189.2650.200.camel@doubledemon.codesourcery.com> 	<e6b47463a818e6bedba14610e86bfb9b3f7b25f6@Orthosoft.ca> <1065109900.30395.40.camel@doubledemon.codesourcery.com>
Message-ID: <efdf15283dc2f80a9d865d18996f4bb33f7c5034@Orthosoft.ca>

Mark Mitchell wrote:

 > That looks fine,  except that you didn't remove the "outcome" element
 > from the DTD.  Would you do that before you check in?

oh, sorry for the omission. It's all checked in now.

Regards,
		Stefan




From mark at codesourcery.com  Thu Oct  2 16:44:26 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: 02 Oct 2003 09:44:26 -0700
Subject: [qmtest] Bug in get_extension_directories (base.py) in Windows
In-Reply-To: <9EEF3C7F0B31F544919778197B64D76002593488@au-sth01-ex.ausys.se>
References: <9EEF3C7F0B31F544919778197B64D76002593488@au-sth01-ex.ausys.se>
Message-ID: <1065113066.30395.54.camel@doubledemon.codesourcery.com>

On Tue, 2003-09-30 at 08:02, Anders Hasselqvist wrote:
> Hi,
> 
> I wanted to set the QMTEST_CLASS_PATH to H:\exjobb\python but
> this doesn't work since the string is split by ':'
> I think it should be ';' in Windows.
> 
> From base.py:
> -------------
> # Start with the directories that the user has specified in the
> # QNTEST_CLASSPATH environment variable.
>   if os.environ.has_key('QMTEST_CLASS_PATH'):
>   dirs = string.split(os.environ['QMTEST_CLASS_PATH'], ':')
> -------------

Thanks for the report.

You are correct; in fact, the QMTest reference manual says that the OS
PATH separator is used.

This patch fixes that problem.

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com
-------------- next part --------------
2003-10-02  Mark Mitchell  <mark at codesourcery.com>

	* qm/test/base.py (get_extension_directories): Use ";" as the
	QMTEST_CLASS_PATH separator on Windows.
	* NEWS: Mention recent improvements.

Index: qm/test/base.py
===================================================================
RCS file: /home/sc/Repository/qm/qm/test/base.py,v
retrieving revision 1.92
diff -c -5 -p -r1.92 base.py
*** qm/test/base.py	22 Sep 2003 04:53:47 -0000	1.92
--- qm/test/base.py	2 Oct 2003 16:24:59 -0000
*************** def get_extension_directories(kind, data
*** 93,103 ****
      assert kind in extension_kinds
          
      # Start with the directories that the user has specified in the
      # QMTEST_CLASS_PATH environment variable.
      if os.environ.has_key('QMTEST_CLASS_PATH'):
!         dirs = string.split(os.environ['QMTEST_CLASS_PATH'], ':')
      else:
          dirs = []
  
      # Search directories specified by the database.
      if database:
--- 93,104 ----
      assert kind in extension_kinds
          
      # Start with the directories that the user has specified in the
      # QMTEST_CLASS_PATH environment variable.
      if os.environ.has_key('QMTEST_CLASS_PATH'):
!         dirs = string.split(os.environ['QMTEST_CLASS_PATH'],
!                             os.pathsep)
      else:
          dirs = []
  
      # Search directories specified by the database.
      if database:
Index: NEWS
===================================================================
RCS file: /home/sc/Repository/qm/NEWS,v
retrieving revision 1.27
diff -c -5 -p -r1.27 NEWS
*** NEWS	8 Sep 2003 06:42:22 -0000	1.27
--- NEWS	2 Oct 2003 16:35:10 -0000
*************** A defect that could cause a multi-thread
*** 43,52 ****
--- 43,58 ----
  to hang if a resource could not be set up has been corrected.
  
  A defect that resulted in resources being created only per run of the
  GUI, rather than once per test run, has been corrected.
  
+ The XML results file format has been improved to make it more
+ readable, and to make it easier to postprocess the XML.
+ 
+ QMTest now correctly uses ";" as the separator in QMTEST_CLASS_PATH on
+ Windows.
+ 
  QM 2.0.4 (Not Yet Released)
  ===========================
  
  A defect that could cause crashes in the RSHTarget class has been
  corrected.

From seefeld at sympatico.ca  Thu Oct  2 16:52:50 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 02 Oct 2003 12:52:50 -0400
Subject: [qmtest] new 'check' command
References: <3F6903F8.1050304@sympatico.ca>	<1064819601.4279.157.camel@minax.codesourcer	y.com> 	<f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>	<1065111390.30395.48.camel@doubledemon.codesourcery.com> 	<768aa1919c07b62410ae7da8370c71433f7c4d9e@Orthosoft.ca> <1065112232.30431.50.camel@doubledemon.codesourcery.com>
Message-ID: <63eca004595cc218cfa4bc7a38d1c0663f7c5427@Orthosoft.ca>

Mark Mitchell wrote:
> On Thu, 2003-10-02 at 09:24, Stefan Seefeld wrote:
> 
>>Mark Mitchell wrote:
>>
>>
>>>A first puzzle is how -- using qmtest.py as the main executable -- to
>>>get Python optimization turned on.  (In other words, we want to invoke
>>>Python with "-O".)  Is that possible without a separate shell script?
>>
>>er, '#!/usr/bin/python -O' ?
>>
>>(this line is generated by the install_script command anyways, so
>>there definitely is a way to fine-tune it)
> 
> 
> How is this going to work on a machine where we ship Python with QMTest?

Hmm, I just tried 'alias python="python -O"' which works also when used
in conjunction with '#!/usr/bin/env python'.
And if you don't call the qmtest.py script explicitely, there are even
other means such as making 'python' a wrapper script.
Just some ideas...

Regards,
		Stefan



From seefeld at sympatico.ca  Thu Oct  2 17:00:15 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 02 Oct 2003 13:00:15 -0400
Subject: [qmtest] new 'check' command
References: <3F6903F8.1050304@sympatico.ca>	<1064819601.4279.157.camel@minax.codesourcery.com> 	<f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca> <1065111390.30395.48.camel@doubledemon.codesourcery.com>
Message-ID: <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca>

Mark Mitchell wrote:

>>What else is missing / can I do to bring the new build system up to
>>speed so the old stuff can be dropped ? As soon as the file layout
>>is a bit reorganized there is quite a bit of cleanup that can be done.
> 
> 
> I think I'd prefer not to try the file layout reorganization before the
> release.

users were used to the main script being called 'qmtest', not
'qmtest.py'. Shouldn't therefor 'qmtest.py' be renamed to 'qmtest'
at least (with all the necessary adjustments in the build system) ?

Looking into the NEWS file I realize that both, 2.0.4 and 2.1 are marked
as 'Not Yet Released'. So which release are we talking about now ?

Regards,
		Stefan



From mark at codesourcery.com  Thu Oct  2 17:10:20 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 02 Oct 2003 10:10:20 -0700
Subject: [qmtest] new 'check' command
In-Reply-To: <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca>
References: <3F6903F8.1050304@sympatico.ca>
	 <1064819601.4279.157.camel@minax.codesourcery.com>
	 <f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>
	 <1065111390.30395.48.camel@doubledemon.codesourcery.com>
	 <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca>
Message-ID: <1065114620.32107.1.camel@doubledemon.codesourcery.com>


> users were used to the main script being called 'qmtest', not
> 'qmtest.py'. Shouldn't therefor 'qmtest.py' be renamed to 'qmtest'
> at least (with all the necessary adjustments in the build system) ?

Yes, I agree.

> Looking into the NEWS file I realize that both, 2.0.4 and 2.1 are marked
> as 'Not Yet Released'. So which release are we talking about now ?

The 2.1 release.  I do not expect there will ever be a 2.0.4, but at one
point it seemed like that might make sense.

Thanks,

-- 
Mark Mitchell <mark at codesourcery.com>
CodeSourcery, LLC



From seefeld at sympatico.ca  Thu Oct  2 17:19:02 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Thu, 02 Oct 2003 13:19:02 -0400
Subject: [qmtest] new 'check' command
References: <3F6903F8.1050304@sympatico.ca>	 <1064819601.4279.157.camel@minax.codesourcery.com>	 <f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>	 <1065111390.30395.48.camel@doubledemon.codesourcery.com>	 <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca> <1065114620.32107.1.camel@doubledemon.codesourcery.com>
Message-ID: <fefddc84c7a6b2b1143e06c3acbf7ecc3f7c5a4c@Orthosoft.ca>

Mark Mitchell wrote:
>>users were used to the main script being called 'qmtest', not
>>'qmtest.py'. Shouldn't therefor 'qmtest.py' be renamed to 'qmtest'
>>at least (with all the necessary adjustments in the build system) ?
> 
> 
> Yes, I agree.

ok, let me know when you are ready and I'll send in a patch that
replaces 'qmtest.py' by 'qmtest'.

Regards,
		Stefan




From mark at codesourcery.com  Mon Oct  6 05:47:42 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Sun, 05 Oct 2003 22:47:42 -0700
Subject: [qmtest] new 'check' command
In-Reply-To: <fefddc84c7a6b2b1143e06c3acbf7ecc3f7c5a4c@Orthosoft.ca>
References: <3F6903F8.1050304@sympatico.ca>
	 <1064819601.4279.157.camel@minax.codesourcery.com>
	 <f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>
	 <1065111390.30395.48.camel@doubledemon.codesourcery.com>
	 <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca>
	 <1065114620.32107.1.camel@doubledemon.codesourcery.com>
	 <fefddc84c7a6b2b1143e06c3acbf7ecc3f7c5a4c@Orthosoft.ca>
Message-ID: <1065419262.32115.448.camel@doubledemon.codesourcery.com>

On Thu, 2003-10-02 at 10:19, Stefan Seefeld wrote:
> Mark Mitchell wrote:
> >>users were used to the main script being called 'qmtest', not
> >>'qmtest.py'. Shouldn't therefor 'qmtest.py' be renamed to 'qmtest'
> >>at least (with all the necessary adjustments in the build system) ?
> > 
> > 
> > Yes, I agree.
> 
> ok, let me know when you are ready and I'll send in a patch that
> replaces 'qmtest.py' by 'qmtest'.

There's no time like the present -- but make sure that it works for both
in-srcdir and installed versions of QMTest.

Thanks!

-- 
Mark Mitchell <mark at codesourcery.com>
CodeSourcery, LLC



From mark at codesourcery.com  Mon Oct  6 06:57:22 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Sun, 05 Oct 2003 23:57:22 -0700
Subject: [qmtest] Date for new release?
In-Reply-To: <9EEF3C7F0B31F544919778197B64D76002593487@au-sth01-ex.ausys.se>
References: <9EEF3C7F0B31F544919778197B64D76002593487@au-sth01-ex.ausys.se>
Message-ID: <1065423441.32115.495.camel@doubledemon.codesourcery.com>

On Tue, 2003-09-30 at 06:07, Anders Hasselqvist wrote:
> Hi,
> 
> I'm new to this list. Maybe this has been asked often but I can't find any
> Archive of this list to search.
> 
> I looked at the CVS and it seems there has been a lot of bugfixes and
> improvements.
> Is there a planned date for a new release?

No, there's no planned date.

I'd hoped to be able to get some additional new features in before the
next release, but given the other things that we've got on our schedule,
I think we should go with what we've got.

I'd like to get Stefan's additional build-system changes fully checked
in, so that we can get the benefits of the better Windows installer and
the better interactions with other Python packages on UNIX.  Once that
work is complete, we'll make a branch, and start preparing for the
release.

Yours,

-- 
Mark Mitchell <mark at codesourcery.com>
CodeSourcery, LLC



From seefeld at sympatico.ca  Mon Oct  6 12:56:14 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Mon, 06 Oct 2003 08:56:14 -0400
Subject: [qmtest] new 'check' command
References: <3F6903F8.1050304@sympatico.ca>	 <1064819601.4279.157.camel@minax.codesourcery.com>	 <f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>	 <1065111390.30395.48.camel@doubledemon.codesourcery.com>	 <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca>	 <1065114620.32107.1.camel@doubledemon.codesourcery.com>	 <fefddc84c7a6b2b1143e06c3acbf7ecc3f7c5a4c@Orthosoft.ca> <1065419262.32115.448.camel@doubledemon.codesourcery.com>
Message-ID: <30f2110f0258f3b18f468e995d28742e3f816250@Orthosoft.ca>

Mark Mitchell wrote:
> On Thu, 2003-10-02 at 10:19, Stefan Seefeld wrote:
> 
>>Mark Mitchell wrote:
>>
>>>>users were used to the main script being called 'qmtest', not
>>>>'qmtest.py'. Shouldn't therefor 'qmtest.py' be renamed to 'qmtest'
>>>>at least (with all the necessary adjustments in the build system) ?
>>>
>>>
>>>Yes, I agree.
>>
>>ok, let me know when you are ready and I'll send in a patch that
>>replaces 'qmtest.py' by 'qmtest'.
> 
> 
> There's no time like the present -- but make sure that it works for both
> in-srcdir and installed versions of QMTest.

I'd suggest that someone with *local* write permissions to the
repository does the following in the root directory:

mkdir bin
cp qm/test/qmtest.py,v bin/qmtest,v

That creates a fork of the qmtest.py file with all its history. As soon 
as that's done, I will send in a patch that uses the 'bin/qmtest' script
instead of 'qm/test/qmtest.py' everywhere, and as soon as that patch got
accepted and committed, you can just 'rm qm/test/qmtest.py,v'.

Does this make sense ?

Regards,
		Stefan



From Anders.Hasselqvist at tss.teleca.se  Tue Oct  7 14:13:39 2003
From: Anders.Hasselqvist at tss.teleca.se (Anders Hasselqvist)
Date: Tue, 7 Oct 2003 16:13:39 +0200 
Subject: Nesting qm.fields.SetField
Message-ID: <9EEF3C7F0B31F544919778197B64D7600259348E@au-sth01-ex.ausys.se>

Hi,

I want to have something like this in a test class I'm writing:

-------------
qm.fields.SetField(
  qm.fields.TupleField(
    name = "filesInMemory",
    title = "Files in Memory",
    fields = [
      qm.fields.EnumerationField(
        name = "categoryId",
        title = "Category",
        enumerals = ['F', 'K', 'L', 'N'],
        description = """Which file category to check."""
      ),
      qm.fields.SetField(
        qm.fields.IntegerField(
	    name = "fileSizes",
          title = "Sizes",
          description = """Size of files."""
        )
      )
    ]
  )
)
-------------

The reason is that there can be several files in every category and I only
know
the file size when creating the test case.

Whats happening now is that when I add a new value in the second SetField it
behaves like if I press Ok to save the test.

Is this possible somehow or am I pushing it? :-)

Regards,
--
Anders Hasselqvist


From mark at codesourcery.com  Tue Oct  7 14:48:22 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 07 Oct 2003 07:48:22 -0700
Subject: [qmtest] Nesting qm.fields.SetField
In-Reply-To: <9EEF3C7F0B31F544919778197B64D7600259348E@au-sth01-ex.ausys.se>
References: <9EEF3C7F0B31F544919778197B64D7600259348E@au-sth01-ex.ausys.se>
Message-ID: <1065538102.32110.711.camel@doubledemon.codesourcery.com>

On Tue, 2003-10-07 at 07:13, Anders Hasselqvist wrote:
> Hi,
> 
> I want to have something like this in a test class I'm writing:
> 
> -------------
> qm.fields.SetField(
>   qm.fields.TupleField(
>     name = "filesInMemory",
>     title = "Files in Memory",
>     fields = [
>       qm.fields.EnumerationField(
>         name = "categoryId",
>         title = "Category",
>         enumerals = ['F', 'K', 'L', 'N'],
>         description = """Which file category to check."""
>       ),
>       qm.fields.SetField(
>         qm.fields.IntegerField(
> 	    name = "fileSizes",
>           title = "Sizes",
>           description = """Size of files."""
>         )
>       )
>     ]
>   )
> )
> -------------
> 
> The reason is that there can be several files in every category and I only
> know
> the file size when creating the test case.
> 
> Whats happening now is that when I add a new value in the second SetField it
> behaves like if I press Ok to save the test.
> 
> Is this possible somehow or am I pushing it? :-)

What are you doing should work.

There are two possible problems: a bug in QMTest, or a bug in your
browser.  Complex forms seem to tax even the most modern browsers.

In fields.py, you'll see this comment:

            # The action field is used to keep track of whether the
            # "Add" or "Remove" button has been pushed.  It would be
            # much nice if we could use JavaScript to update the
            # table, but Netscape 4, and even Mozilla 1.0, do not
            # permit that.  Therefore, we have to go back to the
            # server.

It's annoying that we can't do everything on the client side.

The other possibility is that SetField.ParseFormValue is not working
correctly.  You can look through that code; redisplay should get set to
1 when you add a value in the second set field.

-- 
Mark Mitchell <mark at codesourcery.com>
CodeSourcery, LLC



From Anders.Hasselqvist at tss.teleca.se  Wed Oct  8 09:06:13 2003
From: Anders.Hasselqvist at tss.teleca.se (Anders Hasselqvist)
Date: Wed, 8 Oct 2003 11:06:13 +0200 
Subject: [qmtest] Nesting qm.fields.SetField
Message-ID: <9EEF3C7F0B31F544919778197B64D76002593491@au-sth01-ex.ausys.se>

 -----Original Message-----
 From: Mark Mitchell [mailto:mark at codesourcery.com] 
 Sent: den 7 oktober 2003 16:48
 To: Anders Hasselqvist
 Cc: 'qmtest at codesourcery.com'
 Subject: Re: [qmtest] Nesting qm.fields.SetField

> 
> The other possibility is that SetField.ParseFormValue is not
> working correctly.  You can look through that code; redisplay 
> should get set to 1 when you add a value in the second set field.
> 

First of all I'm running QMTest 2.0.3 so I don't know if this is fixed in
cvs.

As you said it seems to be a problem in SetField.ParseFormValue().

In the "while 1:" loop redisplay is set to 1 if
contained_field.ParseFormValue()
return r == 1 (in case of SetField r = redisplay). Later in the "if action
=="
sequence redisplay is assigned to zero which I think is incorrect.

I fixed it by setting redisplay = 0 at the top of the function and removing
the else clause in the if sequence.

Now it works at least in MozillaFirebird. IE refuses, but I don't really
care
about that.

Regards,
--
Anders Hasselqvist


From Anders.Hasselqvist at tss.teleca.se  Thu Oct  9 13:36:05 2003
From: Anders.Hasselqvist at tss.teleca.se (Anders Hasselqvist)
Date: Thu, 9 Oct 2003 15:36:05 +0200 
Subject: [qmtest] Nesting qm.fields.SetField
Message-ID: <9EEF3C7F0B31F544919778197B64D76002593492@au-sth01-ex.ausys.se>

> -----Original Message-----
> From: Mark Mitchell [mailto:mark at codesourcery.com] 
> Sent: den 8 oktober 2003 17:09
> To: Anders Hasselqvist
> Subject: RE: [qmtest] Nesting qm.fields.SetField
> 
> 
> > 
> > > 
> > > The other possibility is that SetField.ParseFormValue is not 
> > > working correctly.  You can look through that code; redisplay 
> > > should get set to 1 when you add a value in the second set field.
> > > 
> > 
> > First of all I'm running QMTest 2.0.3 so I don't know if 
> this is fixed in
> > cvs.
> 
> Ah!
> 
> Yes, I know that QMTest 2.0.3 did not handle recursive uses 
> of SetField
> correctly.  I can't remember if the problems were only in the
> ParseFormValue function, or whether they were elsewhere as well.
> 

I tested nesting SetField using the cvs version last night. The same problem
exist there too. I guess that SetField.ParseFormValue should do like
TupleField.ParseFormValue, that is: 1. Initialize redisplay = 0 at the start
of
2. remove the else clause in the if action sequence.




Regards,
--
Anders Hasselqvist
070-5952539
 


From smb at world.std.com  Thu Oct  9 16:05:33 2003
From: smb at world.std.com (Steve Byan)
Date: Thu, 9 Oct 2003 12:05:33 -0400
Subject: QMTest on Mac OS X
Message-ID: <69A0B1B9-FA72-11D7-B040-000A957CD5B0@world.std.com>

I'm trying out QMTest 2.0.3. I attempted to build and install it on a  
Powerbook G4 running Mac OS X 10.2.6. I'm not sure of the OS X  
developer tools release on this machine; gcc is at version 3.1. When I  
attempt a "make check", the test fails:

multivac% make check
cd qm && PYTHONPATH=.:./zope-dtml:./zope-dtml/ExtensionClass python -O  
./setup.py -q build
warning: build_py: package init file './test/classes/__init__.py' not  
found (or not a regular file)
warning: build_py: package init file './test/classes/__init__.py' not  
found (or not a regular file)
cd zope-dtml/DocumentTemplate &&  
PYTHONPATH=.:./zope-dtml:./zope-dtml/ExtensionClass python -O  
./setup.py -q build
cd zope-dtml/ExtensionClass &&  
PYTHONPATH=.:./zope-dtml:./zope-dtml/ExtensionClass python -O  
./setup.py -q build
qm/test/qmtest -D tests run  \
         -c qmtest_path=qm/test/qmtest
Traceback (most recent call last):
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/test/qmtest.py", line 78, in ?
     exit_code = command.Execute()
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/test/cmdline.py", line 569, in Execute
     return method()
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/test/cmdline.py", line 1137, in __ExecuteRun
     database = self.GetDatabase()
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/test/cmdline.py", line 576, in GetDatabase
     self.__database = database.load_database(self.__db_path)
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/test/database.py", line 1152, in load_database
     document = qm.xmlutil.load_xml_file(config_path)
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/xmlutil.py", line 41, in load_xml_file
     return load_xml(file)
   File  
"/Users/smb/work/projects/scsi_reservations/doc/test/QMTest/qm-2.0.3/ 
qm/xmlutil.py", line 50, in load_xml
     document = xml.dom.minidom.parse(file)
   File  
"/BinaryCache/python/python-3.root~377/usr/lib/python2.2/xml/dom/ 
minidom.py", line 960, in parse
   File  
"/BinaryCache/python/python-3.root~377/usr/lib/python2.2/xml/dom/ 
minidom.py", line 951, in _doparse
   File  
"/BinaryCache/python/python-3.root~377/usr/lib/python2.2/xml/dom/ 
pulldom.py", line 328, in parse
   File  
"/BinaryCache/python/python-3.root~377/usr/lib/python2.2/xml/sax/ 
__init__.py", line 93, in make_parser
xml.sax._exceptions.SAXReaderNotAvailable: No parsers found
make: *** [check-serial] Error 1


Here's the output of ./configure:

multivac% ./configure
creating cache ./config.cache
checking for python2... python
checking Python version... 2.2
checking Python prefix... /usr
checking Python platform... darwin-6.6-Power Macintosh
checking for happydoc... no
checking for jade... no
checking for tidy... no
checking DocBook stylesheets... no
checking for docbook DTD... /usr/lib/sgml
configure: warning: Documentation will not be built.
updating cache ./config.cache
creating ./config.status
creating GNUmakefile
creating qm.spec
creating qm/setup_path.py


When running make, I get a lot of warnings:

multivac% make
cd qm && PYTHONPATH=.:./zope-dtml:./zope-dtml/ExtensionClass python -O  
./setup.py -q build
warning: build_py: package init file './test/classes/__init__.py' not  
found (or not a regular file)
warning: build_py: package init file './test/classes/__init__.py' not  
found (or not a regular file)
cd zope-dtml/DocumentTemplate &&  
PYTHONPATH=.:./zope-dtml:./zope-dtml/ExtensionClass python -O  
./setup.py -q build
cd zope-dtml/ExtensionClass &&  
PYTHONPATH=.:./zope-dtml:./zope-dtml/ExtensionClass python -O  
./setup.py -q build
ExtensionClass.c:123: warning: function declaration isn't a prototype
ExtensionClass.c: In function `CallMethodO':
ExtensionClass.c:187: warning: suggest explicit braces to avoid  
ambiguous `else'
ExtensionClass.c: In function `CMethod_getattro':
ExtensionClass.c:610: warning: suggest explicit braces to avoid  
ambiguous `else'
ExtensionClass.c: In function `PMethod_getattro':
ExtensionClass.c:924: warning: suggest explicit braces to avoid  
ambiguous `else'
ExtensionClass.c: In function `delsetattr_by_name':
ExtensionClass.c:1083: warning: unused variable `v'
ExtensionClass.c: In function `delsetattro_by_name':
ExtensionClass.c:1113: warning: unused variable `v'
ExtensionClass.c: In function `CCL_dealloc':
ExtensionClass.c:1664: warning: suggest explicit braces to avoid  
ambiguous `else'
ExtensionClass.c: In function `subclass_dealloc':
ExtensionClass.c:3069: warning: suggest explicit braces to avoid  
ambiguous `else'
ExtensionClass.c: In function `subclass__init__':
ExtensionClass.c:3343: warning: unused variable `r'
ExtensionClass.c: At top level:
ExtensionClass.c:3529: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/ExtensionClass.o  
cputype (18, architecture ppc) does not match cputype (7) for specified  
-arch flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
Acquisition.c:74: warning: function declaration isn't a prototype
Acquisition.c: In function `CallMethodO':
Acquisition.c:121: warning: suggest explicit braces to avoid ambiguous  
`else'
Acquisition.c:125: warning: suggest explicit braces to avoid ambiguous  
`else'
Acquisition.c: In function `Wrapper_special':
Acquisition.c:301: warning: suggest parentheses around assignment used  
as truth value
Acquisition.c: In function `Wrapper_findattr':
Acquisition.c:401: warning: suggest parentheses around assignment used  
as truth value
Acquisition.c:437: warning: suggest parentheses around assignment used  
as truth value
Acquisition.c: In function `Wrapper_acquire':
Acquisition.c:528: warning: suggest explicit braces to avoid ambiguous  
`else'
Acquisition.c: In function `Xaq_getattro':
Acquisition.c:569: warning: unused variable `r'
Acquisition.c:569: warning: unused variable `v'
Acquisition.c:569: warning: unused variable `tb'
Acquisition.c: At top level:
Acquisition.c:1426: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/Acquisition.o  
cputype (18, architecture ppc) does not match cputype (7) for specified  
-arch flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
MethodObject.c:68: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/MethodObject.o  
cputype (18, architecture ppc) does not match cputype (7) for specified  
-arch flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
MultiMapping.c:235: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/MultiMapping.o  
cputype (18, architecture ppc) does not match cputype (7) for specified  
-arch flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
ThreadLock.c:297: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/ThreadLock.o  
cputype (18, architecture ppc) does not match cputype (7) for specified  
-arch flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
Missing.c:305: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/Missing.o cputype  
(18, architecture ppc) does not match cputype (7) for specified -arch  
flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
Sync.c:117: warning: function declaration isn't a prototype
Sync.c:55: warning: `ErrorObject' defined but not used
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/Sync.o cputype  
(18, architecture ppc) does not match cputype (7) for specified -arch  
flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
Record.c: In function `Record___setstate__':
Record.c:154: warning: suggest explicit braces to avoid ambiguous `else'
Record.c: In function `Record_getattr':
Record.c:265: warning: suggest parentheses around assignment used as  
truth value
Record.c:269: warning: suggest parentheses around assignment used as  
truth value
Record.c: In function `Record_setattr':
Record.c:299: warning: suggest parentheses around assignment used as  
truth value
Record.c: In function `Record_compare':
Record.c:353: warning: suggest parentheses around assignment used as  
truth value
Record.c: In function `Record_subscript':
Record.c:477: warning: suggest parentheses around assignment used as  
truth value
Record.c:496: warning: suggest parentheses around assignment used as  
truth value
Record.c: In function `Record_ass_sub':
Record.c:517: warning: suggest parentheses around assignment used as  
truth value
Record.c: At top level:
Record.c:593: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power Macintosh-2.2/Record.o cputype  
(18, architecture ppc) does not match cputype (7) for specified -arch  
flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
ComputedAttribute.c:146: warning: function declaration isn't a prototype
ld: for architecture i386
ld: warning /usr/lib/bundle1.o cputype (18, architecture ppc) does not  
match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning build/temp.darwin-6.6-Power  
Macintosh-2.2/ComputedAttribute.o cputype (18, architecture ppc) does  
not match cputype (7) for specified -arch flag: i386 (file not loaded)
ld: warning /usr/lib/gcc/darwin/3.1/libgcc.a archive's cputype (18,  
architecture ppc) does not match cputype (7) for specified -arch flag:  
i386 (can't load from it)
ld: warning /usr/lib/libSystem.dylib cputype (18, architecture ppc)  
does not match cputype (7) for specified -arch flag: i386 (file not  
loaded)
rm -rf qm/test/qmtest
cp qm/qm.sh qm/test/qmtest
chmod a-w qm/test/qmtest
chmod a+x qm/test/qmtest
cp qm/test/share/dtds/class-directory.dtd share/xml/class-directory.dtd
cp qm/test/share/dtds/result.dtd share/xml/result.dtd
cp qm/test/share/dtds/suite.dtd share/xml/suite.dtd
rm -f share/xml/CATALOG
echo "-- This file is automatically generated.  Do not edit. --" \
   >> share/xml/CATALOG
for x in share/xml/fields.mod share/xml/class-directory.dtd  
share/xml/result.dtd share/xml/suite.dtd; do \
   name=`expr "\`grep NAME $x\`" : '<!-- NAME: \(.*\) -->'`; \
     echo 'PUBLIC "-//Software Carpentry//'$name'//EN" \
       "'`basename $x`'"' \
       >> share/xml/CATALOG; \
done


Regards,
-Steve
--------
Steve Byan <smb at egenera.com>
Software Architect
Egenera, Inc.
165 Forest Street
Marlboro, MA 01752
(508) 858-3125



From mark at codesourcery.com  Thu Oct  9 18:20:12 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 09 Oct 2003 11:20:12 -0700
Subject: [qmtest] QMTest on Mac OS X
In-Reply-To: <69A0B1B9-FA72-11D7-B040-000A957CD5B0@world.std.com>
References: <69A0B1B9-FA72-11D7-B040-000A957CD5B0@world.std.com>
Message-ID: <1065723612.32115.890.camel@doubledemon.codesourcery.com>

On Thu, 2003-10-09 at 09:05, Steve Byan wrote:
> I'm trying out QMTest 2.0.3. I attempted to build and install it on a  
> Powerbook G4 running Mac OS X 10.2.6. I'm not sure of the OS X  
> developer tools release on this machine; gcc is at version 3.1. When I  
> attempt a "make check", the test fails:

That suggests that you need a more complete installation of Python; does
www.python.org have an OS X binary?

Thanks,

-- 
Mark Mitchell <mark at codesourcery.com>
CodeSourcery, LLC



From mitchell at doubledemon.codesourcery.com  Tue Oct 14 22:05:37 2003
From: mitchell at doubledemon.codesourcery.com (Mark Mitchell)
Date: Tue, 14 Oct 2003 15:05:37 -0700
Subject: PATCH: Switch to Distutils for build and installation
Message-ID: <1066169137.19440.27.camel@doubledemon.codesourcery.com>

I discovered this morning that neither "make install" nor "python
setup.py install" produced a working installation any more.

That inspired me to try to finish up Stefan's excellent efforts to move
us to distutils.  This patch cuts us over to using distutils
exclusively.  There is still a GNUmakefile because the GNU coding
standards require that "./configure; make; make install" work, and we
want to support that -- but the GNUmakefile just uses distutils to do
the job.

As a special bonus (hi, Nathaniel), the use of environment variables
like QM_HOME and such is now eliminated.

I haven't yet tried building Windows packages, but that will happen
soon.

I'd like to again thank Stefan for providing the critical impetus to
move us down this path.

-- 
Mark Mitchell <mitchell at doubledemon.codesourcery.com>
CodeSourcery, LLC
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diffs
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20031014/12c8a1c2/attachment.ksh>

From mark at codesourcery.com  Wed Oct 15 03:58:53 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Tue, 14 Oct 2003 20:58:53 -0700
Subject: [qmtest] new 'check' command
References: <3F6903F8.1050304@sympatico.ca>	 <1064819601.4279.157.camel@minax.codesourcery.com>	 <f424c7876edc88dfd57ce784adb972603f797af5@Orthosoft.ca>	 <1065111390.30395.48.camel@doubledemon.codesourcery.com>	 <e838ef7c31d4722d86a627875fcc36ba3f7c55e4@Orthosoft.ca>	 <1065114620.32107.1.camel@doubledemon.codesourcery.com>	 <fefddc84c7a6b2b1143e06c3acbf7ecc3f7c5a4c@Orthosoft.ca> <1065419262.32115.448.camel@doubledemon.codesourcery.com> <30f2110f0258f3b18f468e995d28742e3f816250@Orthosoft.ca>
Message-ID: <007101c392e6$93122880$6500a8c0@minax>

Stefan --

I think I took care of this today; thanks for the hints.

-- Mark

----- Original Message ----- 
From: "Stefan Seefeld" <seefeld at sympatico.ca>
To: <qmtest at codesourcery.com>
Sent: Monday, October 06, 2003 5:56 AM
Subject: Re: [qmtest] new 'check' command


> Mark Mitchell wrote:
> > On Thu, 2003-10-02 at 10:19, Stefan Seefeld wrote:
> >
> >>Mark Mitchell wrote:
> >>
> >>>>users were used to the main script being called 'qmtest', not
> >>>>'qmtest.py'. Shouldn't therefor 'qmtest.py' be renamed to 'qmtest'
> >>>>at least (with all the necessary adjustments in the build system) ?
> >>>
> >>>
> >>>Yes, I agree.
> >>
> >>ok, let me know when you are ready and I'll send in a patch that
> >>replaces 'qmtest.py' by 'qmtest'.
> >
> >
> > There's no time like the present -- but make sure that it works for both
> > in-srcdir and installed versions of QMTest.
>
> I'd suggest that someone with *local* write permissions to the
> repository does the following in the root directory:
>
> mkdir bin
> cp qm/test/qmtest.py,v bin/qmtest,v
>
> That creates a fork of the qmtest.py file with all its history. As soon
> as that's done, I will send in a patch that uses the 'bin/qmtest' script
> instead of 'qm/test/qmtest.py' everywhere, and as soon as that patch got
> accepted and committed, you can just 'rm qm/test/qmtest.py,v'.
>
> Does this make sense ?
>
> Regards,
> Stefan
>
>



From mark at codesourcery.com  Wed Oct 15 08:37:08 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 15 Oct 2003 01:37:08 -0700
Subject: [qmtest] Nesting qm.fields.SetField
In-Reply-To: <9EEF3C7F0B31F544919778197B64D76002593492@au-sth01-ex.ausys.se>
References: <9EEF3C7F0B31F544919778197B64D76002593492@au-sth01-ex.ausys.se>
Message-ID: <1066207028.25217.22.camel@doubledemon.codesourcery.com>

On Thu, 2003-10-09 at 06:36, Anders Hasselqvist wrote:
> > -----Original Message-----
> > From: Mark Mitchell [mailto:mark at codesourcery.com] 
> > Sent: den 8 oktober 2003 17:09
> > To: Anders Hasselqvist
> > Subject: RE: [qmtest] Nesting qm.fields.SetField
> > 
> > 
> > > 
> > > > 
> > > > The other possibility is that SetField.ParseFormValue is not 
> > > > working correctly.  You can look through that code; redisplay 
> > > > should get set to 1 when you add a value in the second set field.
> > > > 
> > > 
> > > First of all I'm running QMTest 2.0.3 so I don't know if 
> > this is fixed in
> > > cvs.
> > 
> > Ah!
> > 
> > Yes, I know that QMTest 2.0.3 did not handle recursive uses 
> > of SetField
> > correctly.  I can't remember if the problems were only in the
> > ParseFormValue function, or whether they were elsewhere as well.
> > 
> 
> I tested nesting SetField using the cvs version last night. The same problem
> exist there too. I guess that SetField.ParseFormValue should do like
> TupleField.ParseFormValue, that is: 1. Initialize redisplay = 0 at the start
> of
> 2. remove the else clause in the if action sequence.

Yes!

I've applied the attached patch.

-- 
Mark Mitchell <mark at codesourcery.com>
CodeSourcery, LLC
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: diffs
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20031015/46d159b0/attachment.ksh>

From smb at egenera.com  Tue Oct 21 14:39:47 2003
From: smb at egenera.com (Steve Byan)
Date: Tue, 21 Oct 2003 10:39:47 -0400
Subject: Minor nits in tutorial
Message-ID: <6B6E4FE3-03D4-11D8-9E60-000A957CD5B0@egenera.com>

I've installed QMTest on RedHat Linux 9.0 and am working my way through 
the tutorial in the User's Guide and Reference. I've noticed the 
following minor nits in the documentation:

Section 2.6 instructs one to "click on the Home link to return to the 
main QMTest page" after editing a failing test. There are two problems 
with this:
1) After following the instructions to edit and re-run the test, I'm 
already on the Directory page.
2) These is no "Home" link on either the test results page or the edit 
test page.

Regards,
-Steve
--------
Steve Byan <smb at egenera.com>
Software Architect
Egenera, Inc.
165 Forest Street
Marlboro, MA 01752
(508) 858-3125



From smb at egenera.com  Wed Oct 22 16:13:22 2003
From: smb at egenera.com (Steve Byan)
Date: Wed, 22 Oct 2003 12:13:22 -0400
Subject: GUI nit
Message-ID: <A84700CC-04AA-11D8-9E60-000A957CD5B0@egenera.com>

There doesn't seem to be a way to delete a test directory in the GUI, 
although one can be implicitly created by creating a test within a 
subdirectory. Deleting the last test in a directory doesn't delete the 
directory, and I can't find a menu item for deleting (or creating) a 
test directory.

Regards,
-Steve
--------
Steve Byan <smb at egenera.com>
Software Architect
Egenera, Inc.
165 Forest Street
Marlboro, MA 01752
(508) 858-3125



From mark at codesourcery.com  Thu Oct 23 14:22:55 2003
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 23 Oct 2003 07:22:55 -0700
Subject: [qmtest] GUI nit
References: <A84700CC-04AA-11D8-9E60-000A957CD5B0@egenera.com>
Message-ID: <005401c39971$279f6ea0$8088cc41@minax>

Steve --

Thanks for your comments.

You are correct -- this is a defect in the current GUI.  

We hope to fix that in the relatively near future.

Thanks,

-- Mark

----- Original Message ----- 
From: "Steve Byan" <smb at egenera.com>
To: <qmtest at codesourcery.com>
Sent: Wednesday, October 22, 2003 9:13 AM
Subject: [qmtest] GUI nit


> There doesn't seem to be a way to delete a test directory in the GUI, 
> although one can be implicitly created by creating a test within a 
> subdirectory. Deleting the last test in a directory doesn't delete the 
> directory, and I can't find a menu item for deleting (or creating) a 
> test directory.
> 
> Regards,
> -Steve
> --------
> Steve Byan <smb at egenera.com>
> Software Architect
> Egenera, Inc.
> 165 Forest Street
> Marlboro, MA 01752
> (508) 858-3125
> 
> 


From seefeld at sympatico.ca  Wed Oct 29 15:39:22 2003
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Wed, 29 Oct 2003 10:39:22 -0500
Subject: some little cleanup
Message-ID: <5146c91d856c7711a577ae6c171317373f9fdbb0@Orthosoft.ca>

hi there,

attached is a patch that removes some obsolete references
to the 'property' xml element that once was used in xml
output. Some recent change to the xml format seems to
have got rid of 'property'...

On an unrelated note: we still see a 'qmtest run' execution
being blocked on windows when running in 'optimized' mode,
i.e. subprocesses aren't being killed as they should.
Is that a known issue ?

Thanks,
		Stefan
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20031029/e4e7fecc/attachment.ksh>

