[From nobody Thu Mar  8 00:05:32 2012
Return-path: &lt;qmtest-return-375-ghost=cs.msu.su@codesourcery.com&gt;
Envelope-to: ghost@zigzag.lvk.cs.msu.su
Delivery-date: Thu, 17 Jul 2003 14:39:02 +0400
Received: from imap.cmc.msu.ru ([212.192.248.39] helo=imap.cs.msu.su)
	by zigzag.lvk.cs.msu.su with esmtp (Exim 3.36 #1 (Debian))
	id 19d6AA-0004pU-00
	for &lt;ghost@zigzag.lvk.cs.msu.su&gt;; Thu, 17 Jul 2003 14:39:02 +0400
Received: from mail.codesourcery.com (voldemort.codesourcery.com
	[65.73.237.138])
	by imap.cs.msu.su (8.12.6p2/8.12.6) with ESMTP id h6HAcrZq013714
	for &lt;ghost@cs.msu.su&gt;; Thu, 17 Jul 2003 14:38:55 +0400 (MSD)
	(envelope-from qmtest-return-375-ghost=cs.msu.su@codesourcery.com)
Received: (qmail 5922 invoked by alias); 17 Jul 2003 10:37:27 -0000
Mailing-List: contact qmtest-help@codesourcery.com; run by ezmlm
Precedence: bulk
X-No-Archive: yes
List-Post: &lt;mailto:qmtest@codesourcery.com&gt;
List-Help: &lt;mailto:qmtest-help@codesourcery.com&gt;
List-Unsubscribe: &lt;mailto:qmtest-unsubscribe@codesourcery.com&gt;
List-Subscribe: &lt;mailto:qmtest-subscribe@codesourcery.com&gt;
Delivered-To: mailing list qmtest@codesourcery.com
Received: (qmail 5914 invoked from network); 17 Jul 2003 10:37:27 -0000
From: Vladimir Prus &lt;ghost@cs.msu.su&gt;
To: qmtest@codesourcery.com
Date: Thu, 17 Jul 2003 14:38:51 +0400
User-Agent: KMail/1.5.2
MIME-Version: 1.0
Content-Type: Multipart/Mixed;
  boundary=&quot;Boundary-00=_7ynF/wpEGw/0Jew&quot;
Message-Id: &lt;200307171438.51686.ghost@cs.msu.su&gt;
Subject: [qmtest] [PATCH/2] &quot;reload extensions&quot; command
X-UID: 6073


--Boundary-00=_7ynF/wpEGw/0Jew
Content-Type: text/plain;
  charset=&quot;us-ascii&quot;
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Subject: 


Hello,
some time ago we've discussed &quot;realod extension&quot; command, which would reload 
all extension modules in QMTest, and will help in cases where I edit custom 
test class and don't want to restart entire QMTest GUI.

I think we've agreed such command will be usefully, so here's a patch. It's 
not 100% complete, because:

- it does not document the new command
- I could have missed something

I'd appreciate feedback on this patch, and if it's considered OK, I'll tweak 
documentation, too.

Changelog:
* qm/test/base.py
   (__loaded_extensions): New variable.
   (get_extension_class_from_directory): Update __loaded_extensions
   (reload_extension_module): New function.

* qm/test/share/dtml/navigation-bar.dtml
  (reload_extensions): New function

* qm/test/web/web.py
   (QMTestPage.__init__): Add &quot;Reload extension&quot; item to the &quot;File&quot; menu.
   (QMTestServer.__init__): Register &quot;reload-extensions&quot; script.
   (QMTestServer.HandleReloadExtensions): New method.

Patch attached.

TIA,
Volodya




--Boundary-00=_7ynF/wpEGw/0Jew
Content-Type: text/x-diff;
  charset=&quot;us-ascii&quot;;
  name=&quot;reload_extensions.diff&quot;
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename=&quot;reload_extensions.diff&quot;

Index: qm/test/base.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/base.py,v
retrieving revision 1.87
diff -u -r1.87 base.py
--- qm/test/base.py	3 Jul 2003 19:32:04 -0000	1.87
+++ qm/test/base.py	17 Jul 2003 10:28:33 -0000
@@ -55,6 +55,9 @@
 Keys are DTD types (&quot;resource&quot;, &quot;result&quot;, etc).  Values are the
 corresponding DTD public identifiers.&quot;&quot;&quot;
 
+__loaded_extension_modules = []
+&quot;&quot;&quot;Lists all loaded extensions modules.&quot;&quot;&quot;
+
 ########################################################################
 # Exceptions
 ########################################################################
@@ -224,6 +227,7 @@
     
     global __class_caches
     global __extension_bases
+    global __loaded_extension_modules
     
     # If this class is already in the cache, we can just return it.
     cache = __class_caches[kind]
@@ -234,6 +238,8 @@
     try:
         klass = qm.common.load_class(class_name, [directory],
                                      path + sys.path)
+        if klass.__module__ not in __loaded_extension_modules:            
+            __loaded_extension_modules.append(sys.modules.get(klass.__module__))
     except:
         raise CouldNotLoadExtensionError(class_name, sys.exc_info())
 
@@ -298,6 +304,32 @@
     return get_extension_class_from_directory(class_name, kind,
                                               directory, directories)
 
+
+def reload_extension_modules():
+    &quot;&quot;&quot;Reloads all extension modules.&quot;&quot;&quot;
+
+    global __loaded_extension_modules
+    for i in __loaded_extension_modules:
+        # We can't simply call reaload. The problem is then when
+        # qm.common loads a module, it temporary changes sys.path
+        # to include the directory of imported module.
+        # Here, that directory is not present in sys.path and reload
+        # will fail. 
+        old_python_path = sys.path[:]
+        sys.path = [os.path.dirname(i.__file__)] + sys.path
+        try:
+            reload(i)
+        finally:
+            sys.path = old_python_path
+
+    # Clear the caches of loaded extensions. If we don't do this
+    # old class definitions stored there will still be used, despite
+    # the fact the modules were reloaded.
+    global __class_caches
+    for kind in extension_kinds:
+        __class_caches[kind].clear()
+
+    
 
 def get_test_class(class_name, database):
     &quot;&quot;&quot;Return the test class named 'class_name'.
Index: qm/test/share/dtml/navigation-bar.dtml
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/share/dtml/navigation-bar.dtml,v
retrieving revision 1.6
diff -u -r1.6 navigation-bar.dtml
--- qm/test/share/dtml/navigation-bar.dtml	25 Feb 2003 00:21:09 -0000	1.6
+++ qm/test/share/dtml/navigation-bar.dtml	17 Jul 2003 10:28:33 -0000
@@ -136,6 +136,13 @@
                &quot;dependent,height=200,width=640&quot;);
 }
 
+function reload_extensions()
+{
+   window.open(&quot;reload-extensions&quot;, &quot;reloade_extensions&quot;,
+                  &quot;dependent,height=200,width=640&quot;);
+}		  
+   
+
 &lt;dtml-in expr=&quot;['file_menu', 'edit_menu', 'view_menu', 'run_menu', 
                 'help_menu']&quot;&gt;
  document.getElementById(&quot;&lt;dtml-var sequence-item&gt;&quot;).onmouseout = hide_menu;
Index: qm/test/web/web.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/web/web.py,v
retrieving revision 1.73
diff -u -r1.73 web.py
--- qm/test/web/web.py	15 Jul 2003 18:06:52 -0000	1.73
+++ qm/test/web/web.py	17 Jul 2003 10:28:33 -0000
@@ -112,6 +112,7 @@
              qm.test.cmdline.QMTest.expectations_file_name),
             ('Load Context', &quot;javascript:load_context();&quot;),
             ('Save Context', qm.test.cmdline.QMTest.context_file_name),
+            ('Reload extensions', 'javascript:reload_extensions();'),
             ('Exit', 'shutdown')
             ])
         self.edit_menu_items = [
@@ -1561,6 +1562,7 @@
               self.HandleSaveExpectations ),
             ( qm.test.cmdline.QMTest.results_file_name,
               self.HandleSaveResults ),
+            ( &quot;reload-extensions&quot;, self.HandleReloadExtensions ),
             ]:
             self.RegisterScript(script_base + name, function)
         self.RegisterPathTranslation(
@@ -2396,6 +2398,18 @@
         # Redirect to a page that displays the newly-edited item.
         raise qm.web.HttpRedirect, \
               qm.web.WebRequest(&quot;show-suite&quot;, base=request, id=suite_id)
+
+
+
+    def HandleReloadExtensions(self, request):
+        &quot;&quot;&quot;Handle a request to save results to a file.
+
+        'request' -- The 'WebRequest' that caused the event.&quot;&quot;&quot;
+        qm.test.base.reload_extension_modules()
+        return qm.web.make_popup_page(&quot;&lt;p&gt;All extensions reloaded&quot;,
+                                      [('OK', None)],
+                                      &quot;Extensions reloaded&quot;)        
+
 
 
     def MakeNewTest(self, test_class_name, test_id):

--Boundary-00=_7ynF/wpEGw/0Jew--

]