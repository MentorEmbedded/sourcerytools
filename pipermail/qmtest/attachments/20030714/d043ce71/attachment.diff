Index: qm/attachment.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/attachment.py,v
retrieving revision 1.18
diff -u -r1.18 attachment.py
--- qm/attachment.py	3 Jul 2003 16:52:40 -0000	1.18
+++ qm/attachment.py	14 Jul 2003 12:21:59 -0000
@@ -258,6 +258,17 @@
 
     The locations are the names of files in the file system."""
 
+    def __init__(self, root):
+        """Create a new 'FileAttachmentStore'.
+
+        'root' -- filesystem path which specifies the location of
+        this instance. All locations will be treated relatively to
+           'root'.
+        """
+        self.root = root
+        print "root is", self.root
+        
+
     def GetData(self, location):
 
         # Open the file.
@@ -272,7 +283,10 @@
 
     def GetDataFile(self, location):
 
-        return location
+        if not os.path.isabs(location):
+            return os.path.join(self.root, location)
+        else:
+            return location
 
 
     def GetSize(self, location):
@@ -320,12 +334,13 @@
 
         The store is initially empty."""
 
-        # Initialize the base class.
-        super(TemporaryAttachmentStore, self).__init__()
         # Construct a temporary directory in which to store attachment
         # data.
         self.__tmpdir = temporary_directory.TemporaryDirectory()
         self.__path = self.__tmpdir.GetPath()
+
+        # Initialize the base class.
+        super(TemporaryAttachmentStore, self).__init__(self.__path)
 
 
     def GetDataFile(self, location):
Index: qm/test/classes/xml_database.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/classes/xml_database.py,v
retrieving revision 1.13
diff -u -r1.13 xml_database.py
--- qm/test/classes/xml_database.py	3 Jul 2003 16:52:40 -0000	1.13
+++ qm/test/classes/xml_database.py	14 Jul 2003 12:21:59 -0000
@@ -53,7 +53,7 @@
         # Initialize base classes.
         ExtensionDatabase.__init__(self, path, arguments)
         # Create an AttachmentStore for this database.
-        self.__store = qm.attachment.FileAttachmentStore()
+        self.__store = qm.attachment.FileAttachmentStore(path)
 
 
     def _GetTestFromPath(self, test_id, test_path):
