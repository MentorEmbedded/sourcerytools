From aj.guillon at gmail.com  Mon Dec 21 20:11:47 2009
From: aj.guillon at gmail.com (Adrien Guillon)
Date: Mon, 21 Dec 2009 15:11:47 -0500
Subject: QMTest Advice - Dependencies
Message-ID: <9870a2060912211211k3227e5b3y5f55654becb44688@mail.gmail.com>

Hello all,

I've used qmtest for some simple things, and now I want to do more
with it.  I am using a CompilationTestDatabase, and my
QMTest/configuration file looks like this:

<?xml version="1.0" ?><!DOCTYPE extension  PUBLIC
'-//QM/2.6/Extension//EN'
'http://www.codesourcery.com/qm/dtds/2.6/-//qm/2.6/extension//en.dtd'><extension
class="compilation_test_database.CompilationTestDatabase"
kind="database"><argument
name="srcdir"><text>tests/unit_tests/</text></argument></extension>

I also have tests/unit_tests/test_context:

CompilerTable.languages=cplusplus
CompilerTable.cplusplus_kind=GCC
CompilerTable.cplusplus_path=g++
CompilerTable.cplusplus_options=-O2 -I../../../include

My project normally generates an executable as the final result,
however for testing I can generate a shared library and link tests to
it, so that I can do my unit testing.  However there are a couple of
modules which have different behaviours based upon some preprocessor
defines.  In particular, some debugging functions.  These functions
have different behaviours if extra debugging has been enabled,
otherwise they should do nothing.  For instance, I might define
EXTRA_DEBUGGING or GATHER_STATISTICS to enable special code.  I want
to test these types of functions to make sure they work as part of my
normal test suite.

These functions are only enabled with the appropriate preprocessor
macro, and are cleanly separable from the whole project.  So for that
reason, I'd like to test my C++ test case debugging_test_1.cpp with
the #define EXTRA_DEBUGGING and since it's cleanly separable from the
rest of the project, I only want to link it with extra_debugging.cpp
(which was compiled with the same flags).  This comes down to the
question of doing a compile and run test which has different
dependencies than everything else.

How can I do this with QMTest?

Thanks!

AJ Guillon


From seefeld at sympatico.ca  Tue Dec 22 04:16:06 2009
From: seefeld at sympatico.ca (Stefan Seefeld)
Date: Mon, 21 Dec 2009 23:16:06 -0500
Subject: [qmtest] QMTest Advice - Dependencies
In-Reply-To: <9870a2060912211211k3227e5b3y5f55654becb44688@mail.gmail.com>
References: <9870a2060912211211k3227e5b3y5f55654becb44688@mail.gmail.com>
Message-ID: <4B304806.8070609@sympatico.ca>

On 12/21/2009 03:11 PM, Adrien Guillon wrote:

[...]

> These functions are only enabled with the appropriate preprocessor
> macro, and are cleanly separable from the whole project.  So for that
> reason, I'd like to test my C++ test case debugging_test_1.cpp with
> the #define EXTRA_DEBUGGING and since it's cleanly separable from the
> rest of the project, I only want to link it with extra_debugging.cpp
> (which was compiled with the same flags).  This comes down to the
> question of doing a compile and run test which has different
> dependencies than everything else.
>    

I'm not quite sure whether I understand the question, as you seem to 
have all the answers that you need:

You can specify the compilation command using the 
CompilerTable.cplusplus_options and CompilerTable.cplusplus_ldflags 
variables, and add whatever macro definition and extra libraries you 
need there.

You may do that even on a per-directory basis, i.e. each subdirectory in 
your test suite may have its own set of variables, overriding the global 
CompilerTable variables.

     Stefan

-- 

       ...ich hab' noch einen Koffer in Berlin...



