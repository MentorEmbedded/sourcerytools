From mark at codesourcery.com  Fri Nov  4 20:39:41 2005
From: mark at codesourcery.com (Mark Mitchell)
Date: Fri, 4 Nov 2005 12:39:41 -0800
Subject: PATCH: Tweak DejaGNU Reader
Message-ID: <200511042039.jA4Kdfho020058@sethra.codesourcery.com>


This patch makes a few tweaks to the DejaGNU reader.  

* DejaGNU logs sometimes contain "ERROR" markers.  These aren't
  test results, in that they're not associated with particular tests.
  So, we don't try to create test results for them.

* Repeating the same cause of failure (in the combined mode) is just
  annoying. 

* In the non-combined mode, we don't really have a good way of finding
  out causes of failure; just leave them blank.

Committed.

--
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com

2005-11-04  Mark Mitchell  <mark at codesourcery.com>

	* qm/test/classes/dejagnu_stream.py (DejaGNUReader.__NextOutcome):
	Ignore ERROR results.
	(DejaGNUReader.__UpdateResult): Don't repeat causes.  Don't use
	causes at all for non-combined results.

Index: qm/test/classes/dejagnu_stream.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/classes/dejagnu_stream.py,v
retrieving revision 1.7
diff -c -5 -p -r1.7 dejagnu_stream.py
*** qm/test/classes/dejagnu_stream.py	26 Oct 2005 00:20:12 -0000	1.7
--- qm/test/classes/dejagnu_stream.py	4 Nov 2005 20:33:57 -0000
*************** class DejaGNUReader(FileResultReader):
*** 259,270 ****
              # Each test result is printed on a line by itself,
              # beginning with the DejaGNU outcome.  For example:
              #   PASS: g++.dg/compat/eh/template1 cp_compat_y_tst.o compile
              dejagnu_outcome = None
              for o in DejaGNUTest.dejagnu_outcomes:
!                 # Ignore WARNING; those are not really test results.
!                 if o != DejaGNUTest.WARNING and line.startswith(o):
                      o_len = len(o)
                      if line[o_len:o_len + 2] == ": ":
                          dejagnu_outcome = o
                      break
              if dejagnu_outcome:
--- 259,273 ----
              # Each test result is printed on a line by itself,
              # beginning with the DejaGNU outcome.  For example:
              #   PASS: g++.dg/compat/eh/template1 cp_compat_y_tst.o compile
              dejagnu_outcome = None
              for o in DejaGNUTest.dejagnu_outcomes:
!                 # Ignore WARNING and ERROR; those are not really test
!                 # results. 
!                 if (o not in (DejaGNUTest.WARNING,
!                               DejaGNUTest.ERROR)
!                     and line.startswith(o)):
                      o_len = len(o)
                      if line[o_len:o_len + 2] == ": ":
                          dejagnu_outcome = o
                      break
              if dejagnu_outcome:
*************** class DejaGNUReader(FileResultReader):
*** 281,298 ****
              test_id = line[len(dejagnu_outcome) + 2:].strip()
          # Extract the cause of faiulre.
          cause = None
          if "execution test" in line:
              cause = "Compiled program behaved incorrectly."
!         else:
              match = self.__cause_regexp.search(line)
              if match:
                  cause = match.group("cause").capitalize()
                  if cause and cause[-1] != ".":
                      cause += "."
!             elif dejagnu_outcome == DejaGNUTest.UNSUPPORTED:
!                 cause = "Test is not applicable on this platform."
          return test_id, dejagnu_outcome, cause
          
      
      def __UpdateResult(self, result, dejagnu_outcome, cause):
          """Update 'result' as indicated.
--- 284,303 ----
              test_id = line[len(dejagnu_outcome) + 2:].strip()
          # Extract the cause of faiulre.
          cause = None
          if "execution test" in line:
              cause = "Compiled program behaved incorrectly."
!         elif dejagnu_outcome == DejaGNUTest.UNSUPPORTED:
!             cause = "Test is not applicable on this platform."
!         elif self.__UseCombinedMode():
              match = self.__cause_regexp.search(line)
              if match:
                  cause = match.group("cause").capitalize()
                  if cause and cause[-1] != ".":
                      cause += "."
!         else:
!             cause = ""
          return test_id, dejagnu_outcome, cause
          
      
      def __UpdateResult(self, result, dejagnu_outcome, cause):
          """Update 'result' as indicated.
*************** class DejaGNUReader(FileResultReader):
*** 334,347 ****
                and result.GetOutcome() not in (Result.ERROR,
                                                Result.UNTESTED)):
              result.SetOutcome(Result.FAIL)
          if qmtest_outcome != Result.PASS and cause:
              old_cause = result.GetCause()
!             if old_cause:
!                 old_cause += "  "
!             old_cause += cgi.escape(cause)
!             result.SetCause(old_cause)
  
  
      def __UseCombinedMode(self):
          """Returns true in the combined mode.
  
--- 339,356 ----
                and result.GetOutcome() not in (Result.ERROR,
                                                Result.UNTESTED)):
              result.SetOutcome(Result.FAIL)
          if qmtest_outcome != Result.PASS and cause:
              old_cause = result.GetCause()
!             if old_cause and cause in old_cause:
!                 # Don't repeat the same cause multiple times.
!                 pass
!             else:
!                 if old_cause:
!                     old_cause += "  "
!                 old_cause += cgi.escape(cause)
!                 result.SetCause(old_cause)
  
  
      def __UseCombinedMode(self):
          """Returns true in the combined mode.
  


From stefan at codesourcery.com  Fri Nov  4 22:13:06 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Fri, 04 Nov 2005 17:13:06 -0500
Subject: Enhanced 'qmtest report' command and report file format.
Message-ID: <436BDCF2.5040904@codesourcery.com>

The attached patch enhances the 'qmtest report' command to generate
one of two possible output formats.
The (new) default format reflects the database structure, i.e. results
are listed in their corresponding subdirectory. This command requires
a test database to query the database structure from.
The alternative is a flat format, obtained by 'qmtest report --flat...',
which is similar to the old format in that all results are reported with
their absolute ids, with no subdirectory structure.

The xslt stylesheet for html-report generation which is provided for
convenience reflects these changes and will generate either a flat
report with a single test matrix, or a directory hierarchy that reflects
the test database structure, depending on the content of the report (xml) file.

Regards,
		Stefan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: report.patch
Type: text/x-patch
Size: 30020 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20051104/4c19bee2/attachment.bin>

From lucaskeli at fastmail.fm  Wed Nov  9 00:16:25 2005
From: lucaskeli at fastmail.fm (Kelly Lucas)
Date: Tue, 08 Nov 2005 16:16:25 -0800
Subject: Python C API version mismatch
Message-ID: <43713FD9.90103@fastmail.fm>

We have just upgraded Python at my company, and now QMTest will not run. 
I see the following error message:

/usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
Python C API version mismatch for module sigmask: This Python has API 
version 1012, module sigmask has version 1011.
  import qm.sigmask
Traceback (most recent call last):
  File "/usr/bin/qmtest", line 189, in ?
    exit_code = main()
  File "/usr/bin/qmtest", line 167, in main
    exit_code = command.Execute()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 675, 
in Execute
    return method()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 1329, 
in __ExecuteRun
    database = self.GetDatabase()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 681, 
in GetDatabase
    return database.get_database()
  File "/usr/lib/python2.2/site-packages/qm/test/database.py", line 
1095, in get_database
    __the_database = load_database(__the_db_path)
  File "/usr/lib/python2.2/site-packages/qm/test/database.py", line 
1050, in load_database
    document = qm.xmlutil.load_xml_file(config_path)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 55, in 
load_xml_file
    return load_xml(file)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 69, in 
load_xml
    document = xml.dom.minidom.parse(file)
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/minidom.py", line 
1914, in parse
    from xml.dom import expatbuilder
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/expatbuilder.py", 
line 32, in ?
    from xml.parsers import expat
  File "/usr/lib/python2.2/site-packages/_xmlplus/parsers/expat.py", 
line 4, in ?
    from pyexpat import *
ImportError: 
/usr/lib/python2.2/site-packages/_xmlplus/parsers/pyexpat.so: undefined 
symbol: PyUnicodeUCS2_DecodeUTF8
/usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
Python C API version mismatch for module sigmask: This Python has API 
version 1012, module sigmask has version 1011.
  import qm.sigmask
Traceback (most recent call last):
  File "/usr/bin/qmtest", line 189, in ?
    exit_code = main()
  File "/usr/bin/qmtest", line 167, in main
    exit_code = command.Execute()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 675, 
in Execute
    return method()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 1323, 
in __ExecuteReport
    report_generator.GenerateReport(self.__arguments)
  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 78, in 
GenerateReport
    self._WriteTestIds(input)
  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 141, 
in _WriteTestIds
    for r, e in self._CreateResultStreams(input):
  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 97, in 
_CreateResultStreams
    result = base.load_results(open(result_file, "rb"), self.database)
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 353, in 
load_results
    database)
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 275, in 
get_extension_class
    if class_name in get_extension_class_names_in_directory(d)[kind]:
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 146, in 
get_extension_class_names_in_directory
    document = qm.xmlutil.load_xml_file(file)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 55, in 
load_xml_file
    return load_xml(file)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 69, in 
load_xml
    document = xml.dom.minidom.parse(file)
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/minidom.py", line 
1914, in parse
    from xml.dom import expatbuilder
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/expatbuilder.py", 
line 32, in ?
    from xml.parsers import expat
  File "/usr/lib/python2.2/site-packages/_xmlplus/parsers/expat.py", 
line 4, in ?
    from pyexpat import *
ImportError: 
/usr/lib/python2.2/site-packages/_xmlplus/parsers/pyexpat.so: undefined 
symbol: PyUnicodeUCS2_DecodeUTF8

Is there a workaround for this, or do I need to downgrade my version of 
the Python C API from 1012 to 1011?

kdl

-- 
Kelly D. Lucas
lucaskeli at fastmail.fm



From stefan at codesourcery.com  Wed Nov  9 00:35:06 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 08 Nov 2005 19:35:06 -0500
Subject: [qmtest] Python C API version mismatch
In-Reply-To: <43713FD9.90103@fastmail.fm>
References: <43713FD9.90103@fastmail.fm>
Message-ID: <4371443A.6060107@codesourcery.com>

Kelly Lucas wrote:
> We have just upgraded Python at my company, and now QMTest will not run. 
> I see the following error message:
> 
> /usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
> Python C API version mismatch for module sigmask: This Python has API 
> version 1012, module sigmask has version 1011.
>  import qm.sigmask
> Traceback (most recent call last):

[...]

The only bits in the QMTest (binary) package that are specific to a particular
python version are from the qm.sigmask module, which is written in C.

The '/usr/lib/python2.2' path above indicates that QMTest was installed
with python 2.2. If you have upgraded to 2.3 or 2.4 you shouldn't see
this path, unless you explicitely set it with the PYTHONPATH variable
(which would be a bad idea !).

I suggest you reinstall QMTest from a source package, using your new
python version. Download the QMTest source package, and run
'python setup.py install' from its toplevel directory, where 'python'
refers to your newly installed python executable.

Regards,
		Stefan


From pankajj at qualcomm.com  Wed Nov  9 00:38:13 2005
From: pankajj at qualcomm.com (Jain, Pankaj)
Date: Tue, 8 Nov 2005 16:38:13 -0800
Subject: [qmtest] Python C API version mismatch
Message-ID: <068EDF17B38A284786700278BE9EEC2533A8EA@NAEX05.na.qualcomm.com>

The best way it to update your qmtest. It wont harm you and you don't
have to change any of your scripts. Except you QMTEST CLASS path will
change. 


-----Original Message-----
From: Kelly Lucas [mailto:lucaskeli at fastmail.fm] 
Sent: Tuesday, November 08, 2005 4:16 PM
To: qmtest at codesourcery.com
Subject: [qmtest] Python C API version mismatch

We have just upgraded Python at my company, and now QMTest will not run.

I see the following error message:

/usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
Python C API version mismatch for module sigmask: This Python has API 
version 1012, module sigmask has version 1011.
  import qm.sigmask
Traceback (most recent call last):
  File "/usr/bin/qmtest", line 189, in ?
    exit_code = main()
  File "/usr/bin/qmtest", line 167, in main
    exit_code = command.Execute()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 675, 
in Execute
    return method()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 1329,

in __ExecuteRun
    database = self.GetDatabase()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 681, 
in GetDatabase
    return database.get_database()
  File "/usr/lib/python2.2/site-packages/qm/test/database.py", line 
1095, in get_database
    __the_database = load_database(__the_db_path)
  File "/usr/lib/python2.2/site-packages/qm/test/database.py", line 
1050, in load_database
    document = qm.xmlutil.load_xml_file(config_path)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 55, in 
load_xml_file
    return load_xml(file)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 69, in 
load_xml
    document = xml.dom.minidom.parse(file)
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/minidom.py", line 
1914, in parse
    from xml.dom import expatbuilder
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/expatbuilder.py", 
line 32, in ?
    from xml.parsers import expat
  File "/usr/lib/python2.2/site-packages/_xmlplus/parsers/expat.py", 
line 4, in ?
    from pyexpat import *
ImportError: 
/usr/lib/python2.2/site-packages/_xmlplus/parsers/pyexpat.so: undefined 
symbol: PyUnicodeUCS2_DecodeUTF8
/usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
Python C API version mismatch for module sigmask: This Python has API 
version 1012, module sigmask has version 1011.
  import qm.sigmask
Traceback (most recent call last):
  File "/usr/bin/qmtest", line 189, in ?
    exit_code = main()
  File "/usr/bin/qmtest", line 167, in main
    exit_code = command.Execute()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 675, 
in Execute
    return method()
  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 1323,

in __ExecuteReport
    report_generator.GenerateReport(self.__arguments)
  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 78, in

GenerateReport
    self._WriteTestIds(input)
  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 141, 
in _WriteTestIds
    for r, e in self._CreateResultStreams(input):
  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 97, in

_CreateResultStreams
    result = base.load_results(open(result_file, "rb"), self.database)
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 353, in 
load_results
    database)
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 275, in 
get_extension_class
    if class_name in get_extension_class_names_in_directory(d)[kind]:
  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 146, in 
get_extension_class_names_in_directory
    document = qm.xmlutil.load_xml_file(file)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 55, in 
load_xml_file
    return load_xml(file)
  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 69, in 
load_xml
    document = xml.dom.minidom.parse(file)
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/minidom.py", line 
1914, in parse
    from xml.dom import expatbuilder
  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/expatbuilder.py", 
line 32, in ?
    from xml.parsers import expat
  File "/usr/lib/python2.2/site-packages/_xmlplus/parsers/expat.py", 
line 4, in ?
    from pyexpat import *
ImportError: 
/usr/lib/python2.2/site-packages/_xmlplus/parsers/pyexpat.so: undefined 
symbol: PyUnicodeUCS2_DecodeUTF8

Is there a workaround for this, or do I need to downgrade my version of 
the Python C API from 1012 to 1011?

kdl

-- 
Kelly D. Lucas
lucaskeli at fastmail.fm



From lucaskeli at fastmail.fm  Wed Nov  9 01:07:55 2005
From: lucaskeli at fastmail.fm (Kelly Lucas)
Date: Tue, 08 Nov 2005 17:07:55 -0800
Subject: [qmtest] Python C API version mismatch
In-Reply-To: <068EDF17B38A284786700278BE9EEC2533A8EA@NAEX05.na.qualcomm.com>
References: <068EDF17B38A284786700278BE9EEC2533A8EA@NAEX05.na.qualcomm.com>
Message-ID: <43714BEB.8030008@fastmail.fm>

Ah, I found the solution was to simply rebuild QMTest with the updated 
Python libs, and that solved the problem....

kdl

Jain, Pankaj wrote:

>The best way it to update your qmtest. It wont harm you and you don't
>have to change any of your scripts. Except you QMTEST CLASS path will
>change. 
>
>
>-----Original Message-----
>From: Kelly Lucas [mailto:lucaskeli at fastmail.fm] 
>Sent: Tuesday, November 08, 2005 4:16 PM
>To: qmtest at codesourcery.com
>Subject: [qmtest] Python C API version mismatch
>
>We have just upgraded Python at my company, and now QMTest will not run.
>
>I see the following error message:
>
>/usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
>Python C API version mismatch for module sigmask: This Python has API 
>version 1012, module sigmask has version 1011.
>  import qm.sigmask
>Traceback (most recent call last):
>  File "/usr/bin/qmtest", line 189, in ?
>    exit_code = main()
>  File "/usr/bin/qmtest", line 167, in main
>    exit_code = command.Execute()
>  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 675, 
>in Execute
>    return method()
>  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 1329,
>
>in __ExecuteRun
>    database = self.GetDatabase()
>  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 681, 
>in GetDatabase
>    return database.get_database()
>  File "/usr/lib/python2.2/site-packages/qm/test/database.py", line 
>1095, in get_database
>    __the_database = load_database(__the_db_path)
>  File "/usr/lib/python2.2/site-packages/qm/test/database.py", line 
>1050, in load_database
>    document = qm.xmlutil.load_xml_file(config_path)
>  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 55, in 
>load_xml_file
>    return load_xml(file)
>  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 69, in 
>load_xml
>    document = xml.dom.minidom.parse(file)
>  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/minidom.py", line 
>1914, in parse
>    from xml.dom import expatbuilder
>  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/expatbuilder.py", 
>line 32, in ?
>    from xml.parsers import expat
>  File "/usr/lib/python2.2/site-packages/_xmlplus/parsers/expat.py", 
>line 4, in ?
>    from pyexpat import *
>ImportError: 
>/usr/lib/python2.2/site-packages/_xmlplus/parsers/pyexpat.so: undefined 
>symbol: PyUnicodeUCS2_DecodeUTF8
>/usr/lib/python2.2/site-packages/qm/executable.py:41: RuntimeWarning: 
>Python C API version mismatch for module sigmask: This Python has API 
>version 1012, module sigmask has version 1011.
>  import qm.sigmask
>Traceback (most recent call last):
>  File "/usr/bin/qmtest", line 189, in ?
>    exit_code = main()
>  File "/usr/bin/qmtest", line 167, in main
>    exit_code = command.Execute()
>  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 675, 
>in Execute
>    return method()
>  File "/usr/lib/python2.2/site-packages/qm/test/cmdline.py", line 1323,
>
>in __ExecuteReport
>    report_generator.GenerateReport(self.__arguments)
>  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 78, in
>
>GenerateReport
>    self._WriteTestIds(input)
>  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 141, 
>in _WriteTestIds
>    for r, e in self._CreateResultStreams(input):
>  File "/usr/lib/python2.2/site-packages/qm/test/report.py", line 97, in
>
>_CreateResultStreams
>    result = base.load_results(open(result_file, "rb"), self.database)
>  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 353, in 
>load_results
>    database)
>  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 275, in 
>get_extension_class
>    if class_name in get_extension_class_names_in_directory(d)[kind]:
>  File "/usr/lib/python2.2/site-packages/qm/test/base.py", line 146, in 
>get_extension_class_names_in_directory
>    document = qm.xmlutil.load_xml_file(file)
>  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 55, in 
>load_xml_file
>    return load_xml(file)
>  File "/usr/lib/python2.2/site-packages/qm/xmlutil.py", line 69, in 
>load_xml
>    document = xml.dom.minidom.parse(file)
>  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/minidom.py", line 
>1914, in parse
>    from xml.dom import expatbuilder
>  File "/usr/lib/python2.2/site-packages/_xmlplus/dom/expatbuilder.py", 
>line 32, in ?
>    from xml.parsers import expat
>  File "/usr/lib/python2.2/site-packages/_xmlplus/parsers/expat.py", 
>line 4, in ?
>    from pyexpat import *
>ImportError: 
>/usr/lib/python2.2/site-packages/_xmlplus/parsers/pyexpat.so: undefined 
>symbol: PyUnicodeUCS2_DecodeUTF8
>
>Is there a workaround for this, or do I need to downgrade my version of 
>the Python C API from 1012 to 1011?
>
>kdl
>
>  
>


-- 
Kelly D. Lucas
lucaskeli at fastmail.fm



From stefan at codesourcery.com  Wed Nov 16 19:01:21 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Wed, 16 Nov 2005 14:01:21 -0500
Subject: PATCH: Let DejaGNUTest use the host extension for cross-testing
Message-ID: <437B8201.4020708@codesourcery.com>

Some months ago Mark Mitchell extended QMTest by adding
a new 'host' abstraction for remote command execution.

This patch makes the DejaGNUTest aware of it by running
the compiled executable on the target platform. The default
as set by the CompilerTable resource is 'LocalHost', but
that can be set to a different host type using the context
file.

Regards,
		Stefan
-------------- next part --------------
A non-text attachment was scrubbed...
Name: dg.patch
Type: text/x-patch
Size: 2936 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20051116/33f9fd5b/attachment.bin>

From mark at codesourcery.com  Wed Nov 16 20:36:08 2005
From: mark at codesourcery.com (Mark Mitchell)
Date: Wed, 16 Nov 2005 12:36:08 -0800
Subject: [qmtest] PATCH: Let DejaGNUTest use the host extension for cross-testing
In-Reply-To: <437B8201.4020708@codesourcery.com>
References: <437B8201.4020708@codesourcery.com>
Message-ID: <437B9838.7000409@codesourcery.com>

Stefan Seefeld wrote:

> This patch makes the DejaGNUTest aware of it by running
> the compiled executable on the target platform. The default
> as set by the CompilerTable resource is 'LocalHost', but
> that can be set to a different host type using the context
> file.

Looks good, thanks!

-- 
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com
(916) 791-8304


From mark at codesourcery.com  Thu Nov 17 23:56:20 2005
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 17 Nov 2005 15:56:20 -0800
Subject: PATCH: Add KFAIL, KPASS support to DejaGNU emulation
Message-ID: <200511172356.jAHNuKh6021832@sethra.codesourcery.com>


This patch adds support for KAIL and KPASS to QMTest's DejaGNU
emulation; these DejaGNU outcomes are essentially identical to XFAIL
and XPASS.

Committed.

--
Mark Mitchell
CodeSourcery, LLC
mark at codesourcery.com

2005-11-17  Mark Mitchell  <mark at codesourcery.com>

	* qm/test/classes/dejagnu_stream.py
	(DejaGNUStream.__summary_outcomes): Add KFAIL, KPASS.
	(DejaGNUStream.__outcome_descs): Likewise.
	(DejaGNUStream.__expected_outcomes): Likewise.
	(DejaGNUReader.__UpdateResult): Likewise.
	* qm/test/classes/dejagnu_test.py (DejaGNUTest.KFAIL): New
	variable.
	(DejaGNUTest.KPASS): Likewise.
	(DejaGNUTest.outcome_map): Add KFAIL, KPASS.

Index: qm/test/classes/dejagnu_stream.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/classes/dejagnu_stream.py,v
retrieving revision 1.8
diff -c -5 -p -r1.8 dejagnu_stream.py
*** qm/test/classes/dejagnu_stream.py	4 Nov 2005 20:37:34 -0000	1.8
--- qm/test/classes/dejagnu_stream.py	17 Nov 2005 23:44:10 -0000
*************** class DejaGNUStream(FileResultStream):
*** 45,54 ****
--- 45,56 ----
          ]
  
      __summary_outcomes = [
          DejaGNUTest.PASS,
          DejaGNUTest.FAIL,
+         DejaGNUTest.KFAIL,
+         DejaGNUTest.KPASS,
          DejaGNUTest.XPASS,
          DejaGNUTest.XFAIL,
          DejaGNUTest.UNRESOLVED,
          DejaGNUTest.UNTESTED,
          DejaGNUTest.UNSUPPORTED
*************** class DejaGNUStream(FileResultStream):
*** 56,65 ****
--- 58,69 ----
      """The outcomes for which summary output should be produced."""
      
      __outcome_descs = {
          DejaGNUTest.PASS: "expected passes",
          DejaGNUTest.FAIL: "unexpected failures",
+         DejaGNUTest.KPASS: "unexpected successes",
+         DejaGNUTest.KFAIL: "expected failures",
          DejaGNUTest.XPASS: "unexpected successes",
          DejaGNUTest.XFAIL: "expected failures",
          DejaGNUTest.UNRESOLVED: "unresolved testcases",
          DejaGNUTest.UNTESTED: "untested testcases",
          DejaGNUTest.UNSUPPORTED: "unsupported tests",
*************** class DejaGNUStream(FileResultStream):
*** 69,78 ****
--- 73,83 ----
      See 'init_testcounts' in the DejaGNU distribution for the code
      emulated by this table."""
  
      __expected_outcomes = (
          DejaGNUTest.PASS,
+         DejaGNUTest.KFAIL,
          DejaGNUTest.XFAIL,
          DejaGNUTest.UNRESOLVED,
          DejaGNUTest.UNSUPPORTED,
          DejaGNUTest.UNTESTED
          )
*************** class DejaGNUReader(FileResultReader):
*** 317,327 ****
          return, it will never have an outcome of 'Result.PASS' upon
          return."""
                         
          # Translate the DejaGNU outcome into a QMTest outcome.
          if self.__GenerateExpectations():
!             if dejagnu_outcome in (DejaGNUTest.XFAIL,
                                     DejaGNUTest.XPASS):
                  qmtest_outcome = Result.FAIL
              elif dejagnu_outcome == DejaGNUTest.UNSUPPORTED:
                  qmtest_outcome = Result.UNTESTED
              else:
--- 322,334 ----
          return, it will never have an outcome of 'Result.PASS' upon
          return."""
                         
          # Translate the DejaGNU outcome into a QMTest outcome.
          if self.__GenerateExpectations():
!             if dejagnu_outcome in (DejaGNUTest.KFAIL,
!                                    DejaGNUTest.KPASS,
!                                    DejaGNUTest.XFAIL,
                                     DejaGNUTest.XPASS):
                  qmtest_outcome = Result.FAIL
              elif dejagnu_outcome == DejaGNUTest.UNSUPPORTED:
                  qmtest_outcome = Result.UNTESTED
              else:
Index: qm/test/classes/dejagnu_test.py
===================================================================
RCS file: /home/qm/Repository/qm/qm/test/classes/dejagnu_test.py,v
retrieving revision 1.6
diff -c -5 -p -r1.6 dejagnu_test.py
*** qm/test/classes/dejagnu_test.py	7 Sep 2005 00:22:17 -0000	1.6
--- qm/test/classes/dejagnu_test.py	17 Nov 2005 23:44:10 -0000
*************** class DejaGNUTest(Test, DejaGNUBase):
*** 42,51 ****
--- 42,53 ----
              description="""The source file."""),
          ]
  
      PASS = "PASS"
      FAIL = "FAIL"
+     KFAIL = "KFAIL"
+     KPASS = "KPASS"
      XPASS = "XPASS"
      XFAIL = "XFAIL"
      WARNING = "WARNING"
      ERROR = "ERROR"
      UNTESTED = "UNTESTED"
*************** class DejaGNUTest(Test, DejaGNUBase):
*** 59,68 ****
--- 61,72 ----
      """The DejaGNU test outcomes."""
      
      outcome_map = {
          PASS : Result.PASS,
          FAIL : Result.FAIL,
+         KFAIL : Result.FAIL,
+         KPASS : Result.PASS,
          XPASS : Result.PASS,
          XFAIL : Result.FAIL,
          WARNING : Result.PASS,
          ERROR : Result.ERROR,
          UNTESTED : Result.UNTESTED,


From viral at umail.ucsb.edu  Thu Nov 24 22:06:17 2005
From: viral at umail.ucsb.edu (Viral Shah)
Date: Thu, 24 Nov 2005 14:06:17 -0800
Subject: Using qmtest with loadleveler/pbs etc.
Message-ID: <56841213-D625-440F-92AA-99B790456819@umail.ucsb.edu>

Hello,

I am new to qmtest, and I am trying to use it for our parallel  
programming
class at UC Santa Barbara: http://www.cs.ucsb.edu/~cs240a/homepage.html

What I need to do is run parallel programs that students write for  
assignments
and provide them a qmtest harness for testing. However, these are  
parallel programs,
which will quite likely be run using PBS or loadleveler (depending on  
the machine
being used).

So, the standard output gets written to a file when the job gets  
completed.
Can qmtest integrate with these batch schedulers now ? If not, how  
would I go about
integrating them into qmtest ?

Any information is appreciated.

Thanks,

-viral





From stefan at codesourcery.com  Fri Nov 25 14:11:15 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Fri, 25 Nov 2005 09:11:15 -0500
Subject: [qmtest] Using qmtest with loadleveler/pbs etc.
In-Reply-To: <56841213-D625-440F-92AA-99B790456819@umail.ucsb.edu>
References: <56841213-D625-440F-92AA-99B790456819@umail.ucsb.edu>
Message-ID: <43871B83.8000307@codesourcery.com>

Viral Shah wrote:

> What I need to do is run parallel programs that students write for  
> assignments
> and provide them a qmtest harness for testing. However, these are  
> parallel programs,
> which will quite likely be run using PBS or loadleveler (depending on  
> the machine
> being used).

Fine.

> So, the standard output gets written to a file when the job gets  
> completed.
> Can qmtest integrate with these batch schedulers now ? If not, how  
> would I go about
> integrating them into qmtest ?

I can't see any reason this should not work. You will need to write
your own 'test class', though:

http://www.codesourcery.com/public/qmtest/qm-2.3/manual.html/sec-writing-test-classes.html

The 'Run' method would execute whatever mechanism you use to run your
applications, and then read and validate the output from the generated
output file.

Further, if there are any preparatory steps to be performed once for
multiple steps (such as setting up MPI demons etc.) you may consider
doing this in a 'Resource' class:

http://www.codesourcery.com/public/qmtest/qm-2.3/manual.html/sec-qmtest-concepts.html#sec-resources

and then make your tests use that. Let me know if you need more help !

Regards,
		Stefan


From aike1 at cox.net  Tue Nov 29 16:46:53 2005
From: aike1 at cox.net (Aytekin Gel)
Date: Tue, 29 Nov 2005 09:46:53 -0700
Subject: XML Parsing Error: not well-formed
Message-ID: <438C85FD.90703@cox.net>

Hello QMTest Developers and Users,

We are in the process of evaluating QMTest and building a prototype 
regression testing framework with QMTest for our CFD code, MFIX 
(www.mfix.org) which is being developed by NETL of U.S. Dept. of Energy.

We would like to utilize the xml report capability to post the results 
of the nightly tests on mfix.org site so our remote developers can check 
the results. For this purpose I generate XML reports for the results of 
the regression testing using the following flag option:
qmtest -D $WORKDIR run -f full --output $WORKDIR/Results/`date +%b%d-%T`.xml

However, I get an error when reading the file with Mozilla browser. The 
error is shown below:
XML Parsing Error: not well-formed
Location: 
file:///home/aike/MFIX/HARNESS/regr_test_mfix/Results/Nov25-03:30:01.xml
Line Number 1, Column 2:

I'm also attaching the generated xml file with this e-mail. I wanted to 
ask if this is a problem observed by other users/developers or this is 
occuring due to the fact that I'm missing something while instructing 
qmtest to generate xml files?

Any suggestions or pointers will be greatly appreciated.
Thanks.

Aytekin Gel
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Nov25-03:30:01.xml
Type: text/xml
Size: 1120 bytes
Desc: not available
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20051129/144978ba/attachment.xml>

From stefan at codesourcery.com  Tue Nov 29 17:26:45 2005
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Tue, 29 Nov 2005 12:26:45 -0500
Subject: [qmtest] XML Parsing Error: not well-formed
In-Reply-To: <438C85FD.90703@cox.net>
References: <438C85FD.90703@cox.net>
Message-ID: <438C8F55.4040204@codesourcery.com>

Aytekin Gel wrote:
> For this purpose I generate XML reports for the results of 
> the regression testing using the following flag option:
> qmtest -D $WORKDIR run -f full --output $WORKDIR/Results/`date 
> +%b%d-%T`.xml

This generates a results file with the extension '.xml', but the file
format itself is not xml, it is a python pickle.

If you really mean to generate a report (as opposed to a results file),
use the 'qmtest report' command with suitable arguments to generate
a (xml) report file from your results. Reports are particularly useful
to combine the results from multiple test runs, but you may generate
a report even from a single run.

You may want to try the development version of QMTest, which has enhanced
support for report generation.

Regards,
		Stefan


