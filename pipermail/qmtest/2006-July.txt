From mark at codesourcery.com  Mon Jul  3 06:03:33 2006
From: mark at codesourcery.com (Mark Mitchell)
Date: Sun, 02 Jul 2006 23:03:33 -0700
Subject: [qmtest] is CompilationTest usable?
In-Reply-To: <C64267F9-17CF-4B0C-A058-C440864F3E80@verizon.net>
References: <C64267F9-17CF-4B0C-A058-C440864F3E80@verizon.net>
Message-ID: <44A8B335.50103@codesourcery.com>

Maurizio Vitale wrote:
> I'm struggling to get qmtest do a very basic thing: traverse a hierarchy
> of testsuites and for every file matching a certain regexp (*.cpp in my
> case) compile it (linking against a library which is actually the
> artifact being tested), execute the resulting executable and compare its
> output w/ a golden result file.

You'll want to use ExtensionDatabase as a database base class; that's an
easy way to make every *.cpp file a test.  And, yes,
compilation_test.SimpleCompilationTest would make a good base class for
the test class bits.

> [it seems to me that it depends on CompilerTest, which in turns has a
> number of not-yet-implemented methods].

The methods that raise NotImplementedError are not placeholders; they
are methods that are expected to be overridden in derived classes.  In
particular, SimpleCompilationTest overrides them.

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From segg at infonet.ca  Tue Jul  4 10:18:09 2006
From: segg at infonet.ca (Gilles J. Seguin)
Date: Tue, 04 Jul 2006 06:18:09 -0400
Subject: do we have a rpm spec file for fedoar core 5
Message-ID: <1152008290.18156.12.camel@seggil.infonet.ca>

Building rpm for qm-2.3.tar.gz is presently a long process.
That is because of the BuildRequires option requirements.

And also, any chance to submit QMtest to one of the Fedora core extra
repositories.

thanks gilles




From ktemp at gmx.ch  Fri Jul 14 06:49:38 2006
From: ktemp at gmx.ch (ktemp at gmx.ch)
Date: Fri, 14 Jul 2006 08:49:38 +0200
Subject: questions to QMTest 
Message-ID: <20060714064938.303950@gmx.net>

Dear Sirs,

I am evaluating QMTest and reached a point where I am not able to proceed. I would appreciate any help.


I have installed it under Windows XP, Python 2.3.
I will use it to start NUnit and CPP unit tests. The standard output of NUnit includes the time the test need and differs from run to run. That's why I can not create a testcase against this output. I tryed to create an extension class to parse the output but at this point I have some problems. 
I copied the the class C:\Python23\Lib\site-packages\qm\test\classes\command.py to a new file, edit it and registered it with the command 
QMTest.py register ... but when used this class I get an exception.
Because I didn't know what's wrong I just copied the command.py to mycommand.py without any changes and registered it with the command:

C:\Python23\share\qm\tutorial\test\tdb2>qmtest.py register test mycommand.ExecTest
--> Result:
QMTest will load 'ExecTest' from '
C:\Python23\lib\site-packages\qm\test\classes\mycommand.py'.

seems ok..

But when using this class I get the same exception as before (see below) and at this point I need help. 


circle.nunit2Outcome	Cause
ERROR 	An exception occurred. 
Annotation	Value
qmtest.end_time	2006-07-14T05:52:59Z 
qmtest.exception	pywintypes.error: (123, 'CreateProcess', 'Die Syntax f\xfcr den Dateinamen, Verzeichnisnamen oder die Datentr\xe4gerbezeichnung ist falsch.')
qmtest.start_time	2006-07-14T05:52:59Z 
qmtest.target	local 
qmtest.traceback	  File "C:\Python23\Lib\site-packages\qm\test\target.py", line 225, in RunTest
    descriptor.Run(context, result)

  File "C:\Python23\Lib\site-packages\qm\test\database.py", line 256, in Run
    self._Execute(context, result, "Run")

  File "C:\Python23\Lib\site-packages\qm\test\database.py", line 178, in _Execute
    methobj(context, result)

  File "C:\Python23\lib\site-packages\qm\test\classes\mycompiler.py", line 335, in Run
    context, result)

  File "C:\Python23\lib\site-packages\qm\test\classes\mycompiler.py", line 221, in RunProgram
    exit_status = e.Run(arguments, environment, path = program)

  File "C:\Python23\Lib\site-packages\qm\executable.py", line 548, in Run
    path)

  File "C:\Python23\Lib\site-packages\qm\executable.py", line 257, in Run
    child = self.Spawn(arguments, environment, dir, path, exception_pipe)

  File "C:\Python23\Lib\site-packages\qm\executable.py", line 170, in Spawn
    startupinfo)[0]







General:

My scope is to create a nightly build and test sytem with QMTest. My idea is to create two extendend classes basically.
The first is to check out the sources from the source safe reprository and build the project if the sources has changed or if binaries are out of date. I will validate against the compiler output.
The second has to execute the unit tests. This class shall store the e-mail address of the developper and if the test failes it sends an e-mail to him.

Concerning this conecpt I have several questions to some issues.
- Is this the right way to use QMTest or are there better solutions?
- Concerning the class which compiles the project. I have found a class "compiler.py" but didn't found a way to select it in the gui. How can I use it ?
- I can imagine that these issues already have been solved by another developper. Are there some extension classes to download ? 
- I searched for a public Forum for QMTest but I didn't found one. Does no forum exist ?

 
Thanks for your help
Konrad Kellenberger

-- 


"Feel free" ? 10 GB Mailbox, 100 FreeSMS/Monat ...
Jetzt GMX TopMail testen: http://www.gmx.net/de/go/topmail


From stefan at codesourcery.com  Sun Jul 16 03:51:44 2006
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Sat, 15 Jul 2006 23:51:44 -0400
Subject: [qmtest] questions to QMTest
In-Reply-To: <20060714064938.303950@gmx.net>
References: <20060714064938.303950@gmx.net>
Message-ID: <44B9B7D0.8070905@codesourcery.com>

ktemp at gmx.ch wrote:
> Dear Sirs,
> 
> I am evaluating QMTest and reached a point where I am not able to proceed. I would appreciate any help.
> 
> 
> I have installed it under Windows XP, Python 2.3.
> I will use it to start NUnit and CPP unit tests. The standard output of NUnit includes the time the test need and differs from run to run. That's why I can not create a testcase against this output. I tryed to create an extension class to parse the output but at this point I have some problems. 
> I copied the the class C:\Python23\Lib\site-packages\qm\test\classes\command.py to a new file, edit it and registered it with the command 
> QMTest.py register ... but when used this class I get an exception.
> Because I didn't know what's wrong I just copied the command.py to mycommand.py without any changes and registered it with the command:
> 
> C:\Python23\share\qm\tutorial\test\tdb2>qmtest.py register test mycommand.ExecTest
> --> Result:
> QMTest will load 'ExecTest' from '
> C:\Python23\lib\site-packages\qm\test\classes\mycommand.py'.
> 
> seems ok..
> 
> But when using this class I get the same exception as before (see below) and at this point I need help. 
> 
> 
> circle.nunit2Outcome	Cause
> ERROR 	An exception occurred. 
> Annotation	Value
> qmtest.end_time	2006-07-14T05:52:59Z 
> qmtest.exception	pywintypes.error: (123, 'CreateProcess', 'Die Syntax f\xfcr den Dateinamen, Verzeichnisnamen oder die Datentr\xe4gerbezeichnung ist falsch.')

This seems to indicate that QMTest wasn't able to run the program you passed to the test.
I assume at this point you are experimenting using the default test database as per the
tutorial, in which case your test instance will be stored in a file with the '.qmt' extension.
This file contains the parameters with which the ExecTest test class will be instantiated,
notably the 'program' argument. Does the value of this parameter name an executable file
that can be found and run by QMTest ? The error you get suggests it can not.

[...]

> General:
> 
> My scope is to create a nightly build and test sytem with QMTest. My idea is to create two extendend classes basically.
> The first is to check out the sources from the source safe reprository and build the project if the sources has changed or if binaries are out of date. I will validate against the compiler output.
> The second has to execute the unit tests. This class shall store the e-mail address of the developper and if the test failes it sends an e-mail to him.
> 
> Concerning this conecpt I have several questions to some issues.
> - Is this the right way to use QMTest or are there better solutions?

I have been using QMTest to run test suites nightly (or triggered by some other frequent events).
However, while you certainly can write some extension classes to check out source code from a
repository and compile it before running the actual tests, I don't think that QMTest is the best
tool to do that. In similar contexts I have been using dedicated tools such as buildbot
(http://buildbot.sf.net) to drive the whole process. Running QMTest then becomes one step in
that workflow (or two if you also use it to generate a test report at the end).

> - Concerning the class which compiles the project. I have found a class "compiler.py" but didn't found a way to select it in the gui. How can I use it ?

The compiler.Compiler class is used in a number of QMTest test classes, notably the
compilation_test module. You can use the compilation_test.CompilationTest to compile and
run test applets. However, compiling libraries and applications from multiple source files
is typically more involved and requires a more fine-grained control. Does the code you
want to check out and compile not have its own build system ? If so, why can't you simply
call into that (e.g. running 'make' with appropriate parameters) ?
That would also take care of the dependencies, i.e. build incrementally.

> - I can imagine that these issues already have been solved by another developper. Are there some extension classes to download ? 

All the essential extension classes are part of the QMTest package, though we are trying to
add new ones if there is demand for common functionality that isn't supported yet.

> - I searched for a public Forum for QMTest but I didn't found one. Does no forum exist ?

This mailing list is the right place to ask for help.

Regards,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From stefan at codesourcery.com  Sun Jul 16 03:59:22 2006
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Sat, 15 Jul 2006 23:59:22 -0400
Subject: [qmtest] do we have a rpm spec file for fedoar core 5
In-Reply-To: <1152008290.18156.12.camel@seggil.infonet.ca>
References: <1152008290.18156.12.camel@seggil.infonet.ca>
Message-ID: <44B9B99A.10107@codesourcery.com>

Gilles J. Seguin wrote:
> Building rpm for qm-2.3.tar.gz is presently a long process.
> That is because of the BuildRequires option requirements.

I'm not sure what you are talking about. The rpm spec file is
generated by the distutils harness, i.e. rpm generation is done
by calling 'python setup.py bdist_rpm'.
In particular, the (temporary) spec file I get on my FC5 system
doesn't seem to contain a 'BuildRequires' option.
(Actually, rpm generation currently fails on my FC5, but I assume
this is a FC5 bug, i.e. unrelated to QMTest, as I get the same
failure for other projects I try to package.)

> And also, any chance to submit QMtest to one of the Fedora core extra
> repositories.

That sounds like a good idea. I should probably look into the
procedure for this (as well as other distros such as debian).

Regards,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718


From stefan at codesourcery.com  Mon Jul 17 13:38:21 2006
From: stefan at codesourcery.com (Stefan Seefeld)
Date: Mon, 17 Jul 2006 09:38:21 -0400
Subject: patch: Allow creation of explicit suites via 'qmtest create', etc.
Message-ID: <44BB92CD.5090705@codesourcery.com>

The attached patch enables 'qmtest create' to be used to add explicit suites,
and makes 'qmtest ls' more useful with suites (in particular explicit suites
that are not directories).
OK to commit ?

Thanks,
		Stefan

-- 
Stefan Seefeld
CodeSourcery
stefan at codesourcery.com
(650) 331-3385 x718
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: patch
URL: <http://sourcerytools.com/pipermail/qmtest/attachments/20060717/88c6416c/attachment.ksh>

From mark at codesourcery.com  Mon Jul 17 18:33:10 2006
From: mark at codesourcery.com (Mark Mitchell)
Date: Mon, 17 Jul 2006 11:33:10 -0700
Subject: [qmtest] patch: Allow creation of explicit suites via 'qmtest
 create', etc.
In-Reply-To: <44BB92CD.5090705@codesourcery.com>
References: <44BB92CD.5090705@codesourcery.com>
Message-ID: <44BBD7E6.7030806@codesourcery.com>

Stefan Seefeld wrote:
> The attached patch enables 'qmtest create' to be used to add explicit suites,
> and makes 'qmtest ls' more useful with suites (in particular explicit suites
> that are not directories).

That's nice!

> -            if issubclass(extension_class, Runnable):
> -                extras = { Runnable.EXTRA_ID : extension_id, 
> -                           Runnable.EXTRA_DATABASE : database }
> +            if issubclass(extension_class, (Runnable, Suite)):
> +                extras = { 'qmtest_id' : extension_id, 
> +                           'qmtest_database' : database }

The idea here was to avoid "magic strings".  Perhaps we could add
Suite.EXTRA_ID and Suite.EXTRA_DATABASE, and then this could be:

  extras = { extension_class.EXTRA_ID : ...,
             extension_class.EXTRA_DATABASE : ... }

?

OK with that change.

Thanks,

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


From jtc at acorntoolworks.com  Thu Jul 20 18:02:14 2006
From: jtc at acorntoolworks.com (J.T. Conklin)
Date: Thu, 20 Jul 2006 11:02:14 -0700
Subject: resources that spawn processes.
Message-ID: <87odvkw3x5.fsf@orac.acorntoolworks.com>

Hi Folks,

In our test suite, we have several QMTest resources that are wrappers
around daemon processes (TAO's Naming Service, Notification Service,
our own servants/servers, etc).  Until now we've been using QMTest's
Executable class to spawn and manage these subprocesses, but have run
into a minor problem now that I'm adding code coverage and profiling
instrumentation to our tests.

Presently we use Spawn() to spawn processes, and Kill() to terminate
them.  That sends SIGKILL, which defeats the SIGINT/SIGTERM handlers
that implement graceful shutdown.  What's worse, the data that has
been collected data lost.

It seems the easiest thing to do is just use os.spawn* and manage the
processes directly.  In the interests of time, I'm probably going to
have to do this.  

But it seems that a mechanism to shut down a process gracefully might
be something that the Executable class should provide.  This is
complicated somewhat by the fact that QMTest's Executable class
supports Windows as well, and I'm not exactly sure what or if 
there is an equivalent to SIGTERM to signal a process to shut down.

    --jtc

-- 
J.T. Conklin


From mark at codesourcery.com  Thu Jul 20 18:29:40 2006
From: mark at codesourcery.com (Mark Mitchell)
Date: Thu, 20 Jul 2006 11:29:40 -0700
Subject: [qmtest] resources that spawn processes.
In-Reply-To: <87odvkw3x5.fsf@orac.acorntoolworks.com>
References: <87odvkw3x5.fsf@orac.acorntoolworks.com>
Message-ID: <44BFCB94.9060400@codesourcery.com>

J.T. Conklin wrote:

> But it seems that a mechanism to shut down a process gracefully might
> be something that the Executable class should provide.  This is
> complicated somewhat by the fact that QMTest's Executable class
> supports Windows as well, and I'm not exactly sure what or if 
> there is an equivalent to SIGTERM to signal a process to shut down.

Yes, I do think Executable should have a Terminate function, in addition
to Kill.  Terminate should be defined as attempting to do orderly
shutdown; failing that, fall back to Kill.  That means that an
acceptable implementation would be to fall back to Kill for systems that
have no mechanism for orderly shutdown.

For UNIX Terminate would send SIGTERM, wait a few seconds for process
death, and then call Kill if the process has not did.  For Windows,
there are similar mechanisms which we could use.

-- 
Mark Mitchell
CodeSourcery
mark at codesourcery.com
(650) 331-3385 x713


