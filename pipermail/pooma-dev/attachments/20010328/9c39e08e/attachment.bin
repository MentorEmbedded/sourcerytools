
On Wednesday, March 28, 2001, at 05:31 PM, Jeffrey Oldham wrote:


<excerpt>Good question.  Since g++ was producing warnings, I assumed
that it

was warning the C++ standard was violated, but C++ standard \S 12.6.2

explicitly permits any order of initializers although they are called

in the order of class declaration, not initializer order.  However,

Stroustrup, \S 10.4.6, writes, "It is best to specify the initializers

in the member declaration order."  I guess this is why g++ wants to

produce warning messages.

</excerpt>

Are there different warning levels in GCC? This seems like it falls in
the "Chatty and more than a little annoying category." :-) This
warning should not, it seems to me, be printed out by default. If
there's no way to change this, we should make these changes. They're
good style anyway.

<color><param>0000,0000,DEB7</param>

</color><excerpt>

I added base class initializers when g++ warned that a copy

constructor did not initialize its base class.  For example,


   
/nfs/oz/home/oldham/pooma/r2/src/NewField/Updater/UpdaterList.h:70: warning:
base

       class `class RefCounted' should be explicitly initialized in
the copy 

       constructor


Thus, please

accept: if you want g++ users to not have to deal with warning messages

reject: otherwise.

</excerpt>

This strikes me as another annoying warning from GCC. Same comment as
above.


Scott

