// -----------------------------------------------------------
// SPL (Solitonic POOMA-based Library).
// Copyright (C) 2000 by Serge Mingaleev <smino@bitp.kiev.ua>
// Last modified: Sep 17, 2000.
// -----------------------------------------------------------

//------------------------------------------------------------
// Classes: 
//   Sparse               - Sparse-Engine specialization tag.
//   Engine<Dim,T,Sparse> - the "Sparse-Engine" specialization.
//   NewEngine            - the "Sparse-Engine" specialization.
//------------------------------------------------------------

#ifndef SPL_ENGINE_SPARSEENGINE_H
#define SPL_ENGINE_SPARSEENGINE_H

//#define SPL_DEBUG_SPARSE

#ifndef SPARSE_TOLERANCE
#define SPARSE_TOLERANCE  1e-10
#endif 

#ifndef SPARSITY_LEVEL
#define SPARSITY_LEVEL  0.5
#endif

//------------------------------------------------------------
// Overview:
//
//   Sparse
//    - tag class used to select specializations of Engine
//
//   Engine<Dim,T,Sparse>
//    - an Engine that manages a contiguous, local, 
//      N-dimensional (at present only two-dimensional)
//      brick of data, storing only non-zero elements of 
//      an array. So, using this Engine saves a lot of 
//      memory in the case of Sparse Arrays.
//
//      See Engine.h for the general version.
//------------------------------------------------------------

//------------------------------------------------------------
// Includes:
//------------------------------------------------------------

#include "Engine/Engine.h"
#include "Domain/Domain.h"
#include "Domain/Interval.h"
#include "Domain/Loc.h"
#include "Domain/SliceInterval.h"
#include "Domain/SliceRange.h"
#include "Domain/Touches.h"
#include "Engine/CompressibleBrick.h"
#include "Layout/DomainLayout.h"
#include "Layout/Node.h"
#include "Layout/INode.h"
#include "Utilities/DataBlockPtr.h"
#include "Utilities/PAssert.h"

//////////////////////////////////////////////////////////////
// namespace Pooma {

//------------------------------------------------------------
//
// Full Description:
// Sparse
//
// This is tag class used to select the "Sparse"
// specialization of the Engine class template.
//
//------------------------------------------------------------

struct Sparse
{ };

struct SparseView
{ };

//-----------------------------------------------------------------------------
// Forward Declarations
//-----------------------------------------------------------------------------

//template <int Dim, class T>
//class Engine<Dim,T,SparseView>;

//------------------------------------------------------------
//
// Full Description:
// Engine<Dim,T,Sparse>  (aka Sparse-Engine)
//
//  Engine<Dim,T,Sparse> is an Engine that manages a 
//  contiguous, local, Dim-dimensional brick of data,
//  storing only non-zero elements of an array.
//
//  Template Parameters:
//    Dim: An integer for the dimension of the Sparse Array.
//    T:   The type of object stored.  Often a numeric type.
//         However, the Engine makes no assumptions beyond that
//         T have a copy constructor and assignment operator.
//
//  The Domain of this engine is an Interval<Dim>, which is a 
//  tensor product of Dim 1-D intervals.
//
//  Subsetting Engine<Dim,T,Sparse> returns an Engine<Dim,T,SparseView>.
//  See below.
//
//-----------------------------------------------------------

//-----------------------------------------------------------
// At present, the only 2D and 4D Sparse-Engines can be used:

//#include <spl/Engine/SparseEngine2.h>
//#include <spl/Engine/SparseEngine4.h>
#include "SparseEngine2.h"
#include "SparseEngine4.h"

//------------------------------------------------------------
//
// Full Description:
// NewEngine<Engine,SubDomain>
//
// Several specializations of NewEngine for combinations of 
// Engines and Domains that produce Sparse-Engines.
//
//------------------------------------------------------------

template <int Dim, class T>
struct NewEngine<Engine<Dim,T,Sparse>, Interval<Dim> >
{
  typedef Engine<Dim,T,Sparse> Type_t;
};

// } // namespace Pooma
/////////////////////////////////////////////////////////////

//#include <spl/Engine/SparseOperators.h>
#include "SparseOperators.h"

#endif // SPL_ENGINE_SPARSEENGINE_H

