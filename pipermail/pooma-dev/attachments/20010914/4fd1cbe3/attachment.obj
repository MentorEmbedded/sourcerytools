Index: r2/src/IO/FileSetWriter.h===================================================================RCS file: /home/pooma/Repository/r2/src/IO/FileSetWriter.h,vretrieving revision 1.2diff -p -c -2 -r1.2 FileSetWriter.h*** r2/src/IO/FileSetWriter.h	2001/09/13 22:00:31	1.2--- r2/src/IO/FileSetWriter.h	2001/09/14 21:16:59*************** private:*** 89,92 ****--- 89,100 ----    typedef long Offset_t;  #endif  +   +   template<class T>+   struct DFOffsetData {+     int        vnodedata_m[6 * Dim];+     bool       isCompressed_m;+     Offset_t   offset_m;+     T          compressedVal_m;+   };      template<class Layout>*************** FileSetWriter<Dim>::FileSetWriter(const *** 147,151 ****            int oflag = O_WRONLY | O_CREAT | O_TRUNC;! #if defined(POOMA_HAS_O_BINARY_OPEN_MODE)        oflag != O_BINARY;  #endif--- 155,159 ----            int oflag = O_WRONLY | O_CREAT | O_TRUNC;! #if POOMA_HAS_O_BINARY_OPEN_MODE        oflag != O_BINARY;  #endif*************** void FileSetWriter<Dim>::writePatch(cons*** 368,381 ****    // We need to fill in this nutty structure.      !   int err;! !   struct DFOffsetData {!     int        vnodedata_m[6 * Dim];!     bool       isCompressed_m;!     Offset_t   offset_m;!     T          compressedVal_m;!   } odata;  !   std::memset(&odata, 0, sizeof(DFOffsetData));      for (int i = 0; i < Dim; i++)      {--- 376,382 ----    // We need to fill in this nutty structure.      !   DFOffsetData<T> odata;  !   std::memset(&odata, 0, sizeof(DFOffsetData<T>));      for (int i = 0; i < Dim; i++)      {