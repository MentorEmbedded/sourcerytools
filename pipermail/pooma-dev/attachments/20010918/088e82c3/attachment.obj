Index: r2/src/IO/FileSetWriter.h===================================================================RCS file: /home/pooma/Repository/r2/src/IO/FileSetWriter.h,vretrieving revision 1.4diff -p -c -2 -r1.4 FileSetWriter.h*** r2/src/IO/FileSetWriter.h	2001/09/14 23:13:41	1.4--- r2/src/IO/FileSetWriter.h	2001/09/17 20:39:22****************** 43,51 ****  #include "Utilities/PAssert.h"  - #include <fcntl.h>  #include <fstream>  #include <stdlib.h>  #include <string>- #include <unistd.h>  #include <vector>  --- 43,49 ----*************** private:*** 105,114 ****      template<class T>!   void writeValue(int fd, const T &val);      template<class T>!   Offset_t writeValues(int fd, const T *vals, int n);  !   void writeValue(int fd, const Interval<Dim> &val);        void writeMetaFile();--- 103,112 ----      template<class T>!   void writeValue(std::ofstream &fs, const T &val);      template<class T>!   Offset_t writeValues(std::ofstream &fs, const T *vals, int n);  !   void writeValue(std::ofstream &fs, const Interval<Dim> &val);        void writeMetaFile();*************** private:*** 121,125 ****    int ioContext_m;    int fieldsPerRecord_m, currentRecord_m, currentField_m;!   int dataDesc_m, offsetDesc_m, layoutDesc_m;  };  --- 119,123 ----    int ioContext_m;    int fieldsPerRecord_m, currentRecord_m, currentField_m;!   std::ofstream data_m, offset_m, layout_m;  };  *************** FileSetWriter<Dim>::FileSetWriter(const *** 137,144 ****    fieldsPerRecord_m(fieldsPerRecord),    currentRecord_m(0),!   currentField_m(0),!   dataDesc_m(-1),!   offsetDesc_m(-1),!   layoutDesc_m(-1)  {    // For now, we are always writing on context 0.--- 135,139 ----    fieldsPerRecord_m(fieldsPerRecord),    currentRecord_m(0),!   currentField_m(0)  {    // For now, we are always writing on context 0.*************** FileSetWriter<Dim>::FileSetWriter(const *** 153,172 ****        std::string offsetFileName = baseFileName_m + ".offset";        std::string layoutFileName = baseFileName_m + ".layout";-   -       int oflag = O_WRONLY | O_CREAT | O_TRUNC;- #if POOMA_HAS_O_BINARY_OPEN_MODE-       oflag != O_BINARY;- #endif  !       dataDesc_m = ::open(dataFileName.c_str(), oflag, 664);!       PInsist(dataDesc_m != -1,           "FileSetWriter::FileSetWriter - Couldn't create data file.");  !       offsetDesc_m = ::open(offsetFileName.c_str(), oflag, 664);!       PInsist(offsetDesc_m != -1,           "FileSetWriter::FileSetWriter - Couldn't create offset file.");  !       layoutDesc_m = ::open(layoutFileName.c_str(), oflag, 664);!       PInsist(layoutDesc_m != -1,           "FileSetWriter::FileSetWriter - Couldn't create layout file.");      }--- 148,162 ----        std::string offsetFileName = baseFileName_m + ".offset";        std::string layoutFileName = baseFileName_m + ".layout";  !       data_m.open(dataFileName.c_str(), std::ios::binary | std::ios::trunc);!       PInsist(data_m.is_open(),           "FileSetWriter::FileSetWriter - Couldn't create data file.");  !       offset_m.open(offsetFileName.c_str(), std::ios::binary | std::ios::trunc);!       PInsist(offset_m.is_open(),           "FileSetWriter::FileSetWriter - Couldn't create offset file.");  !       layout_m.open(layoutFileName.c_str(), std::ios::binary | std::ios::trunc);!       PInsist(layout_m.is_open(),           "FileSetWriter::FileSetWriter - Couldn't create layout file.");      }*************** template<int Dim>*** 182,205 ****  FileSetWriter<Dim>::~FileSetWriter()  {-   if (dataDesc_m != -1)-     {-       int err = ::close(dataDesc_m);-       PInsist(err != -1, -         "FileSetWriter::~FileSetWriter - Couldn't close data file.");-     }- -   if (offsetDesc_m != -1)-     {-       int err = ::close(offsetDesc_m);-       PInsist(err != -1, -         "FileSetWriter::~FileSetWriter - Couldn't close offset file.");-     }- -   if (layoutDesc_m != -1)-     {-       int err = ::close(layoutDesc_m);-       PInsist(err != -1, -         "FileSetWriter::~FileSetWriter - Couldn't close layout file.");-     }  }  --- 172,175 ----*************** void FileSetWriter<Dim>::write(Subject &*** 248,252 ****            // We need to write the current field# to the .offset file.  !           writeValue(offsetDesc_m, currentField_m);                       // Get a subfield view of the subject.--- 218,222 ----            // We need to write the current field# to the .offset file.  !           writeValue(offset_m, currentField_m);                       // Get a subfield view of the subject.*************** void FileSetWriter<Dim>::initializeRecor*** 349,358 ****        // Write the number of patches to the .layout file.         !       writeValue(layoutDesc_m, domains_m.size());                 // Write the domains.                 for (int i = 0; i < domains_m.size(); i++)!         writeValue(layoutDesc_m, domains_m[i]);      }  } --- 319,328 ----        // Write the number of patches to the .layout file.         !       writeValue(layout_m, domains_m.size());                 // Write the domains.                 for (int i = 0; i < domains_m.size(); i++)!         writeValue(layout_m, domains_m[i]);      }  } *************** void FileSetWriter<Dim>::writePatch(cons*** 404,408 ****                      currentOffset_m += !         writeValues(dataDesc_m, a.engine().localEngine().dataBlock().beginPointer(),            a.domain().size());      }--- 374,378 ----                      currentOffset_m += !         writeValues(data_m, a.engine().localEngine().dataBlock().beginPointer(),            a.domain().size());      }*************** void FileSetWriter<Dim>::writePatch(cons*** 410,414 ****    // Write to the .offset file.    !   writeValue(offsetDesc_m, odata);  }  --- 380,384 ----    // Write to the .offset file.    !   writeValue(offset_m, odata);  }  *************** void FileSetWriter<Dim>::writePatch(cons*** 424,428 ****  template<int Dim>  template<class T>! void FileSetWriter<Dim>::writeValue(int fd, const T &val)  {    // We only want to write if we are on the I/O context.--- 394,398 ----  template<int Dim>  template<class T>! void FileSetWriter<Dim>::writeValue(std::ofstream &fs, const T &val)  {    // We only want to write if we are on the I/O context.*************** void FileSetWriter<Dim>::writeValue(int *** 430,436 ****    if (Pooma::context() == ioContext_m)      {!       int numWritten = ::write(fd, &val, sizeof(T));!       PInsist(numWritten == sizeof(T),!         "FileSetWriter::write - error writing value to fileSet.");      }  }--- 400,404 ----    if (Pooma::context() == ioContext_m)      {!       fs.write((char *) &val, sizeof(T));      }  }*************** template<int Dim>*** 439,443 ****  template<class T>  typename FileSetWriter<Dim>::Offset_t ! FileSetWriter<Dim>::writeValues(int fd, const T *vals, int n)  {    // We only want to write if we are on the I/O context.--- 407,411 ----  template<class T>  typename FileSetWriter<Dim>::Offset_t ! FileSetWriter<Dim>::writeValues(std::ofstream &fs, const T *vals, int n)  {    // We only want to write if we are on the I/O context.*************** FileSetWriter<Dim>::writeValues(int fd, *** 445,451 ****    if (Pooma::context() == ioContext_m)      {!       int numWritten = ::write(fd, vals, n * sizeof(T));!       PInsist(numWritten == n * sizeof(T),!         "FileSetWriter::write - error writing array to fileSet.");      }      --- 413,417 ----    if (Pooma::context() == ioContext_m)      {!       fs.write((char *) vals, n * sizeof(T));      }      *************** FileSetWriter<Dim>::writeValues(int fd, *** 454,458 ****    template<int Dim>! void FileSetWriter<Dim>::writeValue(int fd, const Interval<Dim> &val)  {    // We only want to write if we are on the I/O context.--- 420,424 ----    template<int Dim>! void FileSetWriter<Dim>::writeValue(std::ofstream &fs, const Interval<Dim> &val)  {    // We only want to write if we are on the I/O context.*************** void FileSetWriter<Dim>::writeValue(int *** 465,474 ****            // documentation, but it DOES match the code. Bad Bill! Bad! :-)            !           writeValue(fd, 0);!           writeValue(fd, val[i].first());!           writeValue(fd, 1);!           writeValue(fd, val[i].size());!           writeValue(fd, 0);!           writeValue(fd, 0);          }      }--- 431,440 ----            // documentation, but it DOES match the code. Bad Bill! Bad! :-)            !           writeValue(fs, 0);!           writeValue(fs, val[i].first());!           writeValue(fs, 1);!           writeValue(fs, val[i].size());!           writeValue(fs, 0);!           writeValue(fs, 0);          }      }