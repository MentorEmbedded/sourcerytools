<fixed>Sorry guys. Here are the diffs to get these three files
coompiling under metrowerks 6.1.

John


cvs -z9 diff Interval.h (in directory Macintosh HD:Programming:TCode
Ÿ:Blanca:r2:src:Domain:)

Index: Interval.h

===================================================================

RCS file: /home/pooma/Repository/r2/src/Domain/Interval.h,v

retrieving revision 1.17

diff -r1.17 Interval.h

385c385,389

<color><param>FFFF,0000,0000</param><<   Interval(const T1 &m, const T2
&n);

</color>---

<color><param>0000,0000,FFFF</param>>   Interval(const T1 &m, const T2
&n)

>     : Domain<<1, DomainTraits<<Interval<<1> > >(Pooma::NoInit() ) {

>         DomainTraits<<Interval<<1> >::setDomain(domain_m, m, n);

>   }

</color>> 

390c394,398

<color><param>FFFF,0000,0000</param><<   Interval(const T1 &m, const T2
&n, const T3 &s);

</color>---

<color><param>0000,0000,FFFF</param>>   Interval(const T1 &m, const T2
&n, const T3 &s)

>     : Domain<<1, DomainTraits<<Interval<<1> > >(Pooma::NoInit()) {

>         PAssert(s == 1);

>         DomainTraits<<Interval<<1> >::setDomain(domain_m, m, n);

>   }

</color>416,434d423

<< 

<color><param>FFFF,0000,0000</param><< // initialize from a set of
endpoints: sets interval to [m ..n].  Must

<< // have m <<= n.

<< template <<class T1, class T2>

<< inline

<< Interval<<1>::Interval(const T1 &m, const T2 &n)

<<   : Domain<<1, DomainTraits<<Interval<<1> > >(Pooma::NoInit()) {

<<   DomainTraits<<Interval<<1> >::setDomain(domain_m, m, n);

</color><< }

<< 

<color><param>FFFF,0000,0000</param><< // initialize from three
integers: if the stride is not 1,

<< // it is an error.

<< template <<class T1, class T2, class T3>

<< inline

<< Interval<<1>::Interval(const T1 &m, const T2 &n, const T3 &s)

<<   : Domain<<1, DomainTraits<<Interval<<1> > >(Pooma::NoInit()) {

<<   PAssert(s == 1);

<<   DomainTraits<<Interval<<1> >::setDomain(domain_m, m, n);

</color><< }


*****CVS exited normally with code 1*****


cvs -z9 diff Range.h (in directory Macintosh HD:Programming:TCode
Ÿ:Blanca:r2:src:Domain:)

Index: Range.h

===================================================================

RCS file: /home/pooma/Repository/r2/src/Domain/Range.h,v

retrieving revision 1.18

diff -r1.18 Range.h

415c415,418

<color><param>FFFF,0000,0000</param><<   Range(const T1 &m, const T2
&n);

</color>---

<color><param>0000,0000,FFFF</param>>   Range(const T1 &m, const T2
&n)

>     : Domain<<1, DomainTraits<<Range<<1> > >(Pooma::NoInit()) {

>         DomainTraits<<Range<<1> >::setDomain(domain_m, m, n);

>   }

</color>420c423,426

<color><param>FFFF,0000,0000</param><<   Range(const T1 &m, const T2
&n, const T3 &s);

</color>---

<color><param>0000,0000,FFFF</param>>   Range(const T1 &m, const T2 &n,
const T3 &s)

>     : Domain<<1, DomainTraits<<Range<<1> > >(Pooma::NoInit()) {

>         DomainTraits<<Range<<1> >::setDomain(domain_m, m, n, s);

>   }

</color>446,464d451

<< 

<color><param>FFFF,0000,0000</param><< // initialize from a set of
endpoints: sets range to [m ..n].

<< // domain_m is the domain information storage kept in the base
class.

<< template <<class T1, class T2>

<< inline

<< Range<<1>::Range(const T1 &m, const T2 &n)

<<   : Domain<<1, DomainTraits<<Range<<1> > >(Pooma::NoInit()) {

<<   DomainTraits<<Range<<1> >::setDomain(domain_m, m, n);

</color><< }

<< 

<color><param>FFFF,0000,0000</param><< // initialize from a set of
endpoints and with a given stride.

<< // domain_m is the domain information storage kept in the base
class.

<< template <<class T1, class T2, class T3>

<< inline

<< Range<<1>::Range(const T1 &m, const T2 &n, const T3 &s)

<<   : Domain<<1, DomainTraits<<Range<<1> > >(Pooma::NoInit()) {

<<   DomainTraits<<Range<<1> >::setDomain(domain_m, m, n, s);

</color><< }

<< 


*****CVS exited normally with code 1*****


cvs -z9 diff Grid.h (in directory Macintosh HD:Programming:TCode
Ÿ:Blanca:r2:src:Domain:)

Index: Grid.h

===================================================================

RCS file: /home/pooma/Repository/r2/src/Domain/Grid.h,v

retrieving revision 1.11

diff -r1.11 Grid.h

412c412,414

<color><param>FFFF,0000,0000</param><<   Grid(const T1 &m, const T2
&n);

</color>---

<color><param>0000,0000,FFFF</param>>   Grid(const T1 &m, const T2 &n)
{

>     DomainTraits<<Grid<<1> >::setDomain(domain_m, m, n);

>   }

</color>417c419,421

<color><param>FFFF,0000,0000</param><<   Grid(const T1 &m, const T2 &n,
const T3 &s);

</color>---

<color><param>0000,0000,FFFF</param>>   Grid(const T1 &m, const T2 &n,
const T3 &s) {

>     DomainTraits<<Grid<<1> >::setDomain(domain_m, m, n, s);

>   }

</color>471,487d474

<< 

<color><param>FFFF,0000,0000</param><< // initialize from a set of
endpoints: sets range to [m ..n].

<< // domain_m is the domain information storage kept in the base
class.

<< template <<class T1, class T2>

<< inline

<< Grid<<1>::Grid(const T1 &m, const T2 &n) {

<<   DomainTraits<<Grid<<1> >::setDomain(domain_m, m, n);

</color><< }

<< 

<color><param>FFFF,0000,0000</param><< // initialize from a set of
endpoints and with a given stride.

<< // domain_m is the domain information storage kept in the base
class.

<< template <<class T1, class T2, class T3>

<< inline

<< Grid<<1>::Grid(const T1 &m, const T2 &n, const T3 &s) {

<<   DomainTraits<<Grid<<1> >::setDomain(domain_m, m, n, s);

</color><< }

<< 


*****CVS exited normally with code 1*****





</fixed><excerpt>John,


Is it possible for you to send diff's of these files?

Just glancing at them, I can't tell what has been changed.


Thanks, Julian C.






---------- Original Message ----------------------------------

From: John Hall <<johnharveyhall@qwest.net>

Date: Thu, 19 Apr 2001 23:22:31 -0600


>Pooma gang:

>Apparently, Metrowerks has a problem with template member functions 

>of partially specialized classes inheriting from a partially 

>specialized base class being defined external to the class 

>declaration. As a result, some code checked in last week caused 

>Interval.h, Range.h and Grid.h to stop compiling. Here are versions 

>that compile under Metrowerks and should be identical in 

>functionality.

>

>Could someone look these over and if they are OK check them in?

>John Hall

>

</excerpt>
