From rguenth at tat.physik.uni-tuebingen.de  Tue Jul  1 09:23:47 2003
From: rguenth at tat.physik.uni-tuebingen.de (Richard Guenther)
Date: Tue, 1 Jul 2003 11:23:47 +0200 (CEST)
Subject: Thanks!
In-Reply-To: <E19XGsw-0002Bk-00@fast.aub.edu.lb>
Message-ID: <Pine.LNX.4.44.0307011122360.6712-100000@bellatrix.tat.physik.uni-tuebingen.de>

On Tue, 1 Jul 2003, Yaqoub El Khamra wrote:

> It worked!I am now a proud POOMA user! I just have one question though,
> remember the particle interaction radius in the pooma/particles templates? The
> (rather old) tutorial did not work. Can you direct me to more recent
> information or perhaps an example of how to set the interaction radius and
> generate interacting particles lists??

Sorry, I dont know nothing about the POOMA Particle classes. What I do
remember is, that for r2 the Particle - Field interaction stuff is
non-functional as it was not converted to the r2 Field representation.

Richard.

--
Richard Guenther <richard dot guenther at uni-tuebingen dot de>
WWW: http://www.tat.physik.uni-tuebingen.de/~rguenth/



From yye00 at aub.edu.lb  Tue Jul  1 09:30:15 2003
From: yye00 at aub.edu.lb (Yaqoub El Khamra)
Date: Tue, 1 Jul 2003 09:30:15 GMT
Subject: particles 
Message-ID: <E19XHSp-0008K0-00@fast.aub.edu.lb>




anybody knows how to use the particle-particle interaction in
pooma-2.4?




From andreas.adelmann at psi.ch  Tue Jul  1 10:29:27 2003
From: andreas.adelmann at psi.ch (Andreas Adelmann)
Date: Tue, 01 Jul 2003 12:29:27 +0200
Subject: [pooma-dev] particles
References: <E19XHSp-0008K0-00@fast.aub.edu.lb>
Message-ID: <3F016287.D62800A2@psi.ch>

Yaqoub El Khamra wrote:
> 
> anybody knows how to use the particle-particle interaction in
> pooma-2.4?

Yaqoub to my understanding a descent particle implementation
exists only in 2.3. The conversion of the r2 Field representation
2.3 -> 2.4 did not include the update of the particle related things.
That is the reason why I still use r1.

- Andreas  
-- 
Andreas (Andy) Adelmann
Paul Scherrer Institut 
CH-5232 Villigen PSI
Phone Office: xx41 56 310 42 33 Fax: xx41 56 310 31 91
Phone Home: xx41 62 891 91 44


From yye00 at aub.edu.lb  Mon Jul  7 12:59:25 2003
From: yye00 at aub.edu.lb (Yaqoub El Khamra)
Date: Mon, 7 Jul 2003 12:59:25 GMT
Subject: particle-particle interact layout
Message-ID: <E19ZVaV-0003pb-00@fast.aub.edu.lb>




does anybody have a working particle-particle interact layout? has anoyone 
tried it?





From jcrotinger at proximation.com  Mon Jul  7 15:22:11 2003
From: jcrotinger at proximation.com (James Crotinger)
Date: Mon, 7 Jul 2003 09:22:11 -0600 
Subject: [pooma-dev] particle-particle interact layout
Message-ID: <F871BB04B0EA224A821A5274C31DF315129603@proxim-sf001.santafe.proximation.com>

I don't believe Pooma 2 was ever intended to have particle-particle
interactions (if that's what you mean). R1 had some molecular dynamics (MD)
type particle features (interaction radius, nearest neighbors, etc.) that
nobody at Los Alamos used and that were largely in there due to the fact
that one of the particle implementers had an MD background. Because of the
complexity and the fact that the R1 feature was unused, I believe R2 left it
out. Further, the Blanca folks, who funded the externally developed 2.4
work, did not require particle support for their 2.4 project, which is why
the head of CVS probably has broken particle-field interactions. If this is
broken, it seems like it should be fairly high on the "to-fix" list. 

	Jim

-----Original Message-----
From: Yaqoub El Khamra [mailto:yye00 at aub.edu.lb] 
Sent: Monday, July 07, 2003 6:59 AM
To: pooma-dev at pooma.codesourcery.com
Subject: [pooma-dev] particle-particle interact layout




does anybody have a working particle-particle interact layout? has anoyone 
tried it?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://sourcerytools.com/pipermail/pooma-dev/attachments/20030707/e873471b/attachment.html>

From rguenth at tat.physik.uni-tuebingen.de  Wed Jul 16 18:11:57 2003
From: rguenth at tat.physik.uni-tuebingen.de (Richard Guenther)
Date: Wed, 16 Jul 2003 20:11:57 +0200 (CEST)
Subject: [PATCH] Fix RemoteProxy for std::string
Message-ID: <Pine.LNX.4.44.0307162005150.567-100000@goofy>

Hi!

The following patch fixes RemoteProxy handling of std::string (and
possibly other non-POD types) by using the delegate mechanism of
Cheetah. This will turn silent failures of non-POD transmissions
into compile errors, if no suitable overrides are provided. It also
will diagnose transfer of yet unknown POD objects as they need to
be registered with Cheetah as being POD (I've done so for the objects
I usually transfer with RemoteProxy).

Regtested Tulip serially (it works with cheetah and MPI for my parallel
code). Ok to apply? Better ideas to detect PODness?

Richard.


2003Jul16  Richard Guenther <richard.guenther at uni-tuebingen.de>

	* src/Tulip/RemoteProxy.h: use Cheetah delegate mechanism
	to pack/unpack objects. Add specializations for
	Cheetah::DelegateType.

===== src/Tulip/RemoteProxy.h 1.4 vs edited =====
--- 1.4/r2/src/Tulip/RemoteProxy.h	Fri Jan 24 18:32:30 2003
+++ edited/src/Tulip/RemoteProxy.h	Wed Jul 16 20:04:42 2003
@@ -57,6 +57,34 @@
 # include "Cheetah/Cheetah.h"
 #endif

+
+// For Cheetah support we need to mark more types not delegate.
+
+#if POOMA_CHEETAH
+namespace Cheetah {
+
+  template<int Dim>
+  class DelegateType<Interval<Dim> > {
+  public:
+    enum { delegate = false };
+  };
+
+  template<int Dim>
+  class DelegateType<Loc<Dim> > {
+  public:
+    enum { delegate = false };
+  };
+
+  template<int Dim, class T, class Tag>
+  class DelegateType<Vector<Dim, T, Tag> > {
+  public:
+    enum { delegate = false };
+  };
+
+} // namespace Cheetah
+#endif
+
+
 //-----------------------------------------------------------------------------
 //
 // RemoteProxy<T>
@@ -120,7 +148,7 @@
       {
 	if (toContext != Pooma::context())
 	{
-	  Pooma::indexHandler()->send(toContext, tag, val);
+	  Pooma::indexHandler()->sendWith(Cheetah::DELEGATE(), toContext, tag, val);
 	}
       }
 #endif
@@ -133,7 +161,8 @@

       RemoteProxyBase::ready_m = false;

-      Pooma::indexHandler()->request(owningContext, tag, receive, this);
+      Pooma::indexHandler()->requestWith(Cheetah::DELEGATE(), owningContext,
+                                         tag, receive, this);

       while (!RemoteProxyBase::ready_m)
       {



From rguenth at tat.physik.uni-tuebingen.de  Thu Jul 17 08:47:24 2003
From: rguenth at tat.physik.uni-tuebingen.de (Richard Guenther)
Date: Thu, 17 Jul 2003 10:47:24 +0200 (CEST)
Subject: DataObjectRequest problem
Message-ID: <Pine.LNX.4.44.0307171041430.14031-100000@bellatrix.tat.physik.uni-tuebingen.de>

Hi!

Is there a particular reason, the DataObjectRequest<> specializations
contain exactly two lhsX_m members? Is the failure if both lhsX_m
members are occupied and a third is coming along really fatal? In
this case we'd rather turn the PAssert() into a PInsist()? Why doesnt
this use a std::vector for storing the lhs?

The problem is, requesting a write lock on a Field with the number of
centerings greater than two fails, but only with assertions enabled.

Any ideas?

Richard.

--
Richard Guenther <richard dot guenther at uni-tuebingen dot de>
WWW: http://www.tat.physik.uni-tuebingen.de/~rguenth/



