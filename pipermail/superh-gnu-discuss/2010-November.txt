From superh at gezedo.com  Fri Nov 12 08:59:47 2010
From: superh at gezedo.com (Laurent GONZALEZ)
Date: Fri, 12 Nov 2010 09:59:47 +0100
Subject: Can gas generate BFD_RELOC_SH_DISP12BY2 ?
Message-ID: <4CDD0203.4000507@gezedo.com>

Hi list,

I would like to generate a linkable object from the following code:

	.extern ext_func
	bra	ext_func

As far as I understand, such an object will require a 
BFD_RELOC_SH_DISP12BY2, and the target function to be in the appropriate 
range at the link phase.

Anyway, the assembler is the first to complain that this displacement 
exceed 12-bit range. Is there a way to tell that this is a 'near' call ?

I assume that the same issue can happen with C code as well. I vainly 
searched for pragma or other functions attribute. Is this possible to 
relocate like this with C code ?

thanks for your help.

--
GONZALEZ Laurent


From ams at codesourcery.com  Mon Nov 22 10:59:54 2010
From: ams at codesourcery.com (Andrew Stubbs)
Date: Mon, 22 Nov 2010 10:59:54 +0000
Subject: Sourcery G++ Lite 2010.09-45 for SuperH GNU/Linux now available
Message-ID: <4CEA4D2A.3040503@codesourcery.com>

CodeSourcery is pleased to announce the availability of a new Sourcery 
G++ Lite Edition release for SuperH GNU/Linux.  This is available for 
download from:

     http://www.codesourcery.com/sgpp/lite/superh

(This page provides both uClinux and full GNU/Linux releases.)

Some of the new features in this release include:

* GCC 4.5.1

* GDB 7.2

Please see the Getting Started Guide for a complete set of release notes:

http://www.codesourcery.com/sgpp/lite/superh/portal/doc9826/getting-started.pdf

-- 
Andrew Stubbs
CodeSourcery


From ams at codesourcery.com  Mon Nov 22 11:00:10 2010
From: ams at codesourcery.com (Andrew Stubbs)
Date: Mon, 22 Nov 2010 11:00:10 +0000
Subject: Sourcery G++ Lite 2010.09-60 for SuperH uClinux now available
Message-ID: <4CEA4D3A.6060504@codesourcery.com>

CodeSourcery is pleased to announce the availability of a new Sourcery 
G++ Lite Edition release for SuperH uClinux.  This is available for 
download from:

     http://www.codesourcery.com/sgpp/lite/superh

(This page provides both uClinux and full GNU/Linux releases.)

This new release features an upgrade to GCC 4.5.1.

Please see the Getting Started Guide for a complete set of release notes:

http://www.codesourcery.com/sgpp/lite/superh/portal/doc9967/getting-started.pdf

-- 
Andrew Stubbs
CodeSourcery


From ams at codesourcery.com  Mon Nov 22 17:37:53 2010
From: ams at codesourcery.com (Andrew Stubbs)
Date: Mon, 22 Nov 2010 17:37:53 +0000
Subject: [superh-gnu-discuss] Sourcery G++ Lite 2010.09-45 for SuperH
 GNU/Linux now available
In-Reply-To: <20101122172757.GA17478@criseis.ruhr.de>
References: <4CEA4D2A.3040503@codesourcery.com> <20101122172757.GA17478@criseis.ruhr.de>
Message-ID: <4CEAAA71.4040409@codesourcery.com>

On 22/11/10 17:27, Olaf Kaluza wrote:
> I build it myself. Unfortunalty it generate wrong code because it can
> not understand -fstrict-volatile-bitfields and this is realy
> necessary!
>
> Can your 4.5.1 understand it?

Yes, I believe it does. :)

Andrew


From g.liakhovetski at gmx.de  Mon Nov 29 10:09:39 2010
From: g.liakhovetski at gmx.de (Guennadi Liakhovetski)
Date: Mon, 29 Nov 2010 11:09:39 +0100 (CET)
Subject: linker stripping shared libraries by default
Message-ID: <Pine.LNX.4.64.1011291035430.27962@axis700.grange>

Hi all

Using "Sourcery G++ Lite 4.4-200" and trying to build executables and 
libraries with debugging information in them for profiling, I notice, that 
my object files are built unstripped, but the final ld call to link a 
library produces a stripped shared library. Here's an excerpt:

sh-linux-gnu-gcc -I. -I"/some-path/ffmpeg-shared" -D_ISOC99_SOURCE \
-D_POSIX_C_SOURCE=200112 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE \
-DHAVE_AV_CONFIG_H -g   -std=c99 -g -Wdeclaration-after-statement -Wall \
-Wno-parentheses -Wno-switch -Wdisabled-optimization -Wpointer-arith \
-Wredundant-decls -Wno-pointer-sign -Wcast-qual -Wwrite-strings \
-Wtype-limits -Wundef -Wmissing-prototypes  -fno-math-errno \
-fno-signed-zeros -fno-tree-vectorize \
-Werror=implicit-function-declaration -Werror=missing-prototypes \
-MMD -MF libavutil/utils.d -MT libavutil/utils.o -c -o libavutil/utils.o \
libavutil/utils.c

sh-linux-gnu-ld -shared -soname,libavutil.so.50 \
-L"/some-path/ffmpeg-shared"/libavcodec \
-L"/some-path/ffmpeg-shared"/libavcore \
-L"/some-path/ffmpeg-shared"/libavdevice \
-L"/some-path/ffmpeg-shared"/libavfilter \
-L"/some-path/ffmpeg-shared"/libavformat \
-L"/some-path/ffmpeg-shared"/libavutil \
-L"/some-path/ffmpeg-shared"/libpostproc \
-L"/some-path/ffmpeg-shared"/libswscale \
-L/opt/renesas-4.4/sh-linux-gnu/libc/lib/ \
-L/opt/renesas-4.4/lib/gcc/sh-linux-gnu/4.4.1/ --no-strip-discarded -o \
libavutil/libavutil.so.50 libavutil/adler32.o libavutil/aes.o \
libavutil/avstring.o libavutil/base64.o libavutil/cpu.o libavutil/crc.o \
libavutil/des.o libavutil/error.o libavutil/eval.o libavutil/fifo.o \
libavutil/intfloat_readwrite.o libavutil/inverse.o libavutil/lfg.o \
libavutil/lls.o libavutil/log.o libavutil/lzo.o libavutil/mathematics.o \
libavutil/md5.o libavutil/mem.o libavutil/opt.o libavutil/pixdesc.o \
libavutil/random_seed.o libavutil/rational.o libavutil/rc4.o \
libavutil/sha.o libavutil/tree.o libavutil/utils.o  -ldl -lm -lpthread \
-lgcc_s

me at machine:~/ffmpeg-shared$ file libavutil/utils.o
libavutil/utils.o: ELF 32-bit LSB relocatable, Renesas SH, version 1 
MathCoPro/FPU/MAU Required (SYSV), not stripped

me at machine:~/ffmpeg-shared$ nm libavutil/utils.o
00000014 T avutil_configuration
00000028 T avutil_license
00000000 T avutil_version

me at machine:~/ffmpeg-shared$ file libavutil/libavutil.so.50 
libavutil/libavutil.so.50: ELF 32-bit LSB shared object, Renesas SH, 
version 1 (SYSV), dynamically linked, stripped

me at machine:~/ffmpeg-shared$ nm libavutil/libavutil.so.50
nm: libavutil/libavutil.so.50: no symbols

Any pointers?

Thanks
Guennadi
---
Guennadi Liakhovetski, Ph.D.
Freelance Open-Source Software Developer
http://www.open-technology.de/


