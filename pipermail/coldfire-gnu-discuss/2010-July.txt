From tarmo.kuuse at proekspert.ee  Fri Jul  2 15:48:32 2010
From: tarmo.kuuse at proekspert.ee (Tarmo Kuuse)
Date: Fri, 02 Jul 2010 18:48:32 +0300
Subject: P&E debugger support in Eclipse broke
Message-ID: <4C2E0A50.8000802@proekspert.ee>

Hi,

After working just fine for over a year, Eclipse suddenly stopped 
recognizing my BDM debugger (the blue USB Coldfire Multilink from P&E 
Micro). All cabling is OK, debugger's LED-s indicate that connection is 
established, target is powered on etc. Symptoms:

1. Attempting to configure the debugger in "Run", "Debug configurations" 
results in message "Discovering configuration: Available devices" being 
displayed for 30 seconds:
http://people.proekspert.ee/tarmok/sgpp/eclipse_discovering.png

2. After 30 seconds error message "Warning: could not obtain device 
list." appears:
http://people.proekspert.ee/tarmok/sgpp/eclipse_device_list.png

I ran command "m68k-elf-sprite -i". It takes nearly 90 seconds to 
execute. The return code is 0 and output is following:

  ~$ m68k-elf-sprite -i
CodeSourcery ColdFire Debug Sprite (Sourcery G++ 4.3-252)
pe: [speed=<n:0-31>&memory-timeout=<n:0-99>] P&E Adaptor
   pe://USBMultilink/PE6015220 - USB1 : USB-ML-CF Rev C (PE6015220)
   pe://CycloneProMaxSerial:1 - COM1 : Serial Port 1
   pe://ParallelPortCable:1 - LPT1 : Parallel Port 1 (Address $0378)
ccs: [timeout=<n>&speed=<n>] CCS Protocol
   ccs://$Host:$Port/$Chain_position - Command Converter Server
tblcf: TBLCF Interface
osbdm: Open Source BDM
osbdm: Cannot load OSBDM library 'OSBDM-JM60.DLL'

My P&E debug device is correctly identified. By the way - it appears to 
work OK. The Freescale "CF Flasher" utility can successfully communicate 
with the target, show Flash content etc.

I have no idea what I could have done to cause this. The last thing I 
remember changing in system was loading a new colour profile for the 
monitor and rebooting. That's not a likely suspect.

Have tried so far:
-Replaced P&E BDM devices
-Replaced USB ports
-Reinstalled SourceryG++ (3-4 times), including removal of P&E drivers
-Replaced Sourcery-shipped device drivers with fresh ones from P&E (v. 
10). Sprite refused to digest new DLL-s.

Our tool version is currently locked to 4.3-252, so upgrade is not an 
option. Any advice on how to debug the debugger?

--
Kind regards,
Tarmo Kuuse


From thomasaevans at optusnet.com.au  Thu Jul  8 14:16:08 2010
From: thomasaevans at optusnet.com.au (Tom Evans)
Date: Fri, 09 Jul 2010 00:16:08 +1000
Subject: CodeSourcery + Cygwin1.7 + Windows 7 = BSOD?
Message-ID: <4C35DDA8.9010408@optusnet.com.au>

I'm developing code for a Coldfire CPU.

Part of the build requires external tools to manipulate video files, 
build fonts and to "package" the binary into the shippable load format. 
We also need to copy files around. In other words we want to write 
Makefiles as if we were running on Linux. But one of the tools only runs 
under Windows so we have to use the MINGW port of CodeSourcery instead 
of the Linux one.

So we are running "cs-make" calling the m68k-elf-gcc-4.3.3 compiler 
under Cygwin 1.7.

This works on all the Win-XP machines and VMs at work without any 
problems, but that combination BSODs my Windows 7 dual core laptop in 
seconds. Big fatal Blue-Screen STOPs.

Applications aren't meant to be able to BSOD an operating system, but 
this mix does. It even BSODs the machine in console-only SAFE mode!

It works perfectly with Cygwin 1.5, but not 1.7. It seems to work if I 
run the compiler under cygwin's "make" instead of cs-make (but there are 
unresolvable "/" and "\" path problems with that mix).

I've had BSODs 0x01, 0x19, 0x24, 0x8e and others. Basically "Kernel 
memory is getting corrupted".

Is there anything about Cygwin and Mingw that could explain these? Is 
this a known bad mix?

Or is the best guess that the laptop has buggy chip and device drivers 
that this mix and load are tripping up?

Any suggestions on debugging Windows BSODs welcome. I've dropped the 
mini-dumps on WinDbg, but it doesn't help much.

-- 
=========
Tom Evans
thomasaevans at optusnet.com.au   - Home - preferred
thomasalexanderevans at gmail.com - Home
tom.evans at motec.com.au         - Work

+61 (3) 9857-8805 - Home
+61 (3) 9761-5050 - Work
+61 (405) 776 431 - Mobile


From tom_usenet at optusnet.com.au  Thu Jul 29 06:38:38 2010
From: tom_usenet at optusnet.com.au (Tom Evans)
Date: Thu, 29 Jul 2010 16:38:38 +1000
Subject: cs-make looks to have old Windows related "make -n" bug, any workaround?
In-Reply-To: <201007280755.o6S7tC8a027982@mail12.syd.optusnet.com.au>
References: <201007280755.o6S7tC8a027982@mail12.syd.optusnet.com.au>
Message-ID: <4C5121EE.5020505@optusnet.com.au>

I'm trying to run "cs-make -n" or "cs-make --dry-run" in order to get a 
list of all the commands in order to investigate a different problem.

This gives:

     "/cygdrive/c/Program Files/CodeSourcery/Sourcery G++
      Lite/bin/cs-make" -C system

     process_begin: CreateProcess(NULL, "", ...) failed.
     make (e=87): The parameter is incorrect.
     cs-make: *** [system/system.a] Error 87

You'll notice that the Makefile I'm using calls subsidiary Makes. It has 
targets like:

     usb/usb.a:
         $(MAKE) -C usb

     system/system.a:
         $(MAKE) -C system

     gui/gui.a:
         $(MAKE) -C gui

The "DETAILS" section details that this is a known bug in that version 
of Make.

Is there a workaround for this? Is there a newer build available 
incorporating the patches to fix this?

!! Gnu Make 3.82 was released YESTERDAY !!

This bug probably applies to all of the other distributions (ARM etc).


DETAILS
=======

I've been running this version of cs-make:

     $ cs-make --version
     GNU Make (Sourcery G++ Lite 4.3-208) 3.81

I've just upgraded to the latest to see if it fixed the problem:

     $ cs-make --version
     GNU Make (Sourcery G++ Lite 4.4-215) 3.81
     Copyright (C) 2006  Free Software Foundation, Inc.

It is still based on Make 3.81. It has the same bug as the previous one.

Google finds the following reports matching this from 2006 and 2008:

     http://savannah.gnu.org/bugs/?16362

     $ make --version
     GNU Make 3.81

     Sat May 27 13:09:45 2006, comment #3:

     The following patch fixes this bug:
     ...

Also:

     http://www.mail-archive.com/make-w32 at gnu.org/msg01859.html

     Re: process_begin: CreateProcess(NULL, "", ...) failed
     Eli Zaretskii
     Mon, 17 Mar 2008 13:39:36 -0700
     > Date: Mon, 17 Mar 2008 14:34:06 +0100
     > From: Fabrice GIRARDOT <[EMAIL PROTECTED]>
     >
     > Using GNU Make 3.81 compiled for Win32, I got this error message
     > when I run Make with the "-n" option :
     >
     > process_begin: CreateProcess(NULL, "", ...) failed
     Yes, this is a known bug in Make 3.81.  If you can build Make
     from sources, please try the following two patches (apply
     them in order):

-- 
=========
Tom Evans




From carlos at codesourcery.com  Thu Jul 29 15:32:33 2010
From: carlos at codesourcery.com (Carlos O'Donell)
Date: Thu, 29 Jul 2010 11:32:33 -0400
Subject: [coldfire-gnu-discuss] cs-make looks to have old Windows related
 "make -n" bug, any workaround?
In-Reply-To: <4C5121EE.5020505@optusnet.com.au>
References: <201007280755.o6S7tC8a027982@mail12.syd.optusnet.com.au> <4C5121EE.5020505@optusnet.com.au>
Message-ID: <4C519F11.7060609@codesourcery.com>

On 7/29/2010 2:38 AM, Tom Evans wrote:
> I'm trying to run "cs-make -n" or "cs-make --dry-run" in order to get a
> list of all the commands in order to investigate a different problem.
>
> This gives:
>
> "/cygdrive/c/Program Files/CodeSourcery/Sourcery G++
> Lite/bin/cs-make" -C system
>
> process_begin: CreateProcess(NULL, "", ...) failed.
> make (e=87): The parameter is incorrect.
> cs-make: *** [system/system.a] Error 87

Yes, this is a known bug in 3.81 with -n.

> !! Gnu Make 3.82 was released YESTERDAY !!

We will be incorporating version 3.82 into a future release.

If you need a fix sooner please contact sales at codesourcery.com.

Cheers,
Carlos.
--
Carlos O'Donell
CodeSourcery
carlos at codesourcery.com
(650) 331-3385 x716


