From yibbidy at optusnet.com.au  Thu Feb 11 10:08:36 2010
From: yibbidy at optusnet.com.au (Shaun James)
Date: Thu, 11 Feb 2010 21:08:36 +1100
Subject: Compiling Freescale MQX with GCC
Message-ID: <1A969600-7A58-46EF-847D-5E794B1D16B8@optusnet.com.au>

Hi,

I am considering moving to linux based tools from Codewarrior.  Has anyone had any experience compiling the complimentary MQX RTOS and communications stacks with the GNU tools?

Thanks,
Shaun

From maxim at codesourcery.com  Thu Feb 11 17:22:34 2010
From: maxim at codesourcery.com (Maxim Kuvyrkov)
Date: Thu, 11 Feb 2010 20:22:34 +0300
Subject: [coldfire-gnu-discuss] Compiling Freescale MQX with GCC
In-Reply-To: <1A969600-7A58-46EF-847D-5E794B1D16B8@optusnet.com.au>
References: <1A969600-7A58-46EF-847D-5E794B1D16B8@optusnet.com.au>
Message-ID: <4B743CDA.9030503@codesourcery.com>

On 2/11/10 1:08 PM, Shaun James wrote:
> Hi,
>
> I am considering moving to linux based tools from Codewarrior.  Has anyone had any experience compiling the complimentary MQX RTOS and communications stacks with the GNU tools?

Shaun,

Building MQX with GNU tools is quite complicated, it requires 
non-trivial changes to the MQX source code.  Using the MQX libraries 
built with CodeWarrior is not an option either as CodeWarrior uses a 
different ABI from GCC.  There are also various incompatibilities 
between the binaries built with CodeWarrior and the GNU linker.  All and 
all, it is hard.

Nevertheless, we at CodeSourcery are actively working on adding MQX 
support to our commercial SourceryG++ tools, and, possibly as soon as 
this Spring, we will be releasing it to our customers.

Regards,

-- 
Maxim Kuvyrkov
CodeSourcery
maxim at codesourcery.com
(650) 331-3385 x724


From yibbidy at optusnet.com.au  Fri Feb 12 08:31:00 2010
From: yibbidy at optusnet.com.au (Shaun James)
Date: Fri, 12 Feb 2010 19:31:00 +1100
Subject: [coldfire-gnu-discuss] Compiling Freescale MQX with GCC 
Message-ID: <AB3D9D76-F170-4914-A0A9-5CBC09C908FE@optusnet.com.au>

Hi Maxim,

Thanks for the speedy reply!

It's good to hear that you are working on it, though it's not the end of the world for me if it's delayed.  I am looking for an RTOS that can be built with GNU tools, and MQX was one option that I thought I'd look into.  I'm not sure how fast Freescale will port it to their older processors though, so an RTOS like FreeRTOS, RTEMS, etc might be a better fit for me right now as they do compile with GCC.

Thanks again,

Shaun

From Corrin.Meyer at dornerworks.com  Fri Feb 12 13:44:17 2010
From: Corrin.Meyer at dornerworks.com (Corrin Meyer)
Date: Fri, 12 Feb 2010 08:44:17 -0500
Subject: [coldfire-gnu-discuss] Compiling Freescale MQX with GCC 
In-Reply-To: <AB3D9D76-F170-4914-A0A9-5CBC09C908FE@optusnet.com.au>
References: <AB3D9D76-F170-4914-A0A9-5CBC09C908FE@optusnet.com.au>
Message-ID: <D3E384327F5C6D48AADCEA84160B7D730107F865@mcbain.dw.local>

Shaun,

Another RTOS you might look at would be TN-Kernel
(http://www.tnkernel.com/); it is similar in scope to FreeRTOS.  It was
originally designed for ARM processors but there are ports to the
Freescale HCS08 and ColdFire architectures as well.

Corrin Meyer

> -----Original Message-----
> From: Shaun James [mailto:yibbidy at optusnet.com.au]
> Sent: Friday, February 12, 2010 3:31 AM
> To: coldfire-gnu-discuss at codesourcery.com
> Subject: Re: [coldfire-gnu-discuss] Compiling Freescale MQX with GCC
> 
> Hi Maxim,
> 
> Thanks for the speedy reply!
> 
> It's good to hear that you are working on it, though it's not the end
of
> the world for me if it's delayed.  I am looking for an RTOS that can
be
> built with GNU tools, and MQX was one option that I thought I'd look
into.
> I'm not sure how fast Freescale will port it to their older processors
> though, so an RTOS like FreeRTOS, RTEMS, etc might be a better fit for
me
> right now as they do compile with GCC.
> 
> Thanks again,
> 
> Shaun


From list-bastian.schick at sciopta.com  Fri Feb 12 13:53:18 2010
From: list-bastian.schick at sciopta.com (42Bastian)
Date: Fri, 12 Feb 2010 14:53:18 +0100
Subject: [coldfire-gnu-discuss] Compiling Freescale MQX with GCC
In-Reply-To: <D3E384327F5C6D48AADCEA84160B7D730107F865@mcbain.dw.local>
References: <AB3D9D76-F170-4914-A0A9-5CBC09C908FE@optusnet.com.au> <D3E384327F5C6D48AADCEA84160B7D730107F865@mcbain.dw.local>
Message-ID: <4B755D4E.5080805@sciopta.com>

Corrin

> Another RTOS you might look at would be TN-Kernel
> (http://www.tnkernel.com/); it is similar in scope to FreeRTOS.  It was
> originally designed for ARM processors but there are ports to the
> Freescale HCS08 and ColdFire architectures as well.

Also to mention the one in my signature , which works just fine with GCC
;-) (ARM,PPC and CF).

-- 
42Bastian
+
| http://www.sciopta.com
| Fastest direct message passing kernel.
| IEC61508 certified.
+


From leigh.eugene at promwad.com  Tue Feb 23 18:17:11 2010
From: leigh.eugene at promwad.com (Eugene Leigh)
Date: Tue, 23 Feb 2010 20:17:11 +0200
Subject: FreeRTOS on mcf51cn128 with GCC
Message-ID: <4B841BA7.9080907@promwad.com>

Hi All

I'm trying to use FreeRTOS compiled with GCC 4.4.1 from CodeSourcery for
Coldfire mcf51cn.

I have compiled FreeRTOS CodeWarrior demo for MCF51CN128 with GCC.
Adapted makefile from example for MCF52233 and trying to run an LED task.

It look like I have a problem with context switching. Inserting
breakpoints into vPortYieldISR and stepping it look like it jumps on
reset after switching back to LED task:
- vPortStartFirstTask: (LED)
- vPortYieldISR: (IDLE)
- vPortYieldISR:
stores context of current task, restores context of LED task (doesn't
look like a garbage or pointing out of stack)
__cs3_interrupt_vector_coldfire()

Compiler options are the same as for MCF52233 apart from cpuid and liker
script.

Any ideas?
Thanks

Eugene



